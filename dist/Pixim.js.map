{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/content/ManifestBase.ts","../src/modules/utils/index.ts","../src/modules/loader/LoaderBase.ts","../src/modules/loader/BlobLoader.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts","../src/modules/loader/JsLoader.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * {@link https://tawaship.github.io/Emitter/index.html | @tawaship/emitter}\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { ITickerData } from './Application';\r\nimport { Emitter } from './Emitter';\r\nimport { Task as _Task } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\nexport interface ITaskDelegate {\r\n    (e: ITickerData): void;\r\n}\r\n\r\n/**\r\n * {@link https://tawaship.github.io/Task/index.html | @tawaship/task}\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * {@link http://pixijs.download/v5.3.2/docs/docs/PIXI.Container.html}\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * {@link http://pixijs.download/v5.3.2/docs/PIXI.Application.html | PIXI.Application]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data for {@link http://pixijs.download/v5.3.2/docs/PIXI.Application.html | PIXI.Application} constructor.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IManifestClass {\r\n\tnew(type: string): ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport type TManifestResourceVersion = LoaderBase.TLoaderResourceVersion;\r\n\r\nexport interface IManifestLoaderXhrOptionFacotryDelegate {\r\n\t(type: string, url: string): LoaderBase.ILoaderXhrOption;\r\n}\r\n\r\nexport type TManifestLoaderXhrOption = IManifestLoaderXhrOptionFacotryDelegate | boolean | LoaderBase.ILoaderXhrOption;\r\n\r\nexport interface IManifestLoaderOption {\r\n\tbasepath: string;\r\n\tversion: TManifestResourceVersion;\r\n\txhr: TManifestLoaderXhrOption;\r\n\ttypeOptions: { [key: string]: any };\r\n}\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class ManifestBase<TTarget, TRawResource, TResource extends LoaderBase.LoaderResource<TRawResource>> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\tprivate _type: string;\r\n\t\r\n\tconstructor(type: string) {\r\n\t\tsuper();\r\n\t\tthis._type = type;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: IManifestLoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TRawResource> = {};\r\n\t\t\r\n\t\tconst loader = this._createLoader();\r\n\t\tloader.onLoaded = (resource: TResource) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t};\r\n\t\t\r\n\t\tconst loaderOptions: LoaderBase.ILoaderOption = Object.assign({}, options.typeOptions, {\r\n\t\t\tbasepath: options.basepath,\r\n\t\t\tversion: options.version,\r\n\t\t\txhr: ((type: string, xhr: TManifestLoaderXhrOption) => {\r\n\t\t\t\tif (typeof(xhr) === 'function') {\r\n\t\t\t\t\treturn (url: string) => {\r\n\t\t\t\t\t\treturn xhr(type, url);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t})(this._type, options.xhr)\r\n\t\t});\r\n\t\t\r\n\t\tconst data: LoaderBase.ILoaderTargetDictionary<TTarget> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tdata[i] = this._data[i].target;\r\n\t\t}\r\n\t\t\r\n\t\treturn loader.loadAllAsync(data, loaderOptions)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _createLoader(): LoaderBase.LoaderBase<TTarget, TRawResource, TResource>;\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolveUri(basepath: string, uri: any, version?: string | number) {\r\n\tif (typeof(uri) !== 'string') {\r\n\t\treturn uri;\r\n\t}\r\n\t\t\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\tbasepath = basepath || '';\r\n\tversion = version || '';\r\n\tconst preUri = resolvePath(basepath, uri);\r\n\t\r\n\treturn version ? resolveQuery(preUri, { _fv: version }) : preUri;\r\n}\r\n\r\n\r\nexport function resolvePath(basepath: string, path: string) {\r\n\tif (!isUrl(path)) {\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\treturn PIXI.utils.url.resolve(basepath, path);\r\n}\r\n\r\nexport function isUrl(uri: any) {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (uri.indexOf('blob:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q: string[] = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport interface IFetchRequestOption {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface ILoaderXhrOption {\r\n\trequestOptions?: IFetchRequestOption;\r\n}\r\n\r\nexport interface ILoaderResolvedParam {\r\n\tsrc: string;\r\n\txhr?: ILoaderXhrOption;\r\n}\r\n\r\nexport interface ILoaderXhrOptionFacotryDelegate {\r\n\t(url: string): ILoaderXhrOption;\r\n}\r\n\r\nexport type TLoaderResourceVersion = string | number;\r\n\r\nexport interface ILoaderOption {\r\n\tbasepath?: string;\r\n\tversion?: TLoaderResourceVersion;\r\n\txhr?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TRawResource, TResource extends LoaderResource<TRawResource>> {\r\n\t/**\r\n\t * Callback when one of the resources has succeeded loading.\r\n\t */\r\n\tonLoaded?: (resource: TResource) => void;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAsync(target: TTarget, options?: ILoaderOption) {\r\n\t\treturn (() => {\r\n\t\t\treturn this._loadAsync(target, options);\r\n\t\t})()\r\n\t\t.then(resource => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.onLoaded && this.onLoaded(resource);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _loadAsync(target: TTarget, options?: ILoaderOption): Promise<TResource>;\r\n\t\r\n\t/**\r\n\t * @link LoaderBase.loaded\r\n\t */\r\n\tloadAllAsync(targets: ILoaderTargetDictionary<TTarget>, options?: ILoaderOption) {\r\n\t\tconst res: ILoaderResourceDictionary<TResource> = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<void>[] = [];\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected _resolveParams(target: any, options: ILoaderOption = {}): ILoaderResolvedParam {\r\n\t\tconst src = utils.resolveUri(options.basepath || '', target, options.version || '');\r\n\t\t\r\n\t\tif (typeof(src) !== 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (!utils.isUrl(src)) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (!options.xhr) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.xhr === true) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc,\r\n\t\t\t\txhr: {}\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.xhr) === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tsrc,\r\n\t\t\t\txhr: options.xhr(src)\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\txhr: options.xhr || {}\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TBlobLoaderRawResource = string;\r\n\r\nexport class BlobLoaderResource extends LoaderBase.LoaderResource<TBlobLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t(window.URL || window.webkitURL).revokeObjectURL(this._data);\r\n\t\tthis._data = '';\r\n\t}\r\n}\r\n\r\nexport type TBlobLoaderTarget = string;\r\n\r\nexport interface IBlobLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TBlobLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<BlobLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class BlobLoader extends LoaderBase.LoaderBase<TBlobLoaderTarget, TBlobLoaderRawResource, BlobLoaderResource> {\r\n\tprotected _loadAsync(target: TBlobLoaderTarget, options: IBlobLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions || {});\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.blob();\r\n\t\t})\r\n\t\t.then(blob => {\r\n\t\t\treturn (window.URL || window.webkitURL).createObjectURL(blob);\r\n\t\t})\r\n\t\t.then(uri => new BlobLoaderResource(uri, null))\r\n\t\t.catch((e: any) => new BlobLoaderResource('', e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { BlobLoader } from './BlobLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture | null;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\t\tthis._data.destroy(true);\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TextureLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource, TextureLoaderResource> {\r\n\tprotected _loadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn this._loadBaseTextureAsync(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst loader = new BlobLoader();\r\n\t\t\t\r\n\t\t\treturn loader.loadAsync(src, { xhr })\r\n\t\t\t\t.then(resource => {\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn this._loadBaseTextureAsync(resource.data);\r\n\t\t\t\t});\r\n\t\t})()\r\n\t\t.then(baseTexture => new TextureLoaderResource(new PIXI.Texture(baseTexture), null))\r\n\t\t.catch(e => new TextureLoaderResource(null, e));\r\n\t}\r\n\t\r\n\tprivate _loadBaseTextureAsync(target: TTextureLoaderTarget) {\r\n\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\ttarget.crossOrigin = 'anonymous';\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<PIXI.BaseTexture>((resolve, reject) => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\tresolve(bt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(baseTexture);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource, TextureLoader.TextureLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new TextureLoader.TextureLoader();\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsonLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource, JsonLoaderResource> {\r\n\tprotected _loadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { JsonLoader } from './JsonLoader';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SpritesheetLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\ttextureVersion?: string | number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource, SpritesheetLoaderResource> {\r\n\tprotected _loadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (typeof target !== 'string') {\r\n\t\t\t\treturn this._loadTextureAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadJsonAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then(textures => new SpritesheetLoaderResource(textures, null))\r\n\t\t.catch(e => new SpritesheetLoaderResource({}, e));\r\n\t}\r\n\t\r\n\tprivate _loadJsonAsync(url: string, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new JsonLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(url, options)\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst json = resource.data;\r\n\t\t\t\t\r\n\t\t\t\tif (!json.meta || !json.meta.image || !json.frames) {\r\n\t\t\t\t\tthrow 'invalid json';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tjson.meta.image = utils.resolveUri(url, json.meta.image);\r\n\t\t\t\t\r\n\t\t\t\tconst data: ISpritesheetJson = {\r\n\t\t\t\t\tframes: json.frames,\r\n\t\t\t\t\tmeta: json.meta\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn this._loadTextureAsync(data, options);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadTextureAsync(json: ISpritesheetJson, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new TextureLoader.TextureLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(json.meta.image, Object.assign({}, options, { version: options.textureVersion || options.version }))\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, json);\r\n\t\t\t\t\r\n\t\t\t\treturn new Promise<PIXI.ITextureDictionary>(resolve => {\r\n\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresolve(ss.textures);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\nimport * as LoaderBase from '../loader/LoaderBase';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource, SpritesheetLoader.SpritesheetLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SpritesheetLoader.SpritesheetLoader();\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl | null;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tthis._data.stop();\r\n\t\t\tthis._data.unload();\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SoundLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource, SoundLoaderResource> {\r\n\tprotected _loadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tconst e = new Error('invalid resource: ' + src);\r\n\t\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tconst e = new Error('invalid resource: ' + src);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\txhr: xhr.requestOptions || {}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})()\r\n\t\t.then(howl => new SoundLoaderResource(howl, null))\r\n\t\t.catch(e => new SoundLoaderResource(null, e));\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource, SoundLoader.SoundLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SoundLoader.SoundLoader();\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource, JsonLoader.JsonLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new JsonLoader.JsonLoader();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption, IManifestLoaderOption, IManifestLoaderXhrOptionFacotryDelegate, TManifestResourceVersion, TManifestLoaderXhrOption, EVENT_LOADER_ASSET_LOADED } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IContentAssetBasepath {\r\n\t[manifestKey: string]: string;\r\n}\r\n\r\nexport interface IContentAssetVersion {\r\n\t[manifestKey: string]: TManifestResourceVersion;\r\n}\r\n\r\nexport interface IContentAssetXhrOption {\r\n\t[manifestKey: string]: TManifestLoaderXhrOption;\r\n}\r\n\r\nexport interface IContentAssetLoaderOption {\r\n\t[manifestKey: string]: { [key: string]: any };\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[manifestKey: string]: ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\toptions: IContentOption;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string | IContentAssetBasepath;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: TManifestResourceVersion | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * A header given when loading an asset, or a function that returns a header.\r\n\t * If a value that can be considered true is specified, fetch API will be used instead of the default Loader when loading each asset.\r\n\t */\r\n\txhr?: TManifestLoaderXhrOption;\r\n\t\r\n\ttypeOptions?: IContentAssetLoaderOption;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i](i);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\tprivate _loadedResourceHandler: (data: { target: any, resource: any }) => void;\r\n\t\r\n    /**\r\n     * {@link EVENT_LOADER_ASSET_LOADED} fired when any of the assets are loaded. \r\n     * @param options \r\n     * @param piximData \r\n     */\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._loadedResourceHandler = (data: { target: any, resource: any }) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, data);\r\n\t\t};\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\toptions,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t};\r\n\t\t\r\n\t\tfor (let i in this._piximData.manifests) {\r\n\t\t\tthis._piximData.manifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._piximData.additionalManifests) {\r\n\t\t\tthis._piximData.additionalManifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget classAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget instanceAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget assetCount() {\r\n\t\treturn this.classAssetCount + this.instanceAssetCount;\r\n\t}\r\n\t\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst options = this._piximData.options;\r\n\t\t\r\n\t\tconst basepath = (() => {\r\n\t\t\tif (typeof(options.basepath) === 'undefined') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.basepath) === 'string') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = options.basepath.replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tbasepath[i] = (options.basepath[i] || '').replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn basepath;\r\n\t\t})();\r\n\t\t\r\n\t\tconst version = (() => {\r\n\t\t\tif (typeof(options.version) === 'undefined') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.version) === 'string' || typeof(options.version) === 'number') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = options.version;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tversion[i] = options.version[i] || '';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn version;\r\n\t\t})();\r\n\t\t\r\n\t\tconst xhr = (() => {\r\n\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\txhr[i] = options.xhr || false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn xhr;\r\n\t\t})();\r\n\t\t\r\n\t\tconst typeOptions = (() => {\r\n\t\t\tif (typeof(options.typeOptions) === 'undefined') {\r\n\t\t\t\tconst typeOptions: IContentAssetLoaderOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\ttypeOptions[i] = [];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn typeOptions;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst typeOptions: IContentAssetLoaderOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\ttypeOptions[i] = options.typeOptions[i] || {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn typeOptions;\r\n\t\t})();\r\n\t\t\r\n\t\tconst loaderOptions: { [manifestKey: string]: IManifestLoaderOption } = {};\r\n\t\tfor (let i in manifests) {\r\n\t\t\tloaderOptions[i] = {\r\n\t\t\t\tbasepath: basepath[i],\r\n\t\t\t\tversion: version[i],\r\n\t\t\t\txhr: xhr[i],\r\n\t\t\t\ttypeOptions: typeOptions[i]\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tkeys.push(i);\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[i];\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync(loaderOptions[i]));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TJsLoaderRawResource = string;\r\n\r\nexport class JsLoaderResource extends LoaderBase.LoaderResource<TJsLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = '';\r\n\t}\r\n\t\r\n\tref() {\r\n\t\tconst script = document.body.appendChild(document.createElement('script'));\r\n\t\tscript.text = this._data;\r\n\t}\r\n}\r\n\r\nexport type TJsLoaderTarget = string;\r\n\r\nexport interface IJsLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsLoader extends LoaderBase.LoaderBase<TJsLoaderTarget, TJsLoaderRawResource, JsLoaderResource> {\r\n\tprotected _loadAsync(target: TJsLoaderTarget, options: IJsLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions || {});\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.text();\r\n\t\t})\r\n\t\t.then(text => new JsLoaderResource(text, null))\r\n\t\t.catch((e: any) => new JsLoaderResource('', e));\r\n\t}\r\n}"],"names":["Emitter","this","_events","prototype","_on","type","callback","once","const","events","i","length","push","Emitter$1","on","off","splice","_emit","context","targets","event","let","apply","args","emit","len","arguments","ref","concat","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","configurable","set","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","Object","defineProperties","_Task","tasks","super","_piximData","emitter","constructor","call","Container","superclass","taskEnabledChildren","taskEnabled","updateTask","e","PIXI","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","ManifestBase","_data","_resources","_type","count","options","unrequired","target","keys","getAsync","Promise","resolve","res","loader","_createLoader","onLoaded","resource","xhr","loaderOptions","assign","typeOptions","basepath","version","url","data","loadAllAsync","resources","error","destroyResources","resolveUri","uri","isUrl","preUri","resolvePath","resolveQuery","_fv","path","utils","indexOf","queries","q","t","split","search","join","LoaderResource","_error","LoaderBase","loadAsync","_loadAsync","promises","loop","all","_resolveParams","src","utils.resolveUri","utils.isUrl","BlobLoaderResource","URL","webkitURL","revokeObjectURL","LoaderBase.LoaderResource","BlobLoader","fetch","requestOptions","ok","statusText","blob","createObjectURL","catch","LoaderBase.LoaderBase","TextureLoaderResource","removeCache","texture","Texture","removeFromCache","baseTexture","BaseTexture","TextureLoader","_loadBaseTextureAsync","HTMLImageElement","HTMLVideoElement","crossOrigin","reject","bt","from","valid","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","JsonLoaderResource","JsonLoader","json","SpritesheetLoaderResource","SpritesheetLoader","_loadTextureAsync","_loadJsonAsync","textures","meta","image","frames","textureVersion","ss","Spritesheet","parse","TextureLoader.TextureLoaderResource","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","_loadedResourceHandler","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","classAssetCount","instanceAssetCount","assetCount","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","total","manifest","resolver","j","JsLoaderResource","createElement","text","JsLoader"],"mappings":"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","x_google_ignoreList":[0,2]}