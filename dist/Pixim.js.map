{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/ContentManifestBase.ts","../src/modules/ContentImageManifest.ts","../src/modules/ContentSpritesheetManifest.ts","../src/modules/ContentSoundManifest.ts","../src/modules/ContentDeliver.ts","../src/modules/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport interface IManifestDictionary {\r\n\t[name: string]: string;\r\n}\r\n\r\nexport interface IPreManifest {\r\n\turl: string;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IPreManifestDictionary {\r\n\t[name: string]: IPreManifest;\r\n}\r\n\r\nexport interface IPostManifest extends IPreManifest {\r\n\t//name: string;\r\n}\r\n\r\nexport interface IPostManifestDictionary {\r\n\t[name: string]: IPostManifest;\r\n}\r\n\r\nexport interface IContentManifestOption {\r\n\tunrequired?: boolean\r\n}\r\n\r\nexport interface ILoadedResource {\r\n\tresource: any;\r\n\terror: boolean;\r\n}\r\n\r\nexport interface ILoadedResourceDictionary {\r\n\t[name: string]: ILoadedResource;\r\n}\r\n\r\nexport interface IResourceDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IResourceDictionary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\n// const _cache: IResourceDictionary = {};\r\n\r\nexport abstract class ContentManifestBase {\r\n\tprivate _manifests: IPreManifestDictionary = {};\r\n\t\r\n\t/**\r\n\t * Register manifests.\r\n\t * \r\n\t * @param manifests Defined manifests.\r\n\t * @param option Manifest option data.\r\n\t */\r\n\tadd(manifests: IManifestDictionary, options: IContentManifestOption = {}): void {\r\n\t\tconst unrequired: boolean = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tthis._manifests[i] = {\r\n\t\t\t\turl: manifests[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t * \r\n\t * @param basepath Basement directory path of assets.\r\n\t */\r\n\tgetAsync(basepath: string, version: string, useCache: boolean): Promise<IResourceDictionary> {\r\n\t\tconst manifests: IPreManifestDictionary = this._manifests;\r\n\t\t\r\n\t\tconst resources: IResourceDictionary = {};\r\n\t\tconst loadable: IPostManifestDictionary = {};\r\n\t\t//const cache = _cache;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst manifest: IPreManifest = manifests[i];\r\n\t\t\tconst url: string = this._resolvePath(manifest.url, basepath);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// query parameter is invalid for resource cache\r\n\t\t\t//const name: string = url.replace(/\\?.*/, '');\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tif (cache[name]) {\r\n\t\t\t\tresources[i] = cache[name];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tloadable[i] = {\r\n\t\t\t\turl,\r\n\t\t\t//\tname,\r\n\t\t\t\tunrequired: manifest.unrequired\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (Object.keys(loadable).length === 0) {\r\n\t\t\treturn Promise.resolve(resources);\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(loadable, version, useCache)\r\n\t\t\t.then((res: ILoadedResourceDictionary) => {\r\n\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\tresources[i] = res[i].resource;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tif (!res[i].error) {\r\n\t\t\t\t\t\tcache[loadable[i].name] = res[i].resource;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn resources;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string, useTextureCache: boolean): Promise<ILoadedResourceDictionary> {\r\n\t\treturn Promise.resolve({});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Normalize asset path.\r\n\t */\r\n\tprivate _resolvePath(path: string, basepath: string): string {\r\n\t\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\t\treturn path;\r\n\t\t} else {\r\n\t\t\treturn PIXI.utils.url.resolve(basepath, path);\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedImageResource extends ILoadedResource {\r\n\tresource: PIXI.Texture\r\n}\r\n\r\nexport interface ILoadedImageResourceDictionary {\r\n\t[name: string]: ILoadedImageResource;\r\n}\r\n\r\nexport class ContentImageManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string, useCache: boolean): Promise<ILoadedImageResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedImageResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!useCache) {\r\n\t\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\t\tif (resource.texture) {\r\n\t\t\t\t\t\tPIXI.Texture.removeFromCache(resource.texture);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (resource.texture.baseTexture) {\r\n\t\t\t\t\t\t\tPIXI.BaseTexture.removeFromCache(resource.texture.baseTexture);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tnext();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedImageResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: resource.texture,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSpritesheetResource extends ILoadedResource {\r\n\tresource: PIXI.ITextureDictionary\r\n}\r\n\r\nexport interface ILoadedSpritesheetResourceDictionary {\r\n\t[name: string]: ILoadedSpritesheetResource;\r\n}\r\n\r\nexport class ContentSpritesheetManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string, useCache: boolean): Promise<ILoadedSpritesheetResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSpritesheetResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!useCache) {\r\n\t\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\t\tif (resource.textures) {\r\n\t\t\t\t\t\tfor (let i in resource.textures) {\r\n\t\t\t\t\t\t\tconst texture = resource.textures[i];\r\n\t\t\t\t\t\t\tif (!texture) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (texture.baseTexture) {\r\n\t\t\t\t\t\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.texture) {\r\n\t\t\t\t\t\tPIXI.Texture.removeFromCache(resource.texture);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (resource.texture.baseTexture) {\r\n\t\t\t\t\t\t\tPIXI.BaseTexture.removeFromCache(resource.texture.baseTexture);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tnext();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedSpritesheetResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!manifests[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst textures: PIXI.ITextureDictionary = resource.textures || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst error: boolean = !!resource.error;\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: textures,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSoundResource extends ILoadedResource {\r\n\tresource: Howl\r\n}\r\n\r\nexport interface ILoadedSoundResourceDictionary{\r\n\t[name: string]: ILoadedSoundResource;\r\n}\r\n\r\nexport class ContentSoundManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string, useCache: boolean): Promise<ILoadedSoundResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSoundResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst res: ILoadedSoundResourceDictionary = {};\r\n\t\t\t\r\n\t\t\tfunction loadedHandler(key: string, howl: Howl, error: boolean): void {\r\n\t\t\t\tres[key] = {\r\n\t\t\t\t\tresource: howl,\r\n\t\t\t\t\terror\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif (++loadedCount < loadCount) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet loadCount: number = 0;\r\n\t\t\tlet loadedCount:number  = 0;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tif (!Howl) {\r\n\t\t\t\t\tconsole.warn('You need \"howler.js\" to load sound asset.');\r\n\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t++loadCount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (useCache) {\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst _i = i;\r\n\t\t\t\tconst url =\r\n\t\t\t\t\tversion\r\n\t\t\t\t\t?`${manifests[_i].url}${manifests[_i].url.match(/\\?/) ? '&' : '?'}_fv=${version}`\r\n\t\t\t\t\t: manifests[_i].url;\r\n\t\t\t\t\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc: url,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tloadedHandler(_i, howl, false);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tif (!manifests[_i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [_i]: manifests[_i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tloadedHandler(_i, howl, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from './Container';\r\nimport { IContentResourceDictionary } from './ContentManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { IResourceDictionary, IContentResourceDictionary, IManifestDictionary, IContentManifestOption } from './ContentManifestBase';\r\nimport { ContentImageManifest } from './ContentImageManifest';\r\nimport { ContentSpritesheetManifest } from './ContentSpritesheetManifest';\r\nimport { ContentSoundManifest } from './ContentSoundManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary } from './ContentDeliver';\r\n\r\nexport type TContentManifestType = 'images' | 'spritesheets' | 'sounds';\r\n\r\nexport interface IContentAssetVersion {\r\n\timages?: string;\r\n\tspritesheets?: string;\r\n\tsounds?: string;\r\n}\r\n\r\nexport interface IContentAssetCache {\r\n\timages?: boolean;\r\n\tspritesheets?: boolean;\r\n\tsounds?: boolean;\r\n}\r\n\r\nexport interface IContentManifests { \r\n\timages: ContentImageManifest;\r\n\tspritesheets: ContentSpritesheetManifest;\r\n\tsounds: ContentSoundManifest;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\tuseCache: IContentAssetCache;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: string | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * Whether cache textures.\r\n\t */\r\n\tuseCache?: boolean | IContentAssetCache;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\treturn {\r\n\t\timages: new ContentImageManifest(),\r\n\t\tspritesheets: new ContentSpritesheetManifest(),\r\n\t\tsounds: new ContentSoundManifest()\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\nexport class Content {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tconst basepath: string = (options.basepath || '').replace(/([^/])$/, '$1/');\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\toptions.version = {\r\n\t\t\t\timages: options.version || '',\r\n\t\t\t\tspritesheets: options.version || '',\r\n\t\t\t\tsounds: options.version || ''\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.useCache) !== 'object') {\r\n\t\t\toptions.useCache = {\r\n\t\t\t\timages: options.useCache || false,\r\n\t\t\t\tspritesheets: options.useCache || false,\r\n\t\t\t\tsounds: options.useCache || false\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\tuseCache: options.useCache || false,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tcontentDeliverData.resources.images = {};\r\n\t\tcontentDeliverData.resources.spritesheets = {};\r\n\t\t\r\n\t\tif (contentDeliverData.resources.sounds) {\r\n\t\t\tfor (let i in contentDeliverData.resources.sounds) {\r\n\t\t\t\tcontentDeliverData.resources.sounds[i].stop();\r\n\t\t\t\tcontentDeliverData.resources.sounds[i].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst version: IContentAssetVersion = this._piximData.version;\r\n\t\tconst useCache: IContentAssetCache = this._piximData.useCache;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IResourceDictionary>[] = [];\r\n\t\tconst keys: TContentManifestType[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type: TContentManifestType = <TContentManifestType>i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tpromises.push(manifests[type].getAsync(basepath, version[type] || '', useCache[type] || false));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then((resolver: IResourceDictionary) => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tfor (let i in e) {\r\n\t\t\t\t\tconsole.error(`Asset '${i}: ${e[i]}' cannot load.`);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n}"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","ContentManifestBase","manifests","options","unrequired","_manifests","url","getAsync","basepath","version","useCache","resources","loadable","manifest","_resolvePath","Object","keys","Promise","resolve","_loadAsync","res","resource","useTextureCache","path","indexOf","PIXI.utils","ContentImageManifest","reject","loader","PIXI.Loader","defaultQueryString","crossOrigin","use","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","load","error","ContentSpritesheetManifest","textures","ContentSoundManifest","loadedHandler","key","howl","loadedCount","loadCount","Howl","console","warn","_i","match","src","onload","onloaderror","ContentDeliver","data","lib","vars","_contents","_contentID","createManifests","images","spritesheets","sounds","Content","piximData","contentDeliverData","config","toString","$","additionalManifests","preloadPromise","postloadPromise","create","Error","ContentClone","get","remove","defineManifests","defineImages","defineSpritesheets","defineSounds","setConfig","defineLibraries","addManifests","addImages","addSpritesheets","addSounds","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","catch","unload","promises","all","resolver","j"],"mappings":";;;;;;;;;;;;;;;;;IAOA,IAAMA,UACF;QACIC,KAAKC,UAAU;;sBAEnBC,eAAIC,MAAMC,UAAUC;QAChB,KAAKF,SAASC;YACV,OAAOJ;;QAGX,KADAM,IAAMC,SAASP,KAAKC,QAAQE,QAAQH,KAAKC,QAAQE,SAAS,IACjDK,IAAI,GAAGA,IAAID,OAAOE,QAAQD;YAC/B,IAAID,OAAOC,GAAGJ,aAAaA;gBACvB,OAAOJ;;;QAIf,OADAO,OAAOG,KAAK;sBAAEN;kBAAUC;YACjBL;yBAQXW,cAAGR,MAAMC;QACL,OAAOJ,KAAKE,IAAIC,MAAMC,WAAU;yBAQpCC,gBAAKF,MAAMC;QACP,OAAOJ,KAAKE,IAAIC,MAAMC,WAAU;yBAQpCQ,eAAIT,MAAMC;QACN,KAAKD,SAASC;YACV,OAAOJ;;QAGX,KADAM,IAAMC,SAASP,KAAKC,QAAQE,SAAS,IAC5BK,IAAI,GAAGA,IAAID,OAAOE,QAAQD;YAC/B,IAAID,OAAOC,GAAGJ,aAAaA;gBAEvB,OADAG,OAAOM,OAAOL,GAAG,IACVR;;;QAGf,OAAOA;yBAEXc,iBAAMX,MAAMY;;;;QACR,KAAKZ;YACD,OAAOH;;QAIX,KAFAM,IAAMC,SAASP,KAAKC,QAAQE,SAAS,IAC/Ba,UAAU,IACPR,IAAID,OAAOE,SAAS,GAAGD,KAAK,GAAGA,KAAK;YACzCF,IAAMW,QAAQV,OAAOC;YACjBS,MAAMZ,QACNE,OAAOM,OAAOL,GAAG,IAErBQ,QAAQN,KAAKO;;QAEjB,KAAKC,IAAIV,MAAIQ,QAAQP,SAAS,GAAGD,OAAK,GAAGA;YACrCQ,QAAQR,KAAGJ,SAASe,MAAMJ,SAASK;;QAEvC,OAAOpB;yBAQXqB,gBAAKlB;;;;QACD,cAAOH,MAAKc,mBAAMX,MAAMH,cAASoB;yBASrCE,iBAAMnB,MAAMY;;;;QACR,cAAOf,MAAKc,mBAAMX,MAAMY,iBAAYK;yBAExCG,oBAASR;;;;QACL,IAAe,QAAXA;YACA,OAAOf;;QAEXM,IAAMU,UAAU;QAChB,KAAKE,IAAIf,QAAQH,KAAKC;YAElB,KADAK,IAAMC,SAASP,KAAKC,QAAQE,SAAS,IAC5BK,IAAID,OAAOE,SAAS,GAAGD,KAAK,GAAGA,KAAK;gBACzCF,IAAMW,QAAQV,OAAOC;gBACjBS,MAAMZ,QACNE,OAAOM,OAAOL,GAAG,IAErBQ,QAAQN,KAAKO;;;QAGrB,KAAKC,IAAIV,MAAIQ,QAAQP,SAAS,GAAGD,OAAK,GAAGA;YACrCQ,QAAQR,KAAGJ,SAASe,MAAMJ,SAASK;;QAEvC,OAAOpB;yBAOXwB;;;;QACI,cAAOxB,MAAKuB,sBAASvB,cAASoB;yBAQlCK,oBAASV;;;;QACL,cAAOf,MAAKuB,sBAASR,iBAAYK;yBAOrCM,iBAAMvB;QAOF,kCAPS,KACLA,cACQH,KAAKC,QAAQE,QAGrBH,KAAKC,UAAU;QAEZD;;QC9IFD;;;;;;MAAgB4B,UCEvBC,OACF,SAAYC,WAAWd;QACnBf,KAAK8B,YAAY;YACbf,SAAoB,QAAXA,UAAkBf,OAAOe;YAClCgB,UAAS;YACTC,QAAQ;YACRH,WAAW;YACXI,OAAO;WAEXjC,KAAKkC,IAAIL;;;;;;;;;;;;;;WAKbM,mBAAIJ;QACA,OAAO/B,KAAK8B,UAAUC;OAE1BI,mBAAIJ,uBAAQA;QACR/B,KAAK8B,UAAUC,UAAUA;sBAK7BG,eAAIL;QACKO,MAAMC,QAAQR,eACfA,YAAY,EAACA;QAIjB,KAFAvB,IAAMgC,OAAOtC,KAAK8B,UAAUD,WAEnBrB,KADI8B,KAAK7B,QACL,IAAGD,IAAIqB,UAAUpB,QAAQD;YAC5BqB,UAAUrB,cAAc+B,YAG9BD,KAAK5B,KAAKmB,UAAUrB;;QAExB,OAAOR;sBAKXwC;;;;QACI,IAAKxC,KAAK8B,UAAUC,SAApB;YAGAzB,IAAMmC,OAAOzC,KAAK8B,UAAUD,UAAU7B,KAAK8B,UAAUE;YACrD,IAAKS;gBAGL,OAAOzC,KAAK8B,UAAUG,QAAQQ,KAAKtB,MAAMnB,KAAK8B,UAAUf,SAASK;;;sBAErEsB,eAAIV;QAEA,OADAhC,KAAK8B,UAAUE,QAAQW,OAAOX,QACvBhC;sBAKX4C;QACI,OAAO5C,KAAK0C,IAAI;sBAKpBG;QACI,OAAO7C,KAAK0C,IAAI1C,KAAK8B,UAAUE,QAAQ;sBAK3Cc;QACI,OAAO9C,KAAK0C,IAAI1C,KAAK8B,UAAUE,QAAQ;sBAK3Ce,cAAGf;QACC,OAAOhC,KAAK0C,IAAIV;sBAKpBgB;QAEI,OADAhD,KAAK8B,UAAUE,SAAS,GACjBhC;sBAKXiD;QAII,OAHAjD,KAAK8B,UAAUD,YAAY,IAC3B7B,KAAK8B,UAAUE,SAAS,GACxBhC,KAAK8B,UAAUG,QAAQ;QAChBjC;sBAKXkD;QACIlD,KAAKiD;OAKTd,mBAAIF;QACA,OAAOjC,KAAK8B,UAAUG;;QCrGjBL;QAGZ,cAAYuB,OAAwCpC;YACnDqC,iBAAMD,OAAOpC,UAEbf,KAAK+B,WAAU,GACf/B,KAAKqD,aAAa;gBACjBC,SAAS,IAAIvD;;;;0DAOfY,cAAGR,MAAcC;YAGhB,OAFAJ,KAAKqD,WAAWC,QAAQ3C,GAAGR,MAAMC,WAE1BJ;0BAMRK,gBAAKF,MAAcC;YAGlB,OAFAJ,KAAKqD,WAAWC,QAAQjD,KAAKF,MAAMC,WAE5BJ;0BAMRY,eAAIT,MAAcC;YAGjB,OAFAJ,KAAKqD,WAAWC,QAAQ1C,IAAIT,MAAMC,WAE3BJ;0BAMRqB,gBAAKlB;;;;YACJ,OAAKH,KAAK8B,UAAUC,kBAIpB/B,KAAKqD,WAAWC,SAAQjC,kBAAKlB,cAASiB;YAE/BpB,QALCA;0BAWTsB,iBAAMnB,MAAcY;;;;YACnB,OAAKf,KAAK8B,UAAUC,kBAIpB/B,KAAKqD,WAAWC,SAAQhC,mBAAMnB,MAAMY,iBAAYK;YAEzCpB,QALCA;0BAWTwB;;;;YACC,OAAKxB,KAAK8B,UAAUC,kBAIpB/B,KAAKqD,WAAWC,SAAQ9B,mBAAWJ;YAE5BpB,QALCA;0BAWTyB,oBAASV;;;;YACR,OAAKf,KAAK8B,UAAUC,kBAIpB/B,KAAKqD,WAAWC,SAAQ7B,sBAASV,iBAAYK;YAEtCpB,QALCA;0BAWT0B,iBAAMvB;YAGL,kCAHoB,KACpBH,KAAKqD,WAAWC,QAAQ5B,MAAMvB,OAEvBH;0BAGRkD;YACCE,gBAAMF,oBACNlD,KAAK0B;;MAtGmB6B,OCQbC;QAGZ;;;;YACCJ,uBAEApD,KAAKqD,aAAa;gBACjBZ,MAAM,IAAIb,OAAK,IAAI5B;gBACnByD,sBAAqB;eAGtBzD,KAAKqD,WAAWZ,KAAKG;;;;;;;;;;;;;;;mCActBc,sBAAWC;YACVrD,IAAMmC,OAAazC,KAAKqD,WAAWZ;YAE9BzC,KAAKqD,WAAWZ,KAAKV,YAsB1BU,KAAKD,KAAKmB,IAGVlB,KAAKhB,SAASzB,MAAM2D;WAMrBxB,mBAAIyB;YACH,OAAO5D,KAAKqD,WAAWZ,KAAKV;WAG7BI,mBAAIyB,2BAAY7B;YACf/B,KAAKqD,WAAWZ,KAAKV,UAAUA;WAMhCI,mBAAIsB;YACH,OAAOzD,KAAKqD,WAAWI;WAGxBtB,mBAAIsB,mCAAoB1B;YACvB/B,KAAKqD,WAAWI,sBAAsB1B;WAMvCI,mBAAIM;YACH,OAAOzC,KAAKqD,WAAWZ;+BAQxBS;;;;YACCE,qBAAMF,oBAAW9B,OACjBpB,KAAKqD,WAAWZ,KAAKS;;MA5FQW,iBCsElBC;;;;;;MAAcD;IAK3B,SAASE,YAAYC,KAAqBL;QACzC,MAAIK,eAAeR,eAClBQ,IAAIN,WAAWC,IAEVK,IAAIP,sBAHV;YAUA,KAFAnD,IAAM2D,WAAiC,IAE9BzD,IAAI,GAAGA,IAAIwD,IAAIC,SAASxD,QAAQD;gBACxCyD,SAASvD,KAAKsD,IAAIC,SAASzD;;YAG5B,KAAKU,IAAIV,MAAI,GAAGA,MAAIyD,SAASxD,QAAQD,OAAK;gBACzCF,IAAM4D,QAAQD,SAASzD;gBAEnB0D,iBAAiBL,kBACpBE,YAAYG,OAAOP;;;;QAKTQ;QAOZ,qBAAYC,aAA0BC;;qDAAJ,gDAAuC;YACxEjB;YAEA9C,IAAMgE,MAAwB,IAAIC,iBAAiBH;YACnDE,IAAIE,QAEJF,IAAIG,KAAKC,MAAMC,WAAW;YAE1BrE,IAAMsE,aAA0BP,aAAaO,eAAc;YAE3D5E,KAAKqD,aAAa;gBACjBwB,QAAO;qBACPP;gBACAQ,WAAWT,aAAaS,aAAaC,SAASC;gBAC9CC,QAAQ;gBACRC,cAAc;gBACdC,OAAO;gBACPC,UAAU;eAGiBpF,KAAKqD,WAAWiB,IAAIe,OAEzCnD,cAAKoD;gBAEXvB,YAAY/D,OAAKqD,WAAWiB,IAAIiB,OAAO;2BAAED;;iBAGtCV,eAEF5E,KAAKkF,gBADa,MAAfN;gBAEF5E,OAAKwF;;gBAILZ,WAAW5E;;;;;;;;;;;;;;;;;;;;;;eAMfmC,mBAAImC;YACH,OAAOtE,KAAKqD,WAAWiB;WAGxBnC,mBAAIoD;YACH,OAAOvF,KAAKqD,WAAWiB,IAAIiB;WAG5BpD,mBAAIsC;YACH,OAAOzE,KAAKqD,WAAWiB,IAAIG;WAG5BtC,mBAAI2C;YACH,OAAO9E,KAAKqD,WAAWyB;WAGxB3C,mBAAI2C,yBAAUA;YACb9E,KAAKqD,WAAWyB,YAAYA,aAAaC,SAASC,MAC9ChF,KAAKqD,WAAWiB,IAAIG,KAAKgB,cAC5BzF,KAAKqD,WAAWyB,UAAUY,YAAY1F,KAAKqD,WAAWiB,IAAIG;iCAOpDkB,qBAAUC;YACjB,SAAS5F,KAAKqD,WAAW4B,OAAOW;iCAMjCC,oBAASD;YACR,OAAI5F,KAAK2F,UAAUC,UAInB5F,KAAKqD,WAAW4B,OAAOW,QAAQ5F,KAAKqD,WAAWiB,IAAIiB,MAAMO,SAAS,IAAIhC;YAH9D9D;iCAWT+F,uBAAYH;YACX,OAAK5F,KAAK2F,UAAUC,SAIpB5F,KAAKqD,WAAWiB,IAAIiB,MAAMS,YAAYhG,KAAKqD,WAAW4B,OAAOW;mBACtD5F,KAAKqD,WAAW4B,OAAOW,OAEvB5F,QANCA;iCAYTiG,uBAAYC,SAAkBC;;YAC7B,4CADiD,cAC1CD,QAAQE,aACbC,eAAMC;gBASN,OARAtG,OAAKuG,OAAOL,UAEZlG,OAAK6F,SAASM,YAEdnG,OAAKqD,WAAW8B,MAAMe,QAAQM,aAAaF;gBAC3CtG,OAAKqD,WAAW+B,SAASc,QAAQM,aAAaN,SAC9ClG,OAAKqD,WAAW4B,OAAOkB,WAAWL,SAASQ;gBAEpCA;;iCAOVC,kBAAOL,SAAkBO;uDAAgC;gBAAExC,WAAU;;YACpE3D,IAAMgG,OAAuBtG,KAAKqD,WAAW8B,MAAMe,QAAQM;YAE3D,OAAKF,QAILtG,KAAK0G,aAAaJ,MAAMG,sBACjBzG,KAAKqD,WAAW8B,MAAMe,QAAQM;mBAC9BxG,KAAKqD,WAAW+B,SAASc,QAAQM,YAEjCxG,QAPCA;iCAaT2G;YAGC,OAFA3G,KAAKqD,WAAWyB,UAAUY,YAAY1F,KAAKqD,WAAWiB,IAAIG,OAEnDzE,KAAK4G;iCAMbA;YAGC,OAFA5G,KAAKqD,WAAWiB,IAAIsC,SAEb5G;iCAMRwE;YAGC,OAFAxE,KAAKqD,WAAWiB,IAAIE,QAEbxE;iCAMR6G,iBAAMC;YAOL,OANIA,SACH9G,KAAKwE,SAELxE,KAAK4G,SAGC5G;WAGRmC,mBAAI+C;YACH,OAAOlF,KAAKqD,WAAW6B;WAGxB/C,mBAAI+C,4BAAaA;YACZlF,KAAKqD,WAAW6B,gBACnB6B,OAAOC,oBAAoB,UAAUhH,KAAKqD,WAAW6B;YAGjDA,gBAKLlF,KAAKqD,WAAW6B,eAAeA,cAC/B6B,OAAOE,iBAAiB,UAAU/B;YAClCA,kBANClF,KAAKqD,WAAW6B,eAAe;iCAYjCgC;YACC,KAAKhG,IAAIV,KAAKR,KAAKqD,WAAW+B;gBAC7BpF,KAAKqD,WAAW+B,SAAS5E,GAAG0C;;YAG7BlD,KAAKkF,eAAe,MACpBlF,KAAKqD,WAAW4B,SAAS,IACzBjF,KAAKqD,WAAW8B,QAAQ;YACxBnF,KAAKqD,WAAW+B,WAAW;iCAM5BlC,mBAAQiE,YAAsBV;YAK7B,OAJAzG,KAAKkH,cAELlH,KAAKqD,WAAWiB,IAAIpB,QAAQiE,YAAYV;YAEjCzG;iCAGA0G,wBAAaJ,MAAsBG;YAC1CH,KAAKpD,QAAQuD;iCAQdjB,sBAAW4B;YACV9G,IAAMmE,OAA0BzE,KAAKqD,WAAWiB,IAAIG,MAC9C4C,IAAWD,QAAQ;gBACxBE,GAAG;gBACHC,GAAG;gBACHC,OAAOxH,KAAKqD,WAAWyB,UAAU2C,eAAeV,OAAOW;gBACvDC,QAAQ3H,KAAKqD,WAAWyB,UAAU8C,gBAAgBb,OAAOc;;YAG1D,OAAIR,EAAEG,QAAQH,EAAEM,SAASlD,KAAK+C,QAAQ/C,KAAKkD,SACnC3H,KAAK8H,aAAaT,EAAEM,QAAQI,SAASV,GAAGW,MAAMX,KAG/CrH,KAAKiI,YAAYZ,EAAEG,OAAOU,SAASb,GAAGc,OAAOd;iCAQrDY,uBAAYT;YACXlH,IAAMmE,OAA0BzE,KAAKqD,WAAWiB,IAAIG,MAC9C2D,IAAYZ,SAASxH,KAAKqD,WAAWyB,UAAU2C,eAAeV,OAAOW,YAErEW,IAAYD,IAAI3D,KAAK+C,QAAQ/C,KAAKkD;YAMxC,OAHAlD,KAAKC,MAAM8C,QAAWY,UACtB3D,KAAKC,MAAMiD,SAAYU,UAEhBrI;iCAQR8H,wBAAaH;YACZrH,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3B4D,IAAYV,UAAU3H,KAAKqD,WAAWyB,UAAU8C,gBAAgBb,OAAOc,aAEvEO,IAAIC,IAAI5D,KAAKkD,SAASlD,KAAK+C;YAMjC,OAHA/C,KAAKC,MAAMiD,SAAYU,UACvB5D,KAAKC,MAAM8C,QAAWY,UAEfpI;iCAQRmI,kBAAOG;YACNhI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3B8D,MAAmBD,cAAc;gBACtChB,GAAG;gBACHE,OAAOxH,KAAKqD,WAAWyB,UAAU2C,eAAeV,OAAOW;;YAKxD,OAFAjD,KAAKC,MAAM8D,OAAUD,cAEdvI;iCAQR+H,oBAASO;YACRhI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3B8D,MAAmBD,cAAc;gBACtChB,GAAG;gBACHE,OAAOxH,KAAKqD,WAAWyB,UAAU2C,eAAeV,OAAOW;;YAKxD,OAFAjD,KAAKC,MAAM8D,QAAWD,IAAIf,QAAQxH,KAAKyI,eAAejB,SAAS,IAAIe,IAAIjB;YAEhEtH;iCAQR0I,mBAAQJ;YACPhI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3B8D,MAAmBD,cAAc;gBACtChB,GAAG;gBACHE,OAAOxH,KAAKqD,WAAWyB,UAAU2C,eAAeV,OAAOW;;YAKxD,OAFAjD,KAAKC,MAAM8D,OAAUD,IAAIf,QAAQxH,KAAKyI,eAAejB,QAAQe,IAAIjB,UAE1DtH;iCAQRgI,iBAAMW;YACLrI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3BmE,MAAiBD,YAAY;gBAClCpB,GAAG;gBACHI,QAAQ3H,KAAKqD,WAAWyB,UAAU8C,gBAAgBb,OAAOc;;YAK1D,OAFApD,KAAKC,MAAMmE,MAASD,cAEb5I;iCAQRkI,oBAASS;YACRrI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3BmE,MAAiBD,YAAY;gBAClCpB,GAAG;gBACHI,QAAQ3H,KAAKqD,WAAWyB,UAAU8C,gBAAgBb,OAAOc;;YAK1D,OAFApD,KAAKC,MAAMmE,OAAUD,IAAIjB,SAAS3H,KAAKyI,eAAed,UAAU,IAAIiB,IAAIrB;YAEjEvH;iCAQR8I,oBAASH;YACRrI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG,MAC3BmE,MAAiBD,YAAY;gBAClCpB,GAAG;gBACHI,QAAQ3H,KAAKqD,WAAWyB,UAAU8C,gBAAgBb,OAAOc;;YAK1D,OAFApD,KAAKC,MAAMmE,MAASD,IAAIjB,SAAS3H,KAAKyI,eAAed,SAASiB,IAAIrB;YAE3DvH;iCAGAyI;YACPnI,IAAMmE,OAAOzE,KAAKqD,WAAWiB,IAAIG;YAEjC,OAAO;gBACN6C,GAAGyB,SAAStE,KAAKC,MAAM8D,KAAKQ,QAAQ,MAAM;gBAC1CzB,GAAGwB,SAAStE,KAAKC,MAAMmE,IAAIG,QAAQ,MAAM;gBACzCxB,OAAOuB,SAAStE,KAAKC,MAAM8C,MAAMwB,QAAQ,MAAM;gBAC/CrB,QAAQoB,SAAStE,KAAKC,MAAMiD,OAAOqB,QAAQ,MAAM;;;MAzYnBjJ,YCpEXkJ,sBAAtB;QACSjJ,kBAAqC;;kCAQ7CkC,eAAIgH,WAAgCC;yCAAkC;QACrE7I,IAAM8I,aAAsBD,QAAQC,eAAc;QAElD,KAAKlI,IAAIV,KAAK0I;YACblJ,KAAKqJ,WAAW7I,KAAK;gBACpB8I,KAAKJ,UAAU1I;4BACf4I;;;qCAUHG,oBAASC,UAAkBC,SAAiBC;QAC3CpJ,IAAM4I,YAAoClJ,KAAKqJ,YAEzCM,YAAiC,IACjCC,WAAoC;QAG1C,KAAK1I,IAAIV,KAAK0I,WAAW;YACxB5I,IAAMuJ,WAAyBX,UAAU1I,IACnC8I,MAActJ,KAAK8J,aAAaD,SAASP,KAAKE;YAapDI,SAASpJ,KAAK;qBACb8I;gBAEAF,YAAYS,SAAST;;;QAIvB,OAAqC,MAAjCW,OAAOC,KAAKJ,UAAUnJ,SAClBwJ,QAAQC,QAAQP,aAGjB3J,KAAKmK,WAAWP,UAAUH,SAASC,UACxCrD,eAAM+D;YACN,KAAKlJ,IAAIV,KAAK4J;gBACbT,UAAUnJ,KAAK4J,IAAI5J,GAAG6J;;YAQvB,OAAOV;;qCAOAQ,sBAAWjB,WAAoCO,SAAiBa;QACzE,OAAOL,QAAQC,QAAQ;qCAMhBJ,wBAAaS,MAAcf;QAClC,OAAgC,MAA5Be,KAAKC,QAAQ,cAAiD,MAA7BD,KAAKC,QAAQ,cAC1CD,OAEAE,WAAWnB,IAAIY,QAAQV,UAAUe;;QC7H9BG;;;;;;0GAMFP,sBAAWjB,WAAoCO,SAAiBC;YACzE,OAAO,IAAIO,kBAASC,SAA6DS;gBAChFrK,IAAMsK,SAAsB,IAAIC;gBAMhC,KAAK3J,IAAIV,KAJLiJ,YACHmB,OAAOE,qBAAqB,SAAOrB,UAGtBP;oBACb0B,OAAO1I,IAAI1B,GAAG0I,UAAU1I,GAAG8I,KAAK;wBAC/ByB,cAAa;;;gBAIVrB,YACJkB,OAAOI,cAAKX,UAA+BvH;oBACtCuH,SAASY,YACZC,aAAaC,gBAAgBd,SAASY,UAElCZ,SAASY,QAAQG,eACpBC,iBAAiBF,gBAAgBd,SAASY,QAAQG;oBAIpDtI;;gBAIFxC,IAAM8J,MAAsC;gBAC5CQ,OAAOU,eAAMV,QAAQjB;;oBACpB,KAAKzI,IAAIV,KAAKmJ,WAAW;wBACxBrJ,IAAM+J,WAA4CV,UAAUnJ;wBAE5D,KAAK6J;4BAEJ,YADAM,cAAO,QAAGnK,KAAI0I,UAAU1I,GAAG8I;;wBAI5B,IAAIe,SAASkB,UAAUrC,UAAU1I,GAAG4I;4BAEnC,YADAuB,gBAAO,UAAGnK,KAAI0I,UAAU1I,GAAG8I;;wBAI5Bc,IAAI5J,KAAK;4BACR6J,UAAUA,SAASY;4BACnBM,SAASlB,SAASkB;;;oBAIpBrB,QAAQE;;;;MAvD8BnB,sBCA7BuC;;;;;;4HAMFrB,sBAAWjB,WAAoCO,SAAiBC;YACzE,OAAO,IAAIO,kBAASC,SAAmES;gBACtFrK,IAAMsK,SAAsB,IAAIC;gBAMhC,KAAK3J,IAAIV,KAJLiJ,YACHmB,OAAOE,qBAAqB,SAAOrB,UAGtBP;oBACb0B,OAAO1I,IAAI1B,GAAG0I,UAAU1I,GAAG8I,KAAK;wBAC/ByB,cAAa;;;gBAIVrB,YACJkB,OAAOI,cAAKX,UAA+BvH;oBAC1C,IAAIuH,SAASoB;wBACZ,KAAKvK,IAAIV,KAAK6J,SAASoB,UAAU;4BAChCnL,IAAM2K,UAAUZ,SAASoB,SAASjL;4BAC7ByK,YAILC,aAAaC,gBAAgBF,UAEzBA,QAAQG,eACXC,iBAAiBF,gBAAgBF,QAAQG;;;oBAKxCf,SAASY,YACZC,aAAaC,gBAAgBd,SAASY,UAElCZ,SAASY,QAAQG,eACpBC,iBAAiBF,gBAAgBd,SAASY,QAAQG;oBAIpDtI;;gBAIFxC,IAAM8J,MAA4C;gBAClDQ,OAAOU,eAAMV,QAAQjB;;oBACpB,KAAKzI,IAAIV,KAAKmJ;wBACb,IAAKT,UAAU1I,IAAf;4BAIAF,IAAM+J,WAA4CV,UAAUnJ;4BAE5D,KAAK6J;gCAEJ,YADAM,cAAO,QAAGnK,KAAI0I,UAAU1I,GAAG8I;;4BAI5BhJ,IAAMmL,WAAoCpB,SAASoB,YAAY;4BAEtCpB,SAASkB;4BAClC,IAAIlB,SAASkB,UAAUrC,UAAU1I,GAAG4I;gCAEnC,YADAuB,gBAAO,UAAGnK,KAAI0I,UAAU1I,GAAG8I;;4BAI5Bc,IAAI5J,KAAK;gCACR6J,UAAUoB;gCACVF,SAASlB,SAASkB;;;;oBAIpBrB,QAAQE;;;;MA7EoCnB,sBCAnCyC;;;;;;0GAMFvB,sBAAWjB,WAAoCO,SAAiBC;YACzE,OAAO,IAAIO,kBAASC,SAA6DS;yBAC1EP,MAAsC;gBAE5C,SAASuB,cAAcC,KAAaC,MAAYN;oBAC/CnB,IAAIwB,OAAO;wBACVvB,UAAUwB;+BACVN;yBAGKO,cAAcC,aAIpB7B,QAAQE;;gBAGTlJ,IAAI6K,YAAoB,GACpBD,cAAsB;gBAE1B,KAAK5K,IAAIV,KAAK0I,WAAW;oBACxB,KAAK8C;wBAGJ,OAFAC,QAAQC,KAAK,mDACbvB,cAAO;4BAAGnK,KAAI0I,UAAU1I,GAAG8I;;sBAI1ByC;;;oBAQFzL,IAAM6L,KAAK3L,KACL8I,MACLG,UACIP,UAAUiD,WAAUjD,UAAUiD,IAAI7C,IAAI8C,MAAM,QAAQ,MAAM,gBAAU3C,UACtEP,UAAUiD,IAAI7C,KAEXuC,OAAO,IAAIG,YAAK;wBACrBK,KAAK/C;wBACLgD;4BACCX,cAAcQ,IAAIN,OAAM;;wBAEzBU;;4BACMrD,UAAUiD,IAAI/C,aAKnBuC,cAAcQ,IAAIN,OAAM,KAJvBlB,eAAO,IAAGwB,MAAKjD,UAAUiD,IAAI7C;;;;;gBAdjC,KAAKpI,IAAIV,OAAK0I;;;;;MAxCyBD,sBCS7BuD,iBAGZ,SAAYC;QACXzM,KAAKqD,aAAa;YACjBmE,OAAOiF,KAAKjF;YACZG,QAAQ8E,KAAK9E;YACb+E,KAAKD,KAAKC;YACV/C,WAAW8C,KAAK9C;YAChBgD,MAAMF,KAAKE;;;;;;;;;;;;;;;;;;;yBAOTnF;QACH,OAAOxH,KAAKqD,WAAWmE;4BAMpBG;QACH,OAAO3H,KAAKqD,WAAWsE;4BAMpB+E;QACH,OAAO1M,KAAKqD,WAAWqJ;4BAMpB/C;QACH,OAAO3J,KAAKqD,WAAWsG;4BAMpBgD;QACH,OAAO3M,KAAKqD,WAAWsJ;;ICIzBrM,IAAMsM,YAAuB,IAKzBC,aAAqB;IAWzB,SAASC;QACR,OAAO;YACNC,QAAQ,IAAIrC;YACZsC,cAAc,IAAIxB;YAClByB,QAAQ,IAAIvB;;;QAkBDwB,UAIZ,iBAAY/D,SAA8BgE;yCAAJ,0CAAoCD,QAAQ7J;QACjF/C,IAAMkJ,YAAoBL,QAAQK,YAAY,IAAIR,QAAQ,WAAW;QAErC,mBAArBG,QAAe,YACzBA,QAAQM,UAAU;YACjBsD,QAAQ5D,QAAQM,WAAW;YAC3BuD,cAAc7D,QAAQM,WAAW;YACjCwD,QAAQ9D,QAAQM,WAAW;YAII,mBAAtBN,QAAgB,aAC1BA,QAAQO,WAAW;YAClBqD,QAAQ5D,QAAQO,aAAY;YAC5BsD,cAAc7D,QAAQO,aAAY;YAClCuD,QAAQ9D,QAAQO,aAAY;;QAI9BpJ,IAAM8M,qBAAqB;YAC1B5F,OAAO2F,UAAUE,OAAO7F;YACxBG,QAAQwF,UAAUE,OAAO1F;YACzB+E,KAAKS,UAAUT;YACf/C,WAAW;YACXgD,MAAM;;QAGP3M,KAAKqD,aAAa;YACjBmD,cAAcqG,YAAYS;sBAC1B9D;YACAC,SAASN,QAAQM;YACjBC,UAAUP,QAAQO,aAAY;YAC9B6D,GAAG,IAAIf,eAAeY;YACtBlE,WAAWiE,UAAUjE;YACrBsE,qBAAqBV;YACrBW,gBAAgB;YAChBC,iBAAiB;gCACjBN;;;;;;;IAUFF,QAAOS,kBAAO/B;QACb,6BAD2B,KACvBA,OAAOA,OAAOgB;YACjB,MAAM,IAAIgB,wBAAsBhC;;QAGjC,IAAMiC;YAGL,sBAAY1E;iDAA0B,KACrC/F,mBAAM+F,SAAS0E,aAAaxK;;;;UAJH6J;QAQ3B,OAPkBW,0BAnEZ;YACNR,QAAQ;gBACP7F,OAAO;gBACPG,QAAQ;;YAETuB,WAAW4D;YACXJ,KAAK;WAoEAd,MAIEgB,UAAUhB,OAAOiC,eAHhBA;OASTX,QAAOY,eAAIlC;QACV,OAAOgB,UAAUhB;OASlBsB,QAAOa,kBAAOnC;eACNgB,UAAUhB;OAMlBsB,QAAOc,2BAAgBpC,KAA2Ba,MAA2BtD;QAC5E,wCAD8G,KACzGnJ,KAAKqD,WAAW6F,UAAU0C,QAI/B5L,KAAKqD,WAAW6F,UAAU0C,KAAK1J,IAAIuK,MAAMtD;QAElCnJ,QALCA;OAWTkN,QAAOe,wBAAaxB,MAA2BtD;QAC9C,wCADgF,KACzEnJ,KAAKgO,gBAAgB,UAAUvB,MAAMtD;OAM7C+D,QAAOgB,8BAAmBzB,MAA2BtD;QACpD,wCADsF,KAC/EnJ,KAAKgO,gBAAgB,gBAAgBvB,MAAMtD;OAMnD+D,QAAOiB,wBAAa1B,MAA2BtD;QAC9C,wCADgF,KACzEnJ,KAAKgO,gBAAgB,UAAUvB,MAAMtD;OAQ7C+D,QAAOkB,qBAAU3B;QAKhB,OAHAzM,KAAKqD,WAAWgK,OAAO7F,QAAQiF,KAAKjF,OACpCxH,KAAKqD,WAAWgK,OAAO1F,SAAS8E,KAAK9E;QAE9B3H;OAURkN,QAAOmB,2BAAgB5B;QACtB,KAAKvL,IAAIV,KAAKiM;YACbzM,KAAKqD,WAAWqJ,IAAIlM,KAAKiM,KAAKjM;;QAG/B,OAAOR;4BAMJwG;QACH,OAAOxG,KAAKqD,WAAWmD;yBAQxB8H,wBAAa1C,KAA2Ba,MAA2BtD;QAClE,wCADoG,KAC/FnJ,KAAKqD,WAAWmK,oBAAoB5B,QAIzC5L,KAAKqD,WAAWmK,oBAAoB5B,KAAK1J,IAAIuK,MAAMtD;QAE5CnJ,QALCA;yBAaTuO,qBAAU9B,MAA2BtD;QACpC,wCADsE,KAC/DnJ,KAAKsO,aAAa,UAAU7B,MAAMtD;yBAQ1CqF,2BAAgB/B,MAA2BtD;QAC1C,wCAD4E,KACrEnJ,KAAKsO,aAAa,gBAAgB7B,MAAMtD;yBAQhDsF,qBAAUhC,MAA2BtD;QACpC,wCADsE,KAC/DnJ,KAAKsO,aAAa,UAAU7B,MAAMtD;yBAQ1CuF,mBAAQjC;QACP,KAAKvL,IAAIV,KAAKiM;YACZzM,KAAKqD,WAAWkK,EAAEZ,KAAKnM,KAAKiM,KAAKjM;;QAGnC,OAAOR;yBAMR2O;;QACC,OAAO3O,KAAK4O,yBACVvI;YACA,OAAOrG,OAAK6O;;yBAOfzI;;QACC,KAAKpG,KAAKqD,WAAWkK,EAAEb,IAAIpG;YAC1B,MAAM,IAAIsH,MAAM;;QAGjB,OAAO5N,KAAK2O,eACVtI;YACA,OAAO,IAAIrG,OAAKqD,WAAWkK,EAAEb,IAAIpG,KAAKtG,OAAKqD,WAAWkK;;yBAOzDqB;;QACC,OAAI5O,KAAKqD,WAAWoK,iBACZzN,KAAKqD,WAAWoK,iBAGjBzN,KAAKqD,WAAWoK,iBAAiBzN,KAAK8O,gBAAgB9O,KAAKqD,WAAW6F,WAC3E6F,gBAAOpL;YAGP,MAFA3D,OAAKqD,WAAWoK,iBAAiB,MAE3B9J;;yBAOTkL;;QACC,OAAI7O,KAAKqD,WAAWqK,kBACZ1N,KAAKqD,WAAWqK,kBAGjB1N,KAAKqD,WAAWqK,kBAAkB1N,KAAK8O,gBAAgB9O,KAAKqD,WAAWmK,qBAC5EnH;YACArG,OAAKqD,WAAWqK,kBAAkB;YAElCqB,gBAAOpL;YAGP,MAFA3D,OAAKqD,WAAWqK,kBAAkB,MAE5B/J;;yBAITT;QACC5C,IAAM8M,qBAAqBpN,KAAKqD,WAAW+J;QAQ3C,IANAA,mBAAmBV,MAAM,IACzBU,mBAAmBT,OAAO,IAE1BS,mBAAmBzD,UAAUoD,SAAS;QACtCK,mBAAmBzD,UAAUqD,eAAe,IAExCI,mBAAmBzD,UAAUsD;YAChC,KAAK/L,IAAIV,KAAK4M,mBAAmBzD,UAAUsD;gBAC1CG,mBAAmBzD,UAAUsD,OAAOzM,GAAGgE,QACvC4I,mBAAmBzD,UAAUsD,OAAOzM,GAAGwO;;;yBAKlCF,2BAAgB5F;QACvB5I,IAAMkJ,WAAmBxJ,KAAKqD,WAAWmG,UACnCC,UAAgCzJ,KAAKqD,WAAWoG,SAChDC,WAA+B1J,KAAKqD,WAAWqG,UAC/CC,YAAwC3J,KAAKqD,WAAWkK,EAAE5D;QAIhE,IAAoB,MAFAI,OAAOC,KAAKd,WAAWzI;YAG1C,OAAOwJ,QAAQC;;QAGhB5J,IAAM2O,WAA2C,IAC3CjF,OAA+B;QACrC,KAAK9I,IAAIV,KAAK0I,WAAW;YACxB5I,IAAMH,OAAmDK;YACzDwJ,KAAKtJ,KAAKP,OAEV8O,SAASvO,KAAKwI,UAAU/I,MAAMoJ,SAASC,UAAUC,QAAQtJ,SAAS,IAAIuJ,SAASvJ,UAAS;;QAGzF,OAAO8J,QAAQiF,IAAID,UACjB5I,eAAM8I;YACN,KAAKjO,IAAIV,IAAY,GAAGA,IAAI2O,SAAS1O,QAAOD;gBAG3C,KAAKU,IAAIkO,KAFTzF,UAAUK,KAAKxJ,MAAMmJ,UAAUK,KAAKxJ,OAAO,IAE7B2O,SAAS3O;oBACtBmJ,UAAUK,KAAKxJ,IAAI4O,KAAKD,SAAS3O,GAAG4O;;;YAItCL,gBAAOpL;YACP,KAAKzC,IAAIV,KAAKmD;gBACbsI,QAAQV,kBAAgB/K,WAAMmD,EAAEnD;;YAGjC,MAAMmD;;;;;;;;"}