{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../src/modules/TaskManager.ts","../src/modules/Application.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/ContentManifestBase.ts","../src/modules/ContentImageManifest.ts","../src/modules/ContentSpritesheetManifest.ts","../src/modules/ContentSoundManifest.ts","../src/modules/ContentDeliver.ts","../src/modules/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { ITickerData } from './Application';\r\nimport { Container } from './Container';\r\n\r\nexport interface IObserverDictionary {\r\n\t[name: number]: Container;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _observers: IObserverDictionary = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastTickerData: ITickerData = { delta: 1 };\r\n\r\n/**\r\n * @private\r\n */\r\nexport class TaskManager {\r\n\tconstructor() {\r\n\t\tthrow new Error('This class can not instantiate.');\r\n\t}\r\n\t\r\n\tstatic addObserver(id: number, observer: Container) {\r\n\t\t_observers[id] = observer;\r\n\t\tobserver.updateTask(_lastTickerData);\r\n\t}\r\n\t\r\n\tstatic removeObserver(id: number) {\r\n\t\tdelete(_observers[id]);\r\n\t}\r\n\t\r\n\tstatic done(e: ITickerData) {\r\n\t\t_lastTickerData = e;\r\n\t\t\r\n\t\tfor (let i in _observers) {\r\n\t\t\t_observers[i].updateTask(e);\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './Content';\r\nimport { Emitter } from './Emitter';\r\nimport { TaskManager } from './TaskManager';\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tstage: PIXI.Container;\r\n\tview: HTMLCanvasElement;\r\n\tcontainer: HTMLElement;\r\n\toptions: IApplicationOption;\r\n\tlayers: ILayerDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _roots: IRootDictionary = {};\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tconst stage: PIXI.Container = app.stage;\r\n\t\t\r\n\t\tconst view: HTMLCanvasElement = app.view;\r\n\t\tview.style.position = 'absolute';\r\n\t\t\r\n\t\t/*\r\n\t\tif (piximOptions.container) {\r\n\t\t\tpiximOptions.container.appendChild(view);\r\n\t\t} else {\r\n\t\t\tif (!view.parentNode) {\r\n\t\t\t\tdocument.body.appendChild(view);\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tstage,\r\n\t\t\tview,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\toptions: piximOptions\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\tTaskManager.done({ delta });\r\n\t\t\t//taskHandler(stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tconst f = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\r\n\t\t\t\tf();\r\n\t\t\t} else {\r\n\t\t\t\tconst f = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\r\n\t\t\t\tf();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.stage.addChild(new PIXI.Container());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\t_roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions?: IDestroyOptions) {\r\n\t\tconst root: PIXI.Container = _roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(_roots[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/*\r\n\tstop() {\r\n\t\tif (!this._piximData.isRun) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stop();\r\n\t\tthis._piximData.isRun = false;\r\n\t\t\r\n\t\tconst stage: PIXI.Container = this._piximData.app.stage;\r\n\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\r\n\t\tfor (let i in layers) {\r\n\t\t\tlayers[i].removeChildren();\r\n\t\t}\r\n\t\t\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in _roots) {\r\n\t\t\tthis._destroyRoot(_roots[i]);\r\n\t\t\tkeys.push(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tdelete(_roots[keys[i]]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.ticker.update();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t*/\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\t/*\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stop();\r\n\t\tthis._piximData.isRun = false;\r\n\t\t*/\r\n\t\t\r\n\t\t//const stage: PIXI.Container = this._piximData.app.stage;\r\n\t\t/*\r\n\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\r\n\t\tfor (let i in layers) {\r\n\t\t\tlayers[i].removeChildren();\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in _roots) {\r\n\t\t//\tthis._destroyRoot(_roots[i], stageOptions);\r\n\t\t\tkeys.push(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tdelete(_roots[keys[i]]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\t/*\r\n\t\tif (root.parent) {\r\n\t\t\troot.parent.removeChild(root);\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\t/*\r\n\t\tif (!this._piximData.isRun) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tif (paused) {\r\n\t\t\tthis._piximData.app.stop();\r\n\t\t} else {\r\n\t\t\tthis._piximData.app.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this.taskEnabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport interface IManifestDictionary {\r\n\t[name: string]: string;\r\n}\r\n\r\nexport interface IPreManifest {\r\n\turl: string;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IPreManifestDictionary {\r\n\t[name: string]: IPreManifest;\r\n}\r\n\r\nexport interface IPostManifest extends IPreManifest {\r\n\tname: string;\r\n}\r\n\r\nexport interface IPostManifestDictionary {\r\n\t[name: string]: IPostManifest;\r\n}\r\n\r\nexport interface IContentManifestOption {\r\n\tunrequired?: boolean\r\n}\r\n\r\nexport interface ILoadedResource {\r\n\tresource: any;\r\n\terror: boolean;\r\n}\r\n\r\nexport interface ILoadedResourceDictionary {\r\n\t[name: string]: ILoadedResource;\r\n}\r\n\r\nexport interface IResourceDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IResourceDictionary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _cache: IResourceDictionary = {};\r\n\r\nexport abstract class ContentManifestBase {\r\n\tprivate _manifests: IPreManifestDictionary = {};\r\n\t\r\n\t/**\r\n\t * Register manifests.\r\n\t * \r\n\t * @param manifests Defined manifests.\r\n\t * @param option Manifest option data.\r\n\t */\r\n\tadd(manifests: IManifestDictionary, options: IContentManifestOption = {}): void {\r\n\t\tconst unrequired: boolean = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tthis._manifests[i] = {\r\n\t\t\t\turl: manifests[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t * \r\n\t * @param basepath Basement directory path of assets.\r\n\t */\r\n\tgetAsync(basepath: string, version: string): Promise<IResourceDictionary> {\r\n\t\tconst manifests: IPreManifestDictionary = this._manifests;\r\n\t\t\r\n\t\tconst resources: IResourceDictionary = {};\r\n\t\tconst loadable: IPostManifestDictionary = {};\r\n\t\tconst cache = _cache;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst manifest: IPreManifest = manifests[i];\r\n\t\t\tconst url: string = this._resolvePath(manifest.url, basepath);\r\n\t\t\t\r\n\t\t\t// query parameter is invalid for resource cache\r\n\t\t\tconst name: string = url.replace(/\\?.*/, '');\r\n\t\t\t\r\n\t\t\tif (cache[name]) {\r\n\t\t\t\tresources[i] = cache[name];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tloadable[i] = {\r\n\t\t\t\turl,\r\n\t\t\t\tname,\r\n\t\t\t\tunrequired: manifest.unrequired\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (Object.keys(loadable).length === 0) {\r\n\t\t\treturn Promise.resolve(resources);\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(loadable, version)\r\n\t\t\t.then((res: ILoadedResourceDictionary) => {\r\n\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\tresources[i] = res[i].resource;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!res[i].error) {\r\n\t\t\t\t\t\tcache[loadable[i].name] = res[i].resource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn resources;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedResourceDictionary> {\r\n\t\treturn Promise.resolve({});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Normalize asset path.\r\n\t */\r\n\tprivate _resolvePath(path: string, basepath: string): string {\r\n\t\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\t\treturn path;\r\n\t\t} else {\r\n\t\t\treturn PIXI.utils.url.resolve(basepath, path);\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedImageResource extends ILoadedResource {\r\n\tresource: PIXI.Texture\r\n}\r\n\r\nexport interface ILoadedImageResourceDictionary {\r\n\t[name: string]: ILoadedImageResource;\r\n}\r\n\r\nexport class ContentImageManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedImageResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedImageResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedImageResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: resource.texture,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSpritesheetResource extends ILoadedResource {\r\n\tresource: PIXI.ITextureDictionary\r\n}\r\n\r\nexport interface ILoadedSpritesheetResourceDictionary {\r\n\t[name: string]: ILoadedSpritesheetResource;\r\n}\r\n\r\nexport class ContentSpritesheetManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSpritesheetResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSpritesheetResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedSpritesheetResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!manifests[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst textures: PIXI.ITextureDictionary = resource.textures || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst error: boolean = !!resource.error;\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: textures,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSoundResource extends ILoadedResource {\r\n\tresource: Howl\r\n}\r\n\r\nexport interface ILoadedSoundResourceDictionary{\r\n\t[name: string]: ILoadedSoundResource;\r\n}\r\n\r\nexport class ContentSoundManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSoundResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSoundResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst res: ILoadedSoundResourceDictionary = {};\r\n\t\t\t\r\n\t\t\tfunction loadedHandler(key: string, howl: Howl, error: boolean): void {\r\n\t\t\t\tres[key] = {\r\n\t\t\t\t\tresource: howl,\r\n\t\t\t\t\terror\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif (++loadedCount < loadCount) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet loadCount: number = 0;\r\n\t\t\tlet loadedCount:number  = 0;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tif (!Howl) {\r\n\t\t\t\t\tconsole.warn('You need \"howler.js\" to load sound asset.');\r\n\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t++loadCount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst _i = i;\r\n\t\t\t\tconst url =\r\n\t\t\t\t\tversion\r\n\t\t\t\t\t?`${manifests[_i].url}${manifests[_i].url.match(/\\?/) ? '&' : '?'}_fv=${version}`\r\n\t\t\t\t\t: manifests[_i].url;\r\n\t\t\t\t\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc: url,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tloadedHandler(_i, howl, false);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tif (!manifests[_i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [_i]: manifests[_i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tloadedHandler(_i, howl, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from './Container';\r\nimport { IContentResourceDictionary } from './ContentManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { IResourceDictionary, IContentResourceDictionary, IManifestDictionary, IContentManifestOption } from './ContentManifestBase';\r\nimport { ContentImageManifest } from './ContentImageManifest';\r\nimport { ContentSpritesheetManifest } from './ContentSpritesheetManifest';\r\nimport { ContentSoundManifest } from './ContentSoundManifest';\r\nimport { ContentDeliver, IVariableDictionary, IContentLibrary } from './ContentDeliver';\r\n\r\nexport type TContentManifestType = 'images' | 'spritesheets' | 'sounds';\r\n\r\nexport interface IContentAssetVersion {\r\n\timages?: string;\r\n\tspritesheets?: string;\r\n\tsounds?: string;\r\n}\r\n\r\nexport interface IContentManifests { \r\n\timages: ContentImageManifest;\r\n\tspritesheets: ContentSpritesheetManifest;\r\n\tsounds: ContentSoundManifest;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: string | IContentAssetVersion;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\treturn {\r\n\t\timages: new ContentImageManifest(),\r\n\t\tspritesheets: new ContentSpritesheetManifest(),\r\n\t\tsounds: new ContentSoundManifest()\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\nexport class Content {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tconst basepath: string = (options.basepath || '').replace(/([^/])$/, '$1/');\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\toptions.version = {\r\n\t\t\t\timages: options.version || '',\r\n\t\t\t\tspritesheets: options.version || '',\r\n\t\t\t\tsounds: options.version || ''\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\t$: new ContentDeliver({\r\n\t\t\t\twidth: piximData.config.width,\r\n\t\t\t\theight: piximData.config.height,\r\n\t\t\t\tlib: piximData.lib,\r\n\t\t\t\tresources: {},\r\n\t\t\t\tvars: {}\r\n\t\t\t}),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst version: IContentAssetVersion = this._piximData.version;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IResourceDictionary>[] = [];\r\n\t\tconst keys: TContentManifestType[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type: TContentManifestType = <TContentManifestType>i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tpromises.push(manifests[type].getAsync(basepath, version[type] || ''));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then((resolver: IResourceDictionary) => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tfor (let i in e) {\r\n\t\t\t\t\tconsole.error(`Asset '${i}: ${e[i]}' cannot load.`);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n}"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","_observers","_lastTickerData","delta","TaskManager","Error","addObserver","id","observer","updateTask","removeObserver","done","e","_roots","Application","pixiOptions","piximOptions","super","app","PIXI.Application","stop","stage","view","style","position","autoAdjust","_piximData","isRun","container","document","body","layers","options","ticker","add","f","fullScreen","window","addEventListener","prototypeAccessors","parentNode","appendChild","_hasLayer","name","addLayer","addChild","PIXI.Container","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","contentID","detach","stageOptions","_destroyRoot","play","start","destroy","removeView","keys","pause","paused","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","Task","callbacks","_taskData","enabled","index","value","Array","isArray","list","Function","task","_to","Number","first","prev","next","to","finish","reset","tasks","emitter","_Task","_lastObserverID","Container","taskEnabledChildren","_observerID","taskEnabled","p","parent","_cache","ContentManifestBase","manifests","unrequired","_manifests","url","getAsync","basepath","version","resources","loadable","cache","manifest","_resolvePath","Object","Promise","resolve","_loadAsync","res","resource","error","path","indexOf","PIXI.utils","ContentImageManifest","reject","loader","PIXI.Loader","defaultQueryString","crossOrigin","load","texture","ContentSpritesheetManifest","textures","ContentSoundManifest","loadedHandler","key","howl","loadedCount","loadCount","Howl","console","warn","_i","match","src","onload","onloaderror","ContentDeliver","data","lib","vars","_contents","_contentID","createManifests","images","spritesheets","sounds","Content","piximData","toString","$","config","additionalManifests","preloadPromise","postloadPromise","create","ContentClone","get","remove","defineManifests","defineImages","defineSpritesheets","defineSounds","setConfig","defineLibraries","addManifests","addImages","addSpritesheets","addSounds","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","catch","promises","all","resolver","j"],"mappings":"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"}