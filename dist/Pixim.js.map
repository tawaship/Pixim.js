{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../src/modules/TaskManager.ts","../src/modules/Application.ts","../src/modules/Task.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Container.ts","../src/modules/ContentManifestBase.ts","../src/modules/ContentImageManifest.ts","../src/modules/ContentSpritesheetManifest.ts","../src/modules/ContentSoundManifest.ts","../src/modules/ContentDeliver.ts","../src/modules/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n\t */\r\n\texport class Emitter extends _Emitter {}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Emitter = Pixim.Emitter;","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { ITickerData } from './Application';\r\nimport { Container } from './Container';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface IObserverDictionary {\r\n\t\t[name: number]: Container;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _observers: IObserverDictionary = {};\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _lastTickerData: ITickerData = { delta: 1 };\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\texport class TaskManager {\r\n\t\tconstructor() {\r\n\t\t\tthrow new Error('This class can not instantiate.');\r\n\t\t}\r\n\t\t\r\n\t\tstatic addObserver(id: number, observer: Container) {\r\n\t\t\t_observers[id] = observer;\r\n\t\t\tobserver.updateTask(_lastTickerData);\r\n\t\t}\r\n\t\t\r\n\t\tstatic removeObserver(id: number) {\r\n\t\t\tdelete(_observers[id]);\r\n\t\t}\r\n\t\t\r\n\t\tstatic done(e: ITickerData) {\r\n\t\t\t_lastTickerData = e;\r\n\t\t\t\r\n\t\t\tfor (let i in _observers) {\r\n\t\t\t\t_observers[i].updateTask(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import TaskManager = Pixim.TaskManager;","import * as PIXI from 'pixi.js';\r\nimport { Content } from './Content';\r\nimport { Emitter } from './Emitter';\r\nimport { TaskManager } from './TaskManager';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface IRootDictionary {\r\n\t\t[id: string]: PIXI.Container;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILayerDictionary{\r\n\t\t[name: string]: PIXI.Container;\r\n\t}\r\n\t\r\n\texport interface ITickerData {\r\n\t\tdelta: number\r\n\t}\r\n\t\r\n\texport interface IAdjustDelegate {\r\n\t\t(app: Application): void;\r\n\t}\r\n\t\r\n\texport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\t\r\n\texport interface IApplicationOption {\r\n\t\t/**\r\n\t\t * Parent node of canvas element.\r\n\t\t */\r\n\t\tcontainer?: HTMLElement;\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t\t * Or the resizing process to be executed at that time.\r\n\t\t */\r\n\t\tautoAdjust?: TAutoAdjust;\r\n\t}\r\n\t\r\n\texport interface IApplicationData {\r\n\t\tisRun: boolean;\r\n\t\t/**\r\n\t\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t\t */\r\n\t\tapp: PIXI.Application;\r\n\t\tstage: PIXI.Container;\r\n\t\tview: HTMLCanvasElement;\r\n\t\tcontainer: HTMLElement;\r\n\t\toptions: IApplicationOption;\r\n\t\tlayers: ILayerDictionary;\r\n\t}\r\n\t\r\n\texport interface ISize {\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IPosition {\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t}\r\n\t\r\n\texport interface IHorizontal {\r\n\t\tx: number;\r\n\t\twidth: number;\r\n\t}\r\n\t\r\n\texport interface IVertical {\r\n\t\ty: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IRect extends ISize, IPosition {}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _roots: IRootDictionary = {};\r\n\t\r\n\t/*\r\n\tfunction taskHandler(obj: PIXI.Container, e: ITaskTickerData): void {\r\n\t\tif (obj instanceof Container) {\r\n\t\t\tobj.task.update(e);\r\n\t\t\t\r\n\t\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\t\tconst child = obj.children[i];\r\n\t\t\t\r\n\t\t\tif (child instanceof PIXI.Container) {\r\n\t\t\t\ttaskHandler(child, e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t\r\n\texport class Application extends Emitter {\r\n\t\tprotected _piximData: IApplicationData;\r\n\t\t\r\n\t\t/**\r\n\t\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t\t * @param piximOptions Optional data for Pixim.\r\n\t\t */\r\n\t\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\t\tsuper();\r\n\t\t\t\r\n\t\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\t\tapp.stop();\r\n\t\t\t\r\n\t\t\tconst stage: PIXI.Container = app.stage;\r\n\t\t\t\r\n\t\t\tconst view: HTMLCanvasElement = app.view;\r\n\t\t\tview.style.position = 'absolute';\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tif (piximOptions.container) {\r\n\t\t\t\tpiximOptions.container.appendChild(view);\r\n\t\t\t} else {\r\n\t\t\t\tif (!view.parentNode) {\r\n\t\t\t\t\tdocument.body.appendChild(view);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\tisRun: false,\r\n\t\t\t\tapp,\r\n\t\t\t\tstage,\r\n\t\t\t\tview,\r\n\t\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\t\tlayers: {},\r\n\t\t\t\toptions: piximOptions\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\t\r\n\t\t\tticker.add((delta: number) => {\r\n\t\t\t\tTaskManager.done({ delta });\r\n\t\t\t\t//taskHandler(stage, { delta });\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (autoAdjust) {\r\n\t\t\t\tif (autoAdjust === true) {\r\n\t\t\t\t\tconst f = () => {\r\n\t\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\t\r\n\t\t\t\t\tf();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst f = () => {\r\n\t\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\t\r\n\t\t\t\t\tf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tget app(): PIXI.Application {\r\n\t\t\treturn this._piximData.app;\r\n\t\t}\r\n\t\t\r\n\t\tget stage(): PIXI.Container {\r\n\t\t\treturn this._piximData.stage;\r\n\t\t}\r\n\t\t\r\n\t\tget view(): HTMLCanvasElement {\r\n\t\t\treturn this._piximData.view;\r\n\t\t}\r\n\t\t\r\n\t\tget container(): HTMLElement {\r\n\t\t\treturn this._piximData.container;\r\n\t\t}\r\n\t\t\r\n\t\tset container(container: HTMLElement) {\r\n\t\t\tthis._piximData.container = container || document.body;\r\n\t\t\tif (this._piximData.view.parentNode) {\r\n\t\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether application has layer.\r\n\t\t */\r\n\t\tprivate _hasLayer(name: string): boolean {\r\n\t\t\treturn !!this._piximData.layers[name];\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Add layer to application.\r\n\t\t */\r\n\t\taddLayer(name: string) {\r\n\t\t\tif (this._hasLayer(name)) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.layers[name] = this._piximData.stage.addChild(new PIXI.Container());\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove layer form application.\r\n\t\t */\r\n\t\tremoveLayer(name: string) {\r\n\t\t\tif (!this._hasLayer(name)) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.stage.removeChild(this._piximData.layers[name]);\r\n\t\t\tdelete(this._piximData.layers[name]);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Attach content to application.\r\n\t\t */\r\n\t\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\t\treturn content.buildAsync()\r\n\t\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\t\r\n\t\t\t\t\t_roots[content.contentID] = root;\r\n\t\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn root;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Detach content from application.\r\n\t\t */\r\n\t\tdetach(content: Content) {\r\n\t\t\tconst root: PIXI.Container = _roots[content.contentID];\r\n\t\t\t\r\n\t\t\tif (!root) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._destroyRoot(root);\r\n\t\t\tdelete(_roots[content.contentID]);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Play application.\r\n\t\t */\r\n\t\tplay() {\r\n\t\t\tif (this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\t\r\n\t\t\tthis._piximData.app.start();\r\n\t\t\tthis._piximData.isRun = true;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Stop application.\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tif (!this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._piximData.view.parentNode) {\r\n\t\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.app.stop();\r\n\t\t\tthis._piximData.isRun = false;\r\n\t\t\t\r\n\t\t\tconst stage: PIXI.Container = this._piximData.app.stage;\r\n\t\t\t\r\n\t\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\t\r\n\t\t\tfor (let i in layers) {\r\n\t\t\t\tlayers[i].removeChildren();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst keys: string[] = [];\r\n\t\t\tfor (let i in _roots) {\r\n\t\t\t\tthis._destroyRoot(_roots[i]);\r\n\t\t\t\tkeys.push(i);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\t\tdelete(_roots[keys[i]]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.app.ticker.update();\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tprivate _destroyRoot(root: PIXI.Container): void {\r\n\t\t\tif (root.parent) {\r\n\t\t\t\troot.parent.removeChild(root);\r\n\t\t\t}\r\n\t\t\troot.destroy();\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Pause (or restart) application.\r\n\t\t */\r\n\t\tpause(paused: boolean) {\r\n\t\t\tif (!this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (paused) {\r\n\t\t\t\tthis._piximData.app.stop();\r\n\t\t\t} else {\r\n\t\t\t\tthis._piximData.app.start();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified rectangle.\r\n\t\t * \r\n\t\t * @param rect Rectangle to adjust.\r\n\t\t */\r\n\t\tfullScreen(rect?: IRect) {\r\n\t\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\t\tconst r: IRect = rect || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified width.\r\n\t\t * \r\n\t\t * @param width Width to adjust.\r\n\t\t */\r\n\t\tadjustWidth(width?: number) {\r\n\t\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\t\r\n\t\t\tconst h: number = w / view.width * view.height;\r\n\t\t\t\r\n\t\t\t//const frame = this._piximData.frame;\r\n\t\t\tview.style.width = `${w}px`;\r\n\t\t\tview.style.height = `${h}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified height.\r\n\t\t * \r\n\t\t * @param height Height to adjust.\r\n\t\t */\r\n\t\tadjustHeight(height?: number) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\t\r\n\t\t\tconst w = h / view.height * view.width;\r\n\t\t\t\r\n\t\t\t//const frame = this._piximData.frame;\r\n\t\t\tview.style.height = `${h}px`;\r\n\t\t\tview.style.width = `${w}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Left justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoLeft(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Center justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoCenter(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Right justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoRight(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Top justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoTop(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Middle justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoMiddle(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Bottom justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoBottom(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tprivate _getViewRect(): IRect {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IApplicationData = Pixim.IApplicationData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IApplicationOption = Pixim.IApplicationOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ITickerData = Pixim.ITickerData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ISize = Pixim.ISize;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IPosition = Pixim.IPosition;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IRect= Pixim.IRect;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Application = Pixim.Application;","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nnamespace Pixim {\r\n\texport interface ITaskData {\r\n\t\temitter: Emitter\r\n\t}\r\n\t\r\n\t/**\r\n\t * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n\t */\r\n\texport class Task extends _Task {\r\n\t\tprivate _piximData: ITaskData;\r\n\t\t\r\n\t\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\t\tsuper(tasks, context);\r\n\t\t\t\r\n\t\t\tthis.enabled = true;\r\n\t\t\tthis._piximData = {\r\n\t\t\t\temitter: new Emitter()\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\ton(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tonce(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\toff(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\temit(type: string, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.9.0\r\n\t\t */\r\n\t\temitAll(...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.9.0\r\n\t\t */\r\n\t\tcemitAll(context: any, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tclear(type: string = '') {\r\n\t\t\tthis._piximData.emitter.clear(type);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tdestroy() {\r\n\t\t\tsuper.destroy();\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ITaskData = Pixim.ITaskData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Task = Pixim.Task;","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nnamespace Pixim {\r\n\texport interface IContainerData {\r\n\t\ttask: Task,\r\n\t\ttaskEnabledChildren: boolean\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _lastObserverID = 0;\r\n\t\r\n\t/**\r\n\t * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n\t */\r\n\texport class Container extends PIXI.Container {\r\n\t\tprotected _piximData: IContainerData;\r\n\t\t\r\n\t\tconstructor(...args: any[]) {\r\n\t\t\tsuper();\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\ttask: new Task([], this),\r\n\t\t\t\ttaskEnabledChildren: true\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis._piximData.task.first();\r\n\t\t\t\r\n\t\t\tconst _observerID = _lastObserverID++;\r\n\t\t\t\r\n\t\t\tthis.on('added', () => {\r\n\t\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.on('removed', () => {\r\n\t\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tupdateTask(e: ITickerData) {\r\n\t\t\tconst task: Task = this._piximData.task;\r\n\t\t\t\r\n\t\t\tif (!this.taskEnabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet p: PIXI.DisplayObject = this;\r\n\t\t\tlet f = true;\r\n\t\t\t\r\n\t\t\twhile (p) {\r\n\t\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\t\tf = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!f) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttask.done(e);\r\n\t\t\t\r\n\t\t\t// will be deprecated\r\n\t\t\ttask.cemitAll(this, e);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether the task works.\r\n\t\t */\r\n\t\tget taskEnabled(): boolean {\r\n\t\t\treturn this._piximData.task.enabled;\r\n\t\t}\r\n\t\t\r\n\t\tset taskEnabled(enabled) {\r\n\t\t\tthis._piximData.task.enabled = enabled;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether the children and subsequent tasks work.\r\n\t\t */\r\n\t\tget taskEnabledChildren(): boolean {\r\n\t\t\treturn this._piximData.taskEnabledChildren;\r\n\t\t}\r\n\t\t\r\n\t\tset taskEnabledChildren(enabled) {\r\n\t\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Task object that works only while it is being displayed.\r\n\t\t */\r\n\t\tget task(): Task {\r\n\t\t\treturn this._piximData.task;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Destroy instance.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy(...args: any[]): void {\r\n\t\t\tsuper.destroy(...args);\r\n\t\t\tthis._piximData.task.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContainerData = Pixim.IContainerData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Container = Pixim.Container;","import * as PIXI from 'pixi.js';\r\n\r\nnamespace Pixim {\r\n\texport interface IManifestDictionary {\r\n\t\t[name: string]: string;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPreManifest {\r\n\t\turl: string;\r\n\t\tunrequired: boolean;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPreManifestDictionary {\r\n\t\t[name: string]: IPreManifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPostManifest extends IPreManifest {\r\n\t\tname: string;\r\n\t}\r\n\t\r\n\texport interface IPostManifestDictionary {\r\n\t\t[name: string]: IPostManifest;\r\n\t}\r\n\t\r\n\texport interface IContentManifestOption {\r\n\t\tunrequired?: boolean\r\n\t}\r\n\t\r\n\texport interface ILoadedResource {\r\n\t\tresource: any;\r\n\t\terror: boolean;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedResourceDictionary {\r\n\t\t[name: string]: ILoadedResource;\r\n\t}\r\n\t\r\n\texport interface IResourceDictionary {\r\n\t\t[name: string]: any;\r\n\t}\r\n\t\r\n\texport interface IContentResourceDictionary {\r\n\t\t[name: string]: IResourceDictionary;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _cache: IResourceDictionary = {};\r\n\t\r\n\texport abstract class ContentManifestBase {\r\n\t\tprivate _manifests: IPreManifestDictionary = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Register manifests.\r\n\t\t * \r\n\t\t * @param manifests Defined manifests.\r\n\t\t * @param option Manifest option data.\r\n\t\t */\r\n\t\tadd(manifests: IManifestDictionary, options: IContentManifestOption = {}): void {\r\n\t\t\tconst unrequired: boolean = options.unrequired || false;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tthis._manifests[i] = {\r\n\t\t\t\t\turl: manifests[i],\r\n\t\t\t\t\tunrequired\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Get resources.\r\n\t\t * \r\n\t\t * @param basepath Basement directory path of assets.\r\n\t\t */\r\n\t\tgetAsync(basepath: string, version: string): Promise<IResourceDictionary> {\r\n\t\t\tconst manifests: IPreManifestDictionary = this._manifests;\r\n\t\t\t\r\n\t\t\tconst resources: IResourceDictionary = {};\r\n\t\t\tconst loadable: IPostManifestDictionary = {};\r\n\t\t\tconst cache = _cache;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst manifest: IPreManifest = manifests[i];\r\n\t\t\t\tconst url: string = this._resolvePath(manifest.url, basepath);\r\n\t\t\t\t\r\n\t\t\t\t// query parameter is invalid for resource cache\r\n\t\t\t\tconst name: string = url.replace(/\\?.*/, '');\r\n\t\t\t\t\r\n\t\t\t\tif (cache[name]) {\r\n\t\t\t\t\tresources[i] = cache[name];\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tloadable[i] = {\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tunrequired: manifest.unrequired\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (Object.keys(loadable).length === 0) {\r\n\t\t\t\treturn Promise.resolve(resources);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._loadAsync(loadable, version)\r\n\t\t\t\t.then((res: ILoadedResourceDictionary) => {\r\n\t\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\t\tresources[i] = res[i].resource;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!res[i].error) {\r\n\t\t\t\t\t\t\tcache[loadable[i].name] = res[i].resource;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn resources;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Load resources.\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedResourceDictionary> {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Normalize asset path.\r\n\t\t */\r\n\t\tprivate _resolvePath(path: string, basepath: string): string {\r\n\t\t\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\t\t\treturn path;\r\n\t\t\t} else {\r\n\t\t\t\treturn PIXI.utils.url.resolve(basepath, path);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IManifestDictionary = Pixim.IManifestDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IPostManifestDictionary = Pixim.IPostManifestDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentManifestOption = Pixim.IContentManifestOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedResource = Pixim.ILoadedResource;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IResourceDictionary = Pixim.IResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentResourceDictionary = Pixim.IContentResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentManifestBase = Pixim.ContentManifestBase;","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedImageResource extends ILoadedResource {\r\n\t\tresource: PIXI.Texture\r\n\t}\r\n\t\r\n\texport interface ILoadedImageResourceDictionary {\r\n\t\t[name: string]: ILoadedImageResource;\r\n\t}\r\n\t\r\n\texport class ContentImageManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedImageResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedImageResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\t\r\n\t\t\t\tif (version) {\r\n\t\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst res: ILoadedImageResourceDictionary = {};\r\n\t\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\t\tresource: resource.texture,\r\n\t\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedImageResourceDictionary = Pixim.ILoadedImageResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentImageManifest = Pixim.ContentImageManifest;","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedSpritesheetResource extends ILoadedResource {\r\n\t\tresource: PIXI.ITextureDictionary\r\n\t}\r\n\t\r\n\texport interface ILoadedSpritesheetResourceDictionary {\r\n\t\t[name: string]: ILoadedSpritesheetResource;\r\n\t}\r\n\t\r\n\texport class ContentSpritesheetManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSpritesheetResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedSpritesheetResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\t\r\n\t\t\t\tif (version) {\r\n\t\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst res: ILoadedSpritesheetResourceDictionary = {};\r\n\t\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\t\tif (!manifests[i]) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst textures: PIXI.ITextureDictionary = resource.textures || {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst error: boolean = !!resource.error;\r\n\t\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\t\tresource: textures,\r\n\t\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedSpritesheetResourceDictionary = Pixim.ILoadedSpritesheetResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentSpritesheetManifest = Pixim.ContentSpritesheetManifest;","import { Howl } from 'howler';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedSoundResource extends ILoadedResource {\r\n\t\tresource: Howl\r\n\t}\r\n\t\r\n\texport interface ILoadedSoundResourceDictionary{\r\n\t\t[name: string]: ILoadedSoundResource;\r\n\t}\r\n\t\r\n\texport class ContentSoundManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSoundResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedSoundResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst res: ILoadedSoundResourceDictionary = {};\r\n\t\t\t\t\r\n\t\t\t\tfunction loadedHandler(key: string, howl: Howl, error: boolean): void {\r\n\t\t\t\t\tres[key] = {\r\n\t\t\t\t\t\tresource: howl,\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (++loadedCount < loadCount) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet loadCount: number = 0;\r\n\t\t\t\tlet loadedCount:number  = 0;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tif (!Howl) {\r\n\t\t\t\t\t\tconsole.warn('You need \"howler.js\" to load sound asset.');\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t++loadCount;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tconst _i = i;\r\n\t\t\t\t\tconst url =\r\n\t\t\t\t\t\tversion\r\n\t\t\t\t\t\t?`${manifests[_i].url}${manifests[_i].url.match(/\\?/) ? '&' : '?'}_fv=${version}`\r\n\t\t\t\t\t\t: manifests[_i].url;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc: url,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tloadedHandler(_i, howl, false);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tif (!manifests[_i].unrequired) {\r\n\t\t\t\t\t\t\t\treject({ [_i]: manifests[_i].url});\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tloadedHandler(_i, howl, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedSoundResourceDictionary = Pixim.ILoadedSoundResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentSoundManifest = Pixim.ContentSoundManifest;","import * as PIXI from 'pixi.js';\r\nimport { Container } from './Container';\r\nimport { IContentResourceDictionary } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\texport interface IContentLibrary {\r\n\t\t[name: string]: typeof PIXI.Container | typeof Container\r\n\t}\r\n\t\r\n\texport interface IVariableDictionary {\r\n\t\t[name: string]: any;\r\n\t}\r\n\t\r\n\texport interface IContentDeliverData {\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tlib: IContentLibrary,\r\n\t\tresources: IContentResourceDictionary,\r\n\t\tvars: IVariableDictionary\r\n\t}\r\n\t\r\n\texport class ContentDeliver {\r\n\t\tprotected _piximData: IContentDeliverData;\r\n\t\t\r\n\t\tconstructor(data: IContentDeliverData) {\r\n\t\t\tthis._piximData = {\r\n\t\t\t\twidth: data.width,\r\n\t\t\t\theight: data.height,\r\n\t\t\t\tlib: data.lib,\r\n\t\t\t\tresources: data.resources,\r\n\t\t\t\tvars: data.vars\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Content width.\r\n\t\t */\r\n\t\tget width(): number {\r\n\t\t\treturn this._piximData.width;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Content height.\r\n\t\t */\r\n\t\tget height(): number {\r\n\t\t\treturn this._piximData.height;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Defined classes in content.\r\n\t\t */\r\n\t\tget lib(): IContentLibrary {\r\n\t\t\treturn this._piximData.lib;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Loaded resources.\r\n\t\t */\r\n\t\tget resources(): IContentResourceDictionary {\r\n\t\t\treturn this._piximData.resources;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Defined variables by framework.\r\n\t\t */\r\n\t\tget vars() {\r\n\t\t\treturn this._piximData.vars;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentLibrary = Pixim.IContentLibrary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IVariableDictionary = Pixim.IVariableDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentDeliverData = Pixim.IContentDeliverData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentDeliver = Pixim.ContentDeliver;","import * as PIXI from 'pixi.js';\r\nimport { IResourceDictionary, IContentResourceDictionary, IManifestDictionary, IContentManifestOption } from './ContentManifestBase';\r\nimport { ContentImageManifest } from './ContentImageManifest';\r\nimport { ContentSpritesheetManifest } from './ContentSpritesheetManifest';\r\nimport { ContentSoundManifest } from './ContentSoundManifest';\r\nimport { ContentDeliver, IVariableDictionary, IContentLibrary } from './ContentDeliver';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\ttype TContentManifestType = 'images' | 'spritesheets' | 'sounds';\r\n\t\r\n\texport interface IContentAssetVersion {\r\n\t\timages?: string;\r\n\t\tspritesheets?: string;\r\n\t\tsounds?: string;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IContentManifests { \r\n\t\timages: ContentImageManifest;\r\n\t\tspritesheets: ContentSpritesheetManifest;\r\n\t\tsounds: ContentSoundManifest;\r\n\t}\r\n\t\r\n\texport interface IContentConfigData {\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IContentData {\r\n\t\tcontentID: string;\r\n\t\tbasepath: string;\r\n\t\tversion: IContentAssetVersion;\r\n\t\t$: ContentDeliver;\r\n\t\tmanifests: IContentManifests;\r\n\t\tadditionalManifests: IContentManifests;\r\n\t\tpreloadPromise: Promise<void> | null;\r\n\t\tpostloadPromise: Promise<void> | null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface TContents {\r\n\t\t[name: string]: typeof Content;\r\n\t};\r\n\t\r\n\texport interface IContentOption {\r\n\t\t/**\r\n\t\t * Asset root path.\r\n\t\t */\r\n\t\tbasepath?: string;\r\n\t\t\r\n\t\t/**\r\n\t\t * Asset version.\r\n\t\t */\r\n\t\tversion?: string | IContentAssetVersion;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _contents: TContents = {};\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _contentID: number = 0;\r\n\t\r\n\texport interface IContentStaticData {\r\n\t\tconfig: IContentConfigData;\r\n\t\tmanifests: IContentManifests;\r\n\t\tlib: IContentLibrary;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tfunction createManifests(): IContentManifests {\r\n\t\treturn {\r\n\t\t\timages: new ContentImageManifest(),\r\n\t\t\tspritesheets: new ContentSpritesheetManifest(),\r\n\t\t\tsounds: new ContentSoundManifest()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tfunction createContentStatic(): IContentStaticData {\r\n\t\treturn {\r\n\t\t\tconfig: {\r\n\t\t\t\twidth: 450,\r\n\t\t\t\theight: 800\r\n\t\t\t},\r\n\t\t\tmanifests: createManifests(),\r\n\t\t\tlib: {}\r\n\t\t};\r\n\t}\r\n\t\r\n\texport class Content {\r\n\t\tprotected static _piximData: IContentStaticData;\r\n\t\tprotected _piximData: IContentData;\r\n\t\t\r\n\t\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\t\tconst basepath: string = (options.basepath || '').replace(/([^/])$/, '$1/');\r\n\t\t\t\r\n\t\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\t\toptions.version = {\r\n\t\t\t\t\timages: options.version || '',\r\n\t\t\t\t\tspritesheets: options.version || '',\r\n\t\t\t\t\tsounds: options.version || ''\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\t\tbasepath,\r\n\t\t\t\tversion: options.version,\r\n\t\t\t\t$: new ContentDeliver({\r\n\t\t\t\t\twidth: piximData.config.width,\r\n\t\t\t\t\theight: piximData.config.height,\r\n\t\t\t\t\tlib: piximData.lib,\r\n\t\t\t\t\tresources: {},\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t}),\r\n\t\t\t\tmanifests: piximData.manifests,\r\n\t\t\t\tadditionalManifests: createManifests(),\r\n\t\t\t\tpreloadPromise: null,\r\n\t\t\t\tpostloadPromise: null\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Create a cloned content class.\r\n\t\t * \r\n\t\t * @param key Content name.\r\n\t\t * @return Cloned content class.\r\n\t\t */\r\n\t\tstatic create(key: string = ''): typeof Content {\r\n\t\t\tif (key && key in _contents) {\r\n\t\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tclass ContentClone extends Content {\r\n\t\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\t\r\n\t\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!key) {\r\n\t\t\t\treturn ContentClone;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn _contents[key] = ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Get cloned content.\r\n\t\t */\r\n\t\tstatic get(key: string) {\r\n\t\t\treturn _contents[key];\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove cloned content.\r\n\t\t * \r\n\t\t * @function Pixim.Content.removeContent\r\n\t\t * @param key {string}\r\n\t\t */\r\n\t\tstatic remove(key: string): void {\r\n\t\t\tdelete(_contents[key]);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define assets for class.\r\n\t\t */\r\n\t\tstatic defineManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.manifests[key].add(data, options);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define image assets for class.\r\n\t\t */\r\n\t\tstatic defineImages(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('images', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define spritesheet assets for class.\r\n\t\t */\r\n\t\tstatic defineSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('spritesheets', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define sound assets for class.\r\n\t\t */\r\n\t\tstatic defineSounds(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('sounds', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Set the content settings.\r\n\t\t * \r\n\t\t * @param data Config data.\r\n\t\t */\r\n\t\tstatic setConfig(data: IContentConfigData) {\r\n\t\t\t//this._piximData.config.fps = data.fps;\r\n\t\t\tthis._piximData.config.width = data.width;\r\n\t\t\tthis._piximData.config.height = data.height;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define libraries that is material of the content.<br />\r\n\t\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t\t * \r\n\t\t * @param data Library data.\r\n\t\t */\r\n\t\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\t\tfor (let i in data) {\r\n\t\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * ID of this content.\r\n\t\t */\r\n\t\tget contentID(): string {\r\n\t\t\treturn this._piximData.contentID;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.additionalManifests[key].add(data, options);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define image assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddImages(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('images', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define spritesheet assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('spritesheets', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define sound assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddSounds(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('sounds', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define valriables for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddVars(data: IVariableDictionary): this {\r\n\t\t\tfor (let i in data) {\r\n\t\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Prepare content.\r\n\t\t */\r\n\t\tprepareAsync(): Promise<void> {\r\n\t\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Build content.\r\n\t\t */\r\n\t\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this.prepareAsync()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Preloads class assets.\r\n\t\t */\r\n\t\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\t\tif (this._piximData.preloadPromise) {\r\n\t\t\t\treturn this._piximData.preloadPromise;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Preloads instance assets.\r\n\t\t */\r\n\t\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\t\tif (this._piximData.postloadPromise) {\r\n\t\t\t\treturn this._piximData.postloadPromise;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\t\tconst basepath: string = this._piximData.basepath;\r\n\t\t\tconst version: IContentAssetVersion = this._piximData.version;\r\n\t\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\t\r\n\t\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\t\r\n\t\t\tif (loaderCount === 0) {\r\n\t\t\t\treturn Promise.resolve();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst promises: Promise<IResourceDictionary>[] = [];\r\n\t\t\tconst keys: TContentManifestType[] = [];\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst type: TContentManifestType = <TContentManifestType>i;\r\n\t\t\t\tkeys.push(type);\r\n\t\t\t\t\r\n\t\t\t\tpromises.push(manifests[type].getAsync(basepath, version[type] || ''));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Promise.all(promises)\r\n\t\t\t\t.then((resolver: IResourceDictionary) => {\r\n\t\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tfor (let i in e) {\r\n\t\t\t\t\t\tconsole.error(`Asset '${i}: ${e[i]}' cannot load.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentData = Pixim.IContentData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentStaticData = Pixim.IContentStaticData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentConfigData = Pixim.IContentConfigData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentOption = Pixim.IContentOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Content = Pixim.Content;\r\n\r\nexport { IVariableDictionary , IContentLibrary };"],"names":["Pixim","Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","_observers","_lastTickerData","delta","TaskManager","Error","addObserver","id","observer","updateTask","removeObserver","done","e","_roots","Application","pixiOptions","piximOptions","super","app","PIXI.Application","stop","stage","view","style","position","autoAdjust","_piximData","isRun","container","document","body","layers","options","ticker","add","f","fullScreen","window","addEventListener","prototypeAccessors","parentNode","appendChild","_hasLayer","name","addLayer","addChild","PIXI.Container","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","contentID","detach","_destroyRoot","play","start","removeChildren","keys","update","parent","destroy","pause","paused","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","Task","callbacks","_taskData","enabled","index","value","Array","isArray","list","Function","task","_to","Number","first","prev","next","to","finish","reset","tasks","emitter","_Task","_lastObserverID","Container","taskEnabledChildren","_observerID","taskEnabled","p","_cache","ContentManifestBase","manifests","unrequired","_manifests","url","getAsync","basepath","version","resources","loadable","cache","manifest","_resolvePath","Object","Promise","resolve","_loadAsync","res","resource","error","path","indexOf","PIXI.utils","ContentImageManifest","reject","loader","PIXI.Loader","defaultQueryString","crossOrigin","load","texture","ContentSpritesheetManifest","textures","ContentSoundManifest","loadedHandler","key","howl","loadedCount","loadCount","Howl","console","warn","_i","match","src","onload","onloaderror","ContentDeliver","data","lib","vars","_contents","_contentID","createManifests","images","spritesheets","sounds","Content","piximData","toString","$","config","additionalManifests","preloadPromise","postloadPromise","create","ContentClone","get","remove","defineManifests","defineImages","defineSpritesheets","defineSounds","setConfig","defineLibraries","addManifests","addImages","addSpritesheets","addSounds","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","catch","promises","all","resolver","j"],"mappings":"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"}