{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/utils/index.ts","../src/modules/content/ManifestBase.ts","../src/modules/loader/LoaderBase.ts","../src/modules/loader/BlobLoader.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts","../src/modules/loader/JsLoader.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolveUri(basepath: string, uri: any, version?: string | number) {\r\n\tif (typeof(uri) !== 'string') {\r\n\t\treturn uri;\r\n\t}\r\n\t\t\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\tbasepath = basepath || '';\r\n\tversion = version || '';\r\n\tconst preUri = resolvePath(basepath, uri);\r\n\t\r\n\treturn version ? resolveQuery(preUri, { _fv: version }) : preUri;\r\n}\r\n\r\n\r\nexport function resolvePath(basepath: string, path: string) {\r\n\tif (!isUrl(path)) {\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\treturn PIXI.utils.url.resolve(basepath, path);\r\n}\r\n\r\nexport function isUrl(uri: any) {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (uri.indexOf('blob:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IManifestClass {\r\n\tnew(type: string): ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport type TManifestResourceVersion = string | number;\r\n\r\nexport interface IManifestLoaderXhrOptionFacotryDelegate {\r\n\t(type: string, url: string): LoaderBase.TLoaderResolvedXhrOption;\r\n}\r\n\r\nexport type TLoaderXhrOption = IManifestLoaderXhrOptionFacotryDelegate | boolean | LoaderBase.ILoaderXhrOption;\r\n\r\nexport interface IManifestLoaderOption {\r\n\tbasepath: string;\r\n\tversion: TManifestResourceVersion;\r\n\txhr: TLoaderXhrOption;\r\n\tothers: { [key: string]: any };\r\n}\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class ManifestBase<TTarget, TRawResource, TResource extends LoaderBase.LoaderResource<TRawResource>> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\tprivate _type: string;\r\n\t\r\n\tconstructor(type: string) {\r\n\t\tsuper();\r\n\t\tthis._type = type;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: IManifestLoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TRawResource> = {};\r\n\t\t\r\n\t\tconst loader = this._createLoader();\r\n\t\tloader.onLoaded = (resource: TResource) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t};\r\n\t\t\r\n\t\tconst loaderOptions: LoaderBase.ILoaderOption = this._getAppendOption(options);\r\n\t\t\r\n\t\tconst data: LoaderBase.ILoaderDataDictionary<TTarget, LoaderBase.ILoaderOption> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tconst src = this._resolveTarget(this._data[i].target, options);\r\n\t\t\tdata[i] = { src, options: Object.assign({}, loaderOptions, { xhr: options.xhr }) };\r\n\t\t}\r\n\t\t\r\n\t\treturn loader.loadAllAsync(data)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _createLoader(): LoaderBase.LoaderBase<TTarget, TRawResource, TResource>;\r\n\t\r\n\tprotected _resolveTarget(target: TTarget, options: IManifestLoaderOption): TTarget {\r\n\t\treturn utils.resolveUri(options.basepath || '', target, options.version);\r\n\t}\r\n\t\r\n\tprotected _getAppendOption(options: IManifestLoaderOption): LoaderBase.ILoaderOption {\r\n\t\treturn {};\r\n\t}\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport interface IFetchRequestOption {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface ILoaderXhrOption {\r\n\trequestOptions?: IFetchRequestOption;\r\n}\r\n\r\nexport interface ILoaderResolvedXhrOption extends ILoaderXhrOption {\r\n\tsrc: string;\r\n}\r\n\r\nexport type TLoaderResolvedXhrOption = ILoaderResolvedXhrOption | null;\r\n\r\nexport interface ILoaderXhrOptionFacotryDelegate {\r\n\t(url: string): TLoaderResolvedXhrOption;\r\n}\r\n\r\nexport interface ILoaderOption {\r\n\txhr?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderDataDictionary<TTarget, TLoaderOption> {\r\n\t[name: string]: { src: TTarget, options?: TLoaderOption };\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TRawResource, TResource extends LoaderResource<TRawResource>> {\r\n\t/**\r\n\t * Callback when one of the resources has succeeded loading.\r\n\t */\r\n\tonLoaded?: (resource: TResource) => void;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAsync(target: TTarget, options?: ILoaderOption) {\r\n\t\treturn (() => {\r\n\t\t\treturn this._loadAsync(target, options);\r\n\t\t})()\r\n\t\t.then(resource => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.onLoaded && this.onLoaded(resource);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _loadAsync(target: TTarget, options?: ILoaderOption): Promise<TResource>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAllAsync(data: ILoaderDataDictionary<TTarget, ILoaderOption>) {\r\n\t\tconst res: ILoaderResourceDictionary<TResource> = {};\r\n\t\t\r\n\t\tif (Object.keys(data).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\t\r\n\t\tfor (let i in data) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(data[i].src, data[i].options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected _resolveXhr(target: TTarget | string, options?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate): TLoaderResolvedXhrOption {\r\n\t\tif (typeof(target) !== 'string') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (!utils.isUrl(target)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (!options) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === true) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc: target,\r\n\t\t\t\trequestOptions: {}\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options) === 'function') {\r\n\t\t\treturn options(target);\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tsrc: target,\r\n\t\t\trequestOptions: options.requestOptions || {}\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TBlobLoaderRawResource = string;\r\n\r\nexport class BlobLoaderResource extends LoaderBase.LoaderResource<TBlobLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t(window.URL || window.webkitURL).revokeObjectURL(this._data);\r\n\t\tthis._data = '';\r\n\t}\r\n}\r\n\r\nexport type TBlobLoaderTarget = string;\r\n\r\nexport interface IBlobLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TBlobLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<BlobLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class BlobLoader extends LoaderBase.LoaderBase<TBlobLoaderTarget, TBlobLoaderRawResource, BlobLoaderResource> {\r\n\tprotected _loadAsync(target: TBlobLoaderTarget, options: IBlobLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.blob();\r\n\t\t})\r\n\t\t.then(blob => {\r\n\t\t\treturn (window.URL || window.webkitURL).createObjectURL(blob);\r\n\t\t})\r\n\t\t.then(uri => new BlobLoaderResource(uri, null))\r\n\t\t.catch((e: any) => new BlobLoaderResource('', e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { BlobLoader } from './BlobLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture | null;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\t\tthis._data.destroy(true);\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TextureLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource, TextureLoaderResource> {\r\n\tprotected _loadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn this._loadBaseTextureAsync(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst loader = new BlobLoader();\r\n\t\t\t\r\n\t\t\treturn loader.loadAsync(xhr.src, { xhr: options.xhr })\r\n\t\t\t\t.then(resource => {\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn this._loadBaseTextureAsync(resource.data);\r\n\t\t\t\t});\r\n\t\t})()\r\n\t\t.then(baseTexture => new TextureLoaderResource(new PIXI.Texture(baseTexture), null))\r\n\t\t.catch(e => new TextureLoaderResource(null, e));\r\n\t}\r\n\t\r\n\tprivate _loadBaseTextureAsync(target: TTextureLoaderTarget) {\r\n\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\ttarget.crossOrigin = 'anonymous';\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<PIXI.BaseTexture>((resolve, reject) => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\tresolve(bt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(baseTexture);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource, TextureLoader.TextureLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new TextureLoader.TextureLoader();\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsonLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource, JsonLoaderResource> {\r\n\tprotected _loadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { JsonLoader } from './JsonLoader';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SpritesheetLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\ttextureVersion?: string | number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource, SpritesheetLoaderResource> {\r\n\tprotected _loadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (typeof target !== 'string') {\r\n\t\t\t\treturn this._loadTextureAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadJsonAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then(textures => new SpritesheetLoaderResource(textures, null))\r\n\t\t.catch(e => new SpritesheetLoaderResource({}, e));\r\n\t}\r\n\t\r\n\tprivate _loadJsonAsync(url: string, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new JsonLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(url, { xhr: options.xhr })\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst json = resource.data;\r\n\t\t\t\t\r\n\t\t\t\tif (!json.meta || !json.meta.image || !json.frames) {\r\n\t\t\t\t\tthrow 'invalid json';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tjson.meta.image = utils.resolveUri(url, json.meta.image, options.textureVersion || '');\r\n\t\t\t\t\r\n\t\t\t\tconst data: ISpritesheetJson = {\r\n\t\t\t\t\tframes: json.frames,\r\n\t\t\t\t\tmeta: json.meta\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn this._loadTextureAsync(data, options);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadTextureAsync(json: ISpritesheetJson, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new TextureLoader.TextureLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(json.meta.image, { xhr: options.xhr })\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, json);\r\n\t\t\t\t\r\n\t\t\t\treturn new Promise<PIXI.ITextureDictionary>(resolve => {\r\n\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresolve(ss.textures);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\nimport * as LoaderBase from '../loader/LoaderBase';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource, SpritesheetLoader.SpritesheetLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SpritesheetLoader.SpritesheetLoader();\r\n\t}\r\n\t\r\n\tprotected _resolveTarget(target: SpritesheetLoader.TSpritesheetLoaderTarget, options: ManifestBase.IManifestLoaderOption) {\r\n\t\tif (typeof(target) === 'string') {\r\n\t\t\treturn utils.resolveUri(options.basepath || '', target, options.version);\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(target.meta.image) === 'string') {\r\n\t\t\ttarget.meta.image = utils.resolveUri(options.basepath || '', target.meta.image, options.version);\r\n\t\t}\r\n\t\t\r\n\t\treturn target;\r\n\t}\r\n\t\r\n\tprotected _getAppendOption(options: ManifestBase.IManifestLoaderOption): SpritesheetLoader.ISpritesheetLoaderOption {\r\n\t\treturn {\r\n\t\t\ttextureVersion: options.others.textureVersion || options.version\r\n\t\t};\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl | null;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tthis._data.stop();\r\n\t\t\tthis._data.unload();\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SoundLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource, SoundLoaderResource> {\r\n\tprotected _loadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc: target,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tconst e = new Error('invalid resource: ' + target);\r\n\t\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc: xhr.src,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tconst e = new Error('invalid resource: ' + target);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\txhr: xhr.requestOptions\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})()\r\n\t\t.then(howl => new SoundLoaderResource(howl, null))\r\n\t\t.catch(e => new SoundLoaderResource(null, e));\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource, SoundLoader.SoundLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SoundLoader.SoundLoader();\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource, JsonLoader.JsonLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new JsonLoader.JsonLoader();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption, IManifestLoaderOption, IManifestLoaderXhrOptionFacotryDelegate, TManifestResourceVersion, TLoaderXhrOption, EVENT_LOADER_ASSET_LOADED } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IContentAssetBasepath {\r\n\t[manifestKey: string]: string;\r\n}\r\n\r\nexport interface IContentAssetVersion {\r\n\t[manifestKey: string]: TManifestResourceVersion;\r\n}\r\n\r\nexport interface IContentAssetXhrOption {\r\n\t[manifestKey: string]: TLoaderXhrOption;\r\n}\r\n\r\nexport interface IContentAssetOtherOption {\r\n\t[manifestKey: string]: { [key: string]: any };\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[manifestKey: string]: ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\toptions: IContentOption;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string | IContentAssetBasepath;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: TManifestResourceVersion | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * A header given when loading an asset, or a function that returns a header.\r\n\t * If a value that can be considered true is specified, fetch API will be used instead of the default Loader when loading each asset.\r\n\t */\r\n\txhr?: TLoaderXhrOption;\r\n\t\r\n\tothers?: IContentAssetOtherOption;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i](i);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\tprivate _loadedResourceHandler: (data: { target: any, resource: any }) => void;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._loadedResourceHandler = (data: { target: any, resource: any }) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, data);\r\n\t\t};\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\toptions,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t};\r\n\t\t\r\n\t\tfor (let i in this._piximData.manifests) {\r\n\t\t\tthis._piximData.manifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._piximData.additionalManifests) {\r\n\t\t\tthis._piximData.additionalManifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget classAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget instanceAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget assetCount() {\r\n\t\treturn this.classAssetCount + this.instanceAssetCount;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst options = this._piximData.options;\r\n\t\t\r\n\t\tconst basepath = (() => {\r\n\t\t\tif (typeof(options.basepath) === 'undefined') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.basepath) === 'string') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = options.basepath.replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tbasepath[i] = (options.basepath[i] || '').replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn basepath;\r\n\t\t})();\r\n\t\t\r\n\t\tconst version = (() => {\r\n\t\t\tif (typeof(options.version) === 'undefined') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.version) === 'string' || typeof(options.version) === 'number') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = options.version;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tversion[i] = options.version[i] || '';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn version;\r\n\t\t})();\r\n\t\t\r\n\t\tconst xhr = (() => {\r\n\t\t\tif (typeof(options.xhr) === 'undefined') {\r\n\t\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\txhr[i] = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.xhr) === 'function') {\r\n\t\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\txhr[i] = ((type: string, f: IManifestLoaderXhrOptionFacotryDelegate) => {\r\n\t\t\t\t\t\treturn (url: string) => {\r\n\t\t\t\t\t\t\treturn f(type, url);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})(i, options.xhr);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\txhr[i] = options.xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn xhr;\r\n\t\t})();\r\n\t\t\r\n\t\tconst others = (() => {\r\n\t\t\tif (typeof(options.others) === 'undefined') {\r\n\t\t\t\tconst others: IContentAssetOtherOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tothers[i] = [];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn others;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst others: IContentAssetOtherOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tothers[i] = options.others[i] || {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn others;\r\n\t\t})();\r\n\t\t\r\n\t\tconst loaderOptions: { [manifestKey: string]: IManifestLoaderOption } = {};\r\n\t\tfor (let i in manifests) {\r\n\t\t\tloaderOptions[i] = {\r\n\t\t\t\tbasepath: basepath[i],\r\n\t\t\t\tversion: version[i],\r\n\t\t\t\txhr: xhr[i],\r\n\t\t\t\tothers: others[i]\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tkeys.push(i);\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[i];\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync(loaderOptions[i]));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TJsLoaderRawResource = string;\r\n\r\nexport class JsLoaderResource extends LoaderBase.LoaderResource<TJsLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = '';\r\n\t}\r\n\t\r\n\tref() {\r\n\t\tconst script = document.body.appendChild(document.createElement('script'));\r\n\t\tscript.text = this._data;\r\n\t}\r\n}\r\n\r\nexport type TJsLoaderTarget = string;\r\n\r\nexport interface IJsLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsLoader extends LoaderBase.LoaderBase<TJsLoaderTarget, TJsLoaderRawResource, JsLoaderResource> {\r\n\tprotected _loadAsync(target: TJsLoaderTarget, options: IJsLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.text();\r\n\t\t})\r\n\t\t.then(text => new JsLoaderResource(text, null))\r\n\t\t.catch((e: any) => new JsLoaderResource('', e));\r\n\t}\r\n}"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","resolveUri","basepath","uri","version","isUrl","preUri","resolvePath","resolveQuery","_fv","path","PIXI.utils","url","resolve","indexOf","queries","q","t","split","search","join","ManifestBase","_type","options","unrequired","_data","target","count","Object","keys","getAsync","Promise","res","loader","_createLoader","onLoaded","resource","loaderOptions","_getAppendOption","data","src","_resolveTarget","assign","xhr","loadAllAsync","resources","error","_resources","utils.resolveUri","destroyResources","LoaderResource","_error","LoaderBase","loadAsync","_loadAsync","promises","all","_resolveXhr","utils.isUrl","requestOptions","BlobLoaderResource","URL","webkitURL","revokeObjectURL","LoaderBase.LoaderResource","BlobLoader","fetch","ok","statusText","blob","createObjectURL","catch","LoaderBase.LoaderBase","TextureLoaderResource","removeCache","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","TextureLoader","_loadBaseTextureAsync","HTMLImageElement","HTMLVideoElement","crossOrigin","reject","bt","from","valid","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","JsonLoaderResource","JsonLoader","json","SpritesheetLoaderResource","SpritesheetLoader","_loadTextureAsync","_loadJsonAsync","textures","meta","image","frames","textureVersion","ss","PIXI.Spritesheet","parse","TextureLoader.TextureLoaderResource","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","others","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","_loadedResourceHandler","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","classAssetCount","total","instanceAssetCount","assetCount","f","manifest","resolver","j","JsLoaderResource","ref","createElement","text","JsLoader"],"mappings":"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"}