{"version":3,"file":"Pixim.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/utils/index.ts","../src/modules/loader/LoaderBase.ts","../src/modules/content/ManifestBase.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolvePath(path: string, basepath: string) {\r\n\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\treturn path;\r\n\t} else {\r\n\t\treturn PIXI.utils.url.resolve(basepath.replace(/([^\\/])$/, '$1/'), path);\r\n\t}\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport type TLoaderResourceVersion = string | number;\r\n\r\nexport interface ILoaderOption {\r\n\tbasepath?: string;\r\n\tversion?: TLoaderResourceVersion;\r\n\tuseCache?: boolean;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: LoaderResource<T>;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TResource> extends Emitter {\r\n\tprotected _options: ILoaderOption;\r\n\t\r\n\tconstructor(options: ILoaderOption = {}) {\r\n\t\tsuper();\r\n\t\tthis._options = options;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tabstract loadAsync(target: TTarget, options: ILoaderOption): Promise<LoaderResource<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tabstract loadAllAsync(targets: ILoaderTargetDictionary<TTarget>, options: ILoaderOption): Promise<ILoaderResourceDictionary<TResource>>;\r\n\t\r\n\tprotected _resolveBasepath(basepath?: string) {\r\n\t\treturn typeof basepath === 'string' ? basepath : (this._options.basepath || '');\r\n\t}\r\n\t\r\n\tprotected _resolveVersion(version?: TLoaderResourceVersion) {\r\n\t\treturn (typeof version === 'string' || typeof version === 'number') ? version : (this._options.version || '');\r\n\t}\r\n\t\r\n\tprotected _resolveUseCache(useCache?: boolean) {\r\n\t\treturn typeof useCache === 'boolean' ? useCache : (this._options.useCache || false);\r\n\t}\r\n\t\r\n\tprotected _resolveUrl(url: string, options: ILoaderOption = {}) {\r\n\t\tconst preUri = utils.resolvePath(url, this._resolveBasepath(options.basepath));\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\t\r\n\t\tconst uri =\r\n\t\t\tversion\r\n\t\t\t? utils.resolveQuery(preUri, { _fv: version })\r\n\t\t\t: preUri;\r\n\t\t\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fired when one of the resources has succeeded loading.\r\n\t * \r\n\t * @event\r\n\t */\r\n\tloaderAssetLoaded?(data: { target: TTarget, resource: LoaderResource<TResource> }): void {}\r\n}\r\n\r\ndelete(LoaderBase.prototype[EVENT_LOADER_ASSET_LOADED]);","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IManifestClass {\r\n\tnew(): ManifestBase<any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport abstract class ManifestBase<TTarget, TResource> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: LoaderBase.ILoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TResource> = {};\r\n\t\tconst targets: IManifestTargetDictionary<TTarget> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\ttargets[i] = this._data[i].target;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(targets, options)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected abstract _loadAsync(targets: IManifestTargetDictionary<TTarget>, options: LoaderBase.ILoaderOption): Promise<LoaderBase.ILoaderResourceDictionary<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprotected _doneLoaderAsync(loader: LoaderBase.LoaderBase<TTarget, TResource>, targets: IManifestTargetDictionary<TTarget>) {\r\n\t\tloader.on(LoaderBase.EVENT_LOADER_ASSET_LOADED, (resource: TResource) => {\r\n\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t});\r\n\t\t\r\n\t\treturn loader.loadAllAsync(targets, {});\r\n\t}\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\tthis._data.destroy(true);\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource> {\r\n\tloadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\t\treturn this._loadFromElementAsync(target, options);\r\n\t\t\t} else if (target.indexOf('data:') === 0) {\r\n\t\t\t\treturn this._loadFromDataUriAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadFromUrlAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then((resource: TextureLoaderResource) => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ITextureLoaderTargetDictionary, options: ITextureLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: ITextureLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromUrlAsync(url: string, options: ITextureLoaderOption = {}) {\r\n\t\treturn this._loadAsync(this._resolveUrl(url, options), options);\r\n\t}\r\n\t\r\n\tprivate _loadFromElementAsync(element: TTextureLoaderElementTarget, options: LoaderBase.ILoaderOption = {}) {\r\n\t\telement.crossOrigin = 'anonymous';\r\n\t\telement.src = this._resolveUrl(element.src, options);\r\n\t\t\r\n\t\treturn this._loadAsync(element);\r\n\t}\r\n\t\r\n\tprivate _loadFromDataUriAsync(dataUri: string, options: LoaderBase.ILoaderOption = {}) {\r\n\t\treturn this._loadAsync(dataUri, options);\r\n\t}\r\n\t\r\n\tprivate _loadAsync(target: TTextureLoaderTarget, options: LoaderBase.ILoaderOption = {}) {\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\t\r\n\t\treturn new Promise<TextureLoaderResource>(resolve => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(bt), null));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), null));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), e));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ITextureManifestTargetDictionary, options: TextureLoader.ITextureLoaderOption = {}) {\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tTextureLoader.TextureLoaderResource.removeCache(this._data[i]);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource> {\r\n\tloadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\tif (typeof target === 'string') {\r\n\t\t\treturn this._loadFromUrlsAsync({ [KEY_SINGLE_SPRITESHEET]: target }, options)\r\n\t\t\t\t.then(resources => {\r\n\t\t\t\t\treturn resources[KEY_SINGLE_SPRITESHEET];\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn this._loadFromJsonsAsync({ [KEY_SINGLE_SPRITESHEET]: target }, options)\r\n\t\t\t\t.then(resources => {\r\n\t\t\t\t\treturn resources[KEY_SINGLE_SPRITESHEET];\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ISpritesheetLoaderTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst urls: ISpritesheetLoaderUrlTargetDictionary = {};\r\n\t\tconst jsons: ISpritesheetLoaderJsonTargetDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\t\r\n\t\t\tif (typeof target === 'string') {\r\n\t\t\t\turls[i] = target;\r\n\t\t\t} else {\r\n\t\t\t\tjsons[i] = target;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all([\r\n\t\t\tthis._loadFromUrlsAsync(urls, options),\r\n\t\t\tthis._loadFromJsonsAsync(jsons, options)\r\n\t\t])\r\n\t\t.then(resolvers => {\r\n\t\t\treturn Object.assign({}, ...resolvers);\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromUrlsAsync(targets: ISpritesheetLoaderUrlTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tconst res: ISpritesheetLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst loader = new PIXI.Loader();\r\n\t\t\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\tif (version) {\r\n\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t}\r\n\t\t\r\n\t\tconst basepath = this._resolveBasepath(options.basepath);\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tconst uri = utils.resolvePath(target, basepath);\r\n\t\t\tloader.add(i, uri, {\r\n\t\t\t\tcrossOrigin: true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\tif (!useCache) {\r\n\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\tif (resource.textures) {\r\n\t\t\t\t\tfor (let i in resource.textures) {\r\n\t\t\t\t\t\tconst texture = resource.textures[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!texture) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (resource.texture) {\r\n\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(resource.texture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<ISpritesheetLoaderResourceDictionary>(resolve => {\r\n\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\tif (resource && resource.extension === 'json' && !resource.error && resource.textures) {\r\n\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target: resource.name, resource: new SpritesheetLoaderResource(resource.textures, null) });\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tloader.load((loader, resources) => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!targets[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, 'invalid json');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, resource.error);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.textures) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, 'invalid texture');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = new SpritesheetLoaderResource(resource.textures, null);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromJsonsAsync(targets: ISpritesheetLoaderJsonTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tconst res: ISpritesheetLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tpromises.push(\r\n\t\t\t\tloader.loadAsync(target.meta.image, options)\r\n\t\t\t\t\t.then((resource: TextureLoader.TextureLoaderResource) => {\r\n\t\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\t\treturn new SpritesheetLoaderResource({}, resource.error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, target);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Promise<SpritesheetLoaderResource>(resolve => {\r\n\t\t\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\t\t\tconst resource = new SpritesheetLoaderResource(ss.textures, null);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!useCache) {\r\n\t\t\t\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tresolve(resource);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(e => {\r\n\t\t\t\t\t\treturn new SpritesheetLoaderResource({}, e);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((resource: SpritesheetLoaderResource) => {\r\n\t\t\t\t\t\tif (!resource.error) {\r\n\t\t\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ISpritesheetManifestTargetDictionary, options: SpritesheetLoader.ISpritesheetLoaderOption = {}) {\r\n\t\tconst loader = new SpritesheetLoader.SpritesheetLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data.stop();\r\n\t\tthis._data.unload();\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource> {\r\n\tloadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\tconst url = this._resolveUrl(target, options);\r\n\t\t\r\n\t\treturn new Promise<SoundLoaderResource>(resolve => {\r\n\t\t\tconst howl = new Howl({\r\n\t\t\t\tsrc: url,\r\n\t\t\t\tonload: () => {\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, null));\r\n\t\t\t\t},\r\n\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\tconst e = new Error('invalid resource: ' + url);\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, e));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t\t.then((resource: SoundLoaderResource) => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ISoundLoaderTargetDictionary, options: ISoundLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: ISoundLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ISoundManifestTargetDictionary, options: SoundLoader.ISoundLoaderOption = {}) {\r\n\t\tconst loader = new SoundLoader.SoundLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource> {\r\n\tloadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\tconst url = this._resolveUrl(target, options);\r\n\t\t\r\n\t\treturn fetch(url)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t\t.catch((e: any) => new JsonLoaderResource({}, e))\r\n\t\t\t.then((resource: JsonLoaderResource) => {\r\n\t\t\t\tif (!resource.error) {\r\n\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn resource;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: IJsonLoaderTargetDictionary, options: IJsonLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: IJsonLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/*\r\n\tprivate _loadFromUrlsAsync(targets: IJsonLoaderTargetDictionary, options: IJsonLoaderOption = {}) {\r\n\t\tconst res: IJsonLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst loader = new PIXI.Loader();\r\n\t\t\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\tif (version) {\r\n\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t}\r\n\t\t\r\n\t\tconst basepath = this._resolveBasepath(options.basepath);\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tconst uri = utils.resolvePath(target, basepath);\r\n\t\t\tloader.add(i, uri, {\r\n\t\t\t\tcrossOrigin: true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<IJsonLoaderResourceDictionary>(resolve => {\r\n\t\t\tloader.load((loader, resources) => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!targets[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\tres[i] = new JsonLoaderResource({}, 'invalid json');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tres[i] = new JsonLoaderResource({}, resource.error);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = new JsonLoaderResource(resource.data, null);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t*/\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource> {\r\n\tprotected _loadAsync(targets: IJsonManifestTargetDictionary, options: JsonLoader.IJsonLoaderOption = {}) {\r\n\t\tconst loader = new JsonLoader.JsonLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport { EVENT_LOADER_ASSET_LOADED } from '../loader/index';\r\n\r\nexport interface IContentAssetVersion {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface IContentAssetCache {\r\n\t[key: string]: boolean;\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[key: string]: ManifestBase<any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\tuseCache: IContentAssetCache;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: string | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * Whether cache textures.\r\n\t */\r\n\tuseCache?: boolean | IContentAssetCache;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i]();\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst basepath: string = options.basepath || '';\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tconst v = options.version || '';\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tversion[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.version = version;\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.useCache) !== 'object') {\r\n\t\t\tconst useCache: IContentAssetCache = {};\r\n\t\t\tconst v = options.useCache || false;\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tuseCache[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.useCache = useCache;\r\n\t\t}\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\tuseCache: options.useCache || false,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].destroyResources();\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].destroyResources();\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget manifestAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst versions: IContentAssetVersion = this._piximData.version;\r\n\t\tconst useCaches: IContentAssetCache = this._piximData.useCache;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type = i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tconst version = versions[type] || '';\r\n\t\t\tconst useCache = useCaches[type] || false;\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[type];\r\n\t\t\tmanifest.on(EVENT_LOADER_ASSET_LOADED, resource => {\r\n\t\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync({ basepath, version, useCache }));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","resolvePath","path","basepath","indexOf","PIXI.utils","url","resolve","resolveQuery","uri","queries","q","t","split","search","join","LoaderResource","data","error","_data","_error","LoaderBase","options","_options","_resolveBasepath","_resolveVersion","version","_resolveUseCache","useCache","_resolveUrl","preUri","utils.resolvePath","utils.resolveQuery","_fv","loaderAssetLoaded","prototype","ManifestBase","unrequired","target","count","Object","keys","getAsync","Promise","res","_loadAsync","resources","resource","_resources","_doneLoaderAsync","loader","loadAllAsync","destroyResources","TextureLoaderResource","removeCache","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","LoaderBase.LoaderResource","TextureLoader","loadAsync","HTMLImageElement","HTMLVideoElement","_loadFromElementAsync","_loadFromDataUriAsync","_loadFromUrlAsync","promises","all","element","crossOrigin","src","dataUri","bt","from","valid","LoaderBase.LoaderBase","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","SpritesheetLoaderResource","TextureLoader.TextureLoaderResource","SpritesheetLoader","_loadFromUrlsAsync","_loadFromJsonsAsync","urls","jsons","resolvers","assign","PIXI.Loader","defaultQueryString","use","textures","extension","load","meta","image","ss","PIXI.Spritesheet","parse","catch","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonLoaderResource","JsonLoader","fetch","json","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","v","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","manifestAssetCount","total","versions","useCaches","manifest","resolver","j"],"mappings":"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"}