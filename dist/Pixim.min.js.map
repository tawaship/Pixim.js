{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../src/modules/TaskManager.ts","../src/modules/Application.ts","../src/modules/Task.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Container.ts","../src/modules/ContentManifestBase.ts","../src/modules/ContentImageManifest.ts","../src/modules/ContentSpritesheetManifest.ts","../src/modules/ContentSoundManifest.ts","../src/modules/ContentDeliver.ts","../src/modules/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n\t */\r\n\texport class Emitter extends _Emitter {}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Emitter = Pixim.Emitter;","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { ITickerData } from './Application';\r\nimport { Container } from './Container';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface IObserverDictionary {\r\n\t\t[name: number]: Container;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _observers: IObserverDictionary = {};\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _lastTickerData: ITickerData = { delta: 1 };\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\texport class TaskManager {\r\n\t\tconstructor() {\r\n\t\t\tthrow new Error('This class can not instantiate.');\r\n\t\t}\r\n\t\t\r\n\t\tstatic addObserver(id: number, observer: Container) {\r\n\t\t\t_observers[id] = observer;\r\n\t\t\tobserver.updateTask(_lastTickerData);\r\n\t\t}\r\n\t\t\r\n\t\tstatic removeObserver(id: number) {\r\n\t\t\tdelete(_observers[id]);\r\n\t\t}\r\n\t\t\r\n\t\tstatic done(e: ITickerData) {\r\n\t\t\t_lastTickerData = e;\r\n\t\t\t\r\n\t\t\tfor (let i in _observers) {\r\n\t\t\t\t_observers[i].updateTask(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import TaskManager = Pixim.TaskManager;","import * as PIXI from 'pixi.js';\r\nimport { Content } from './Content';\r\nimport { Emitter } from './Emitter';\r\nimport { TaskManager } from './TaskManager';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface IRootDictionary {\r\n\t\t[id: string]: PIXI.Container;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILayerDictionary{\r\n\t\t[name: string]: PIXI.Container;\r\n\t}\r\n\t\r\n\texport interface ITickerData {\r\n\t\tdelta: number\r\n\t}\r\n\t\r\n\texport interface IAdjustDelegate {\r\n\t\t(app: Application): void;\r\n\t}\r\n\t\r\n\texport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\t\r\n\texport interface IApplicationOption {\r\n\t\t/**\r\n\t\t * Parent node of canvas element.\r\n\t\t */\r\n\t\tcontainer?: HTMLElement;\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t\t * Or the resizing process to be executed at that time.\r\n\t\t */\r\n\t\tautoAdjust?: TAutoAdjust;\r\n\t}\r\n\t\r\n\texport interface IApplicationData {\r\n\t\tisRun: boolean;\r\n\t\t/**\r\n\t\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t\t */\r\n\t\tapp: PIXI.Application;\r\n\t\tstage: PIXI.Container;\r\n\t\tview: HTMLCanvasElement;\r\n\t\tcontainer: HTMLElement;\r\n\t\toptions: IApplicationOption;\r\n\t\tlayers: ILayerDictionary;\r\n\t}\r\n\t\r\n\texport interface ISize {\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IPosition {\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t}\r\n\t\r\n\texport interface IHorizontal {\r\n\t\tx: number;\r\n\t\twidth: number;\r\n\t}\r\n\t\r\n\texport interface IVertical {\r\n\t\ty: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IRect extends ISize, IPosition {}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _roots: IRootDictionary = {};\r\n\t\r\n\t/*\r\n\tfunction taskHandler(obj: PIXI.Container, e: ITaskTickerData): void {\r\n\t\tif (obj instanceof Container) {\r\n\t\t\tobj.task.update(e);\r\n\t\t\t\r\n\t\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\t\tconst child = obj.children[i];\r\n\t\t\t\r\n\t\t\tif (child instanceof PIXI.Container) {\r\n\t\t\t\ttaskHandler(child, e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t\r\n\texport class Application extends Emitter {\r\n\t\tprotected _piximData: IApplicationData;\r\n\t\t\r\n\t\t/**\r\n\t\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t\t * @param piximOptions Optional data for Pixim.\r\n\t\t */\r\n\t\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\t\tsuper();\r\n\t\t\t\r\n\t\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\t\tapp.stop();\r\n\t\t\t\r\n\t\t\tconst stage: PIXI.Container = app.stage;\r\n\t\t\t\r\n\t\t\tconst view: HTMLCanvasElement = app.view;\r\n\t\t\tview.style.position = 'absolute';\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tif (piximOptions.container) {\r\n\t\t\t\tpiximOptions.container.appendChild(view);\r\n\t\t\t} else {\r\n\t\t\t\tif (!view.parentNode) {\r\n\t\t\t\t\tdocument.body.appendChild(view);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\tisRun: false,\r\n\t\t\t\tapp,\r\n\t\t\t\tstage,\r\n\t\t\t\tview,\r\n\t\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\t\tlayers: {},\r\n\t\t\t\toptions: piximOptions\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\t\r\n\t\t\tticker.add((delta: number) => {\r\n\t\t\t\tTaskManager.done({ delta });\r\n\t\t\t\t//taskHandler(stage, { delta });\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (autoAdjust) {\r\n\t\t\t\tif (autoAdjust === true) {\r\n\t\t\t\t\tconst f = () => {\r\n\t\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\t\r\n\t\t\t\t\tf();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst f = () => {\r\n\t\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\t\r\n\t\t\t\t\tf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tget app(): PIXI.Application {\r\n\t\t\treturn this._piximData.app;\r\n\t\t}\r\n\t\t\r\n\t\tget stage(): PIXI.Container {\r\n\t\t\treturn this._piximData.stage;\r\n\t\t}\r\n\t\t\r\n\t\tget view(): HTMLCanvasElement {\r\n\t\t\treturn this._piximData.view;\r\n\t\t}\r\n\t\t\r\n\t\tget container(): HTMLElement {\r\n\t\t\treturn this._piximData.container;\r\n\t\t}\r\n\t\t\r\n\t\tset container(container: HTMLElement) {\r\n\t\t\tthis._piximData.container = container || document.body;\r\n\t\t\tif (this._piximData.view.parentNode) {\r\n\t\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether application has layer.\r\n\t\t */\r\n\t\tprivate _hasLayer(name: string): boolean {\r\n\t\t\treturn !!this._piximData.layers[name];\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Add layer to application.\r\n\t\t */\r\n\t\taddLayer(name: string) {\r\n\t\t\tif (this._hasLayer(name)) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.layers[name] = this._piximData.stage.addChild(new PIXI.Container());\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove layer form application.\r\n\t\t */\r\n\t\tremoveLayer(name: string) {\r\n\t\t\tif (!this._hasLayer(name)) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.stage.removeChild(this._piximData.layers[name]);\r\n\t\t\tdelete(this._piximData.layers[name]);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Attach content to application.\r\n\t\t */\r\n\t\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\t\treturn content.buildAsync()\r\n\t\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\t\r\n\t\t\t\t\t_roots[content.contentID] = root;\r\n\t\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn root;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Detach content from application.\r\n\t\t */\r\n\t\tdetach(content: Content) {\r\n\t\t\tconst root: PIXI.Container = _roots[content.contentID];\r\n\t\t\t\r\n\t\t\tif (!root) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._destroyRoot(root);\r\n\t\t\tdelete(_roots[content.contentID]);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Play application.\r\n\t\t */\r\n\t\tplay() {\r\n\t\t\tif (this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\t\r\n\t\t\tthis._piximData.app.start();\r\n\t\t\tthis._piximData.isRun = true;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Stop application.\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tif (!this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._piximData.view.parentNode) {\r\n\t\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.app.stop();\r\n\t\t\tthis._piximData.isRun = false;\r\n\t\t\t\r\n\t\t\tconst stage: PIXI.Container = this._piximData.app.stage;\r\n\t\t\t\r\n\t\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\t\r\n\t\t\tfor (let i in layers) {\r\n\t\t\t\tlayers[i].removeChildren();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst keys: string[] = [];\r\n\t\t\tfor (let i in _roots) {\r\n\t\t\t\tthis._destroyRoot(_roots[i]);\r\n\t\t\t\tkeys.push(i);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\t\tdelete(_roots[keys[i]]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.app.ticker.update();\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tprivate _destroyRoot(root: PIXI.Container): void {\r\n\t\t\tif (root.parent) {\r\n\t\t\t\troot.parent.removeChild(root);\r\n\t\t\t}\r\n\t\t\troot.destroy();\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Pause (or restart) application.\r\n\t\t */\r\n\t\tpause(paused: boolean) {\r\n\t\t\tif (!this._piximData.isRun) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (paused) {\r\n\t\t\t\tthis._piximData.app.stop();\r\n\t\t\t} else {\r\n\t\t\t\tthis._piximData.app.start();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified rectangle.\r\n\t\t * \r\n\t\t * @param rect Rectangle to adjust.\r\n\t\t */\r\n\t\tfullScreen(rect?: IRect) {\r\n\t\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\t\tconst r: IRect = rect || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified width.\r\n\t\t * \r\n\t\t * @param width Width to adjust.\r\n\t\t */\r\n\t\tadjustWidth(width?: number) {\r\n\t\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\t\r\n\t\t\tconst h: number = w / view.width * view.height;\r\n\t\t\t\r\n\t\t\t//const frame = this._piximData.frame;\r\n\t\t\tview.style.width = `${w}px`;\r\n\t\t\tview.style.height = `${h}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Resize canvas to fit specified height.\r\n\t\t * \r\n\t\t * @param height Height to adjust.\r\n\t\t */\r\n\t\tadjustHeight(height?: number) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\t\r\n\t\t\tconst w = h / view.height * view.width;\r\n\t\t\t\r\n\t\t\t//const frame = this._piximData.frame;\r\n\t\t\tview.style.height = `${h}px`;\r\n\t\t\tview.style.width = `${w}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Left justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoLeft(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Center justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoCenter(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Right justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param horizontal Horizontal data used to calculate the position.\r\n\t\t */\r\n\t\ttoRight(horizontal?: IHorizontal) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\t\tx: 0,\r\n\t\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Top justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoTop(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Middle justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoMiddle(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Bottom justified with respect to the reference data.\r\n\t\t * \r\n\t\t * @param vertical Vertical data used to calculate the position.\r\n\t\t */\r\n\t\ttoBottom(vertical?: IVertical) {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\tconst ver: IVertical = vertical || {\r\n\t\t\t\ty: 0,\r\n\t\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tprivate _getViewRect(): IRect {\r\n\t\t\tconst view = this._piximData.view;\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IApplicationData = Pixim.IApplicationData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IApplicationOption = Pixim.IApplicationOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ITickerData = Pixim.ITickerData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ISize = Pixim.ISize;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IPosition = Pixim.IPosition;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IRect= Pixim.IRect;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Application = Pixim.Application;","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nnamespace Pixim {\r\n\texport interface ITaskData {\r\n\t\temitter: Emitter\r\n\t}\r\n\t\r\n\t/**\r\n\t * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n\t */\r\n\texport class Task extends _Task {\r\n\t\tprivate _piximData: ITaskData;\r\n\t\t\r\n\t\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\t\tsuper(tasks, context);\r\n\t\t\t\r\n\t\t\tthis.enabled = true;\r\n\t\t\tthis._piximData = {\r\n\t\t\t\temitter: new Emitter()\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\ton(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tonce(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\toff(type: string, callback: ITaskDelegate) {\r\n\t\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\temit(type: string, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.9.0\r\n\t\t */\r\n\t\temitAll(...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.9.0\r\n\t\t */\r\n\t\tcemitAll(context: any, ...args: any[]) {\r\n\t\t\tif (!this._taskData.enabled) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @deprecated 1.7.0\r\n\t\t */\r\n\t\tclear(type: string = '') {\r\n\t\t\tthis._piximData.emitter.clear(type);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tdestroy() {\r\n\t\t\tsuper.destroy();\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ITaskData = Pixim.ITaskData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Task = Pixim.Task;","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nnamespace Pixim {\r\n\texport interface IContainerData {\r\n\t\ttask: Task,\r\n\t\ttaskEnabledChildren: boolean\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _lastObserverID = 0;\r\n\t\r\n\t/**\r\n\t * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n\t */\r\n\texport class Container extends PIXI.Container {\r\n\t\tprotected _piximData: IContainerData;\r\n\t\t\r\n\t\tconstructor(...args: any[]) {\r\n\t\t\tsuper();\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\ttask: new Task([], this),\r\n\t\t\t\ttaskEnabledChildren: true\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis._piximData.task.first();\r\n\t\t\t\r\n\t\t\tconst _observerID = _lastObserverID++;\r\n\t\t\t\r\n\t\t\tthis.on('added', () => {\r\n\t\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.on('removed', () => {\r\n\t\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tupdateTask(e: ITickerData) {\r\n\t\t\tconst task: Task = this._piximData.task;\r\n\t\t\t\r\n\t\t\tif (!this.taskEnabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet p: PIXI.DisplayObject = this;\r\n\t\t\tlet f = true;\r\n\t\t\t\r\n\t\t\twhile (p) {\r\n\t\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\t\tf = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!f) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttask.done(e);\r\n\t\t\t\r\n\t\t\t// will be deprecated\r\n\t\t\ttask.cemitAll(this, e);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether the task works.\r\n\t\t */\r\n\t\tget taskEnabled(): boolean {\r\n\t\t\treturn this._piximData.task.enabled;\r\n\t\t}\r\n\t\t\r\n\t\tset taskEnabled(enabled) {\r\n\t\t\tthis._piximData.task.enabled = enabled;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Whether the children and subsequent tasks work.\r\n\t\t */\r\n\t\tget taskEnabledChildren(): boolean {\r\n\t\t\treturn this._piximData.taskEnabledChildren;\r\n\t\t}\r\n\t\t\r\n\t\tset taskEnabledChildren(enabled) {\r\n\t\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Task object that works only while it is being displayed.\r\n\t\t */\r\n\t\tget task(): Task {\r\n\t\t\treturn this._piximData.task;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Destroy instance.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy(...args: any[]): void {\r\n\t\t\tsuper.destroy(...args);\r\n\t\t\tthis._piximData.task.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContainerData = Pixim.IContainerData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Container = Pixim.Container;","import * as PIXI from 'pixi.js';\r\n\r\nnamespace Pixim {\r\n\texport interface IManifestDictionary {\r\n\t\t[name: string]: string;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPreManifest {\r\n\t\turl: string;\r\n\t\tunrequired: boolean;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPreManifestDictionary {\r\n\t\t[name: string]: IPreManifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IPostManifest extends IPreManifest {\r\n\t\tname: string;\r\n\t}\r\n\t\r\n\texport interface IPostManifestDictionary {\r\n\t\t[name: string]: IPostManifest;\r\n\t}\r\n\t\r\n\texport interface IContentManifestOption {\r\n\t\tunrequired?: boolean\r\n\t}\r\n\t\r\n\texport interface ILoadedResource {\r\n\t\tresource: any;\r\n\t\terror: boolean;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedResourceDictionary {\r\n\t\t[name: string]: ILoadedResource;\r\n\t}\r\n\t\r\n\texport interface IResourceDictionary {\r\n\t\t[name: string]: any;\r\n\t}\r\n\t\r\n\texport interface IContentResourceDictionary {\r\n\t\t[name: string]: IResourceDictionary;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _cache: IResourceDictionary = {};\r\n\t\r\n\texport abstract class ContentManifestBase {\r\n\t\tprivate _manifests: IPreManifestDictionary = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Register manifests.\r\n\t\t * \r\n\t\t * @param manifests Defined manifests.\r\n\t\t * @param option Manifest option data.\r\n\t\t */\r\n\t\tadd(manifests: IManifestDictionary, options: IContentManifestOption = {}): void {\r\n\t\t\tconst unrequired: boolean = options.unrequired || false;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tthis._manifests[i] = {\r\n\t\t\t\t\turl: manifests[i],\r\n\t\t\t\t\tunrequired\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Get resources.\r\n\t\t * \r\n\t\t * @param basepath Basement directory path of assets.\r\n\t\t */\r\n\t\tgetAsync(basepath: string): Promise<IResourceDictionary> {\r\n\t\t\tconst manifests: IPreManifestDictionary = this._manifests;\r\n\t\t\t\r\n\t\t\tconst resources: IResourceDictionary = {};\r\n\t\t\tconst loadable: IPostManifestDictionary = {};\r\n\t\t\tconst cache = _cache;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst manifest: IPreManifest = manifests[i];\r\n\t\t\t\tconst url: string = this._resolvePath(manifest.url, basepath);\r\n\t\t\t\t\r\n\t\t\t\t// query parameter is invalid for resource cache\r\n\t\t\t\tconst name: string = url.replace(/\\?.*/, '');\r\n\t\t\t\t\r\n\t\t\t\tif (cache[name]) {\r\n\t\t\t\t\tresources[i] = cache[name];\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tloadable[i] = {\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tunrequired: manifest.unrequired\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (Object.keys(loadable).length === 0) {\r\n\t\t\t\treturn Promise.resolve(resources);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._loadAsync(loadable)\r\n\t\t\t\t.then((res: ILoadedResourceDictionary) => {\r\n\t\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\t\tresources[i] = res[i].resource;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!res[i].error) {\r\n\t\t\t\t\t\t\tcache[loadable[i].name] = res[i].resource;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn resources;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Load resources.\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary): Promise<ILoadedResourceDictionary> {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Normalize asset path.\r\n\t\t */\r\n\t\tprivate _resolvePath(path: string, basepath: string): string {\r\n\t\t\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\t\t\treturn path;\r\n\t\t\t} else {\r\n\t\t\t\treturn PIXI.utils.url.resolve(basepath, path);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IManifestDictionary = Pixim.IManifestDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IPostManifestDictionary = Pixim.IPostManifestDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentManifestOption = Pixim.IContentManifestOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedResource = Pixim.ILoadedResource;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IResourceDictionary = Pixim.IResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentResourceDictionary = Pixim.IContentResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentManifestBase = Pixim.ContentManifestBase;","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedImageResource extends ILoadedResource {\r\n\t\tresource: PIXI.Texture\r\n\t}\r\n\t\r\n\texport interface ILoadedImageResourceDictionary {\r\n\t\t[name: string]: ILoadedImageResource;\r\n\t}\r\n\t\r\n\texport class ContentImageManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary): Promise<ILoadedImageResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedImageResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst res: ILoadedImageResourceDictionary = {};\r\n\t\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\t\tresource: resource.texture,\r\n\t\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedImageResourceDictionary = Pixim.ILoadedImageResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentImageManifest = Pixim.ContentImageManifest;","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedSpritesheetResource extends ILoadedResource {\r\n\t\tresource: PIXI.ITextureDictionary\r\n\t}\r\n\t\r\n\texport interface ILoadedSpritesheetResourceDictionary {\r\n\t\t[name: string]: ILoadedSpritesheetResource;\r\n\t}\r\n\t\r\n\texport class ContentSpritesheetManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary): Promise<ILoadedSpritesheetResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedSpritesheetResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst res: ILoadedSpritesheetResourceDictionary = {};\r\n\t\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\t\tif (!manifests[i]) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst textures: PIXI.ITextureDictionary = resource.textures || {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst error: boolean = !!resource.error;\r\n\t\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\t\tresource: textures,\r\n\t\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedSpritesheetResourceDictionary = Pixim.ILoadedSpritesheetResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentSpritesheetManifest = Pixim.ContentSpritesheetManifest;","import { Howl } from 'howler';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface ILoadedSoundResource extends ILoadedResource {\r\n\t\tresource: Howl\r\n\t}\r\n\t\r\n\texport interface ILoadedSoundResourceDictionary{\r\n\t\t[name: string]: ILoadedSoundResource;\r\n\t}\r\n\t\r\n\texport class ContentSoundManifest extends ContentManifestBase {\r\n\t\t/**\r\n\t\t * Load image resources.\r\n\t\t * \r\n\t\t * @override\r\n\t\t */\r\n\t\tprotected _loadAsync(manifests: IPostManifestDictionary): Promise<ILoadedSoundResourceDictionary> {\r\n\t\t\treturn new Promise((resolve: (resource: ILoadedSoundResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\t\tconst res: ILoadedSoundResourceDictionary = {};\r\n\t\t\t\t\r\n\t\t\t\tfunction loadedHandler(key: string, howl: Howl, error: boolean): void {\r\n\t\t\t\t\tres[key] = {\r\n\t\t\t\t\t\tresource: howl,\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (++loadedCount < loadCount) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet loadCount: number = 0;\r\n\t\t\t\tlet loadedCount:number  = 0;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tif (!Howl) {\r\n\t\t\t\t\t\tconsole.warn('You need \"howler.js\" to load sound asset.');\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t++loadCount;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tconst _i = i;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc: manifests[_i].url,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tloadedHandler(_i, howl, false);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tif (!manifests[_i].unrequired) {\r\n\t\t\t\t\t\t\t\treject({ [_i]: manifests[_i].url});\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tloadedHandler(_i, howl, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ILoadedSoundResourceDictionary = Pixim.ILoadedSoundResourceDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentSoundManifest = Pixim.ContentSoundManifest;","import * as PIXI from 'pixi.js';\r\nimport { Container } from './Container';\r\nimport { IContentResourceDictionary } from './ContentManifestBase';\r\n\r\nnamespace Pixim {\r\n\texport interface IContentLibrary {\r\n\t\t[name: string]: typeof PIXI.Container | typeof Container\r\n\t}\r\n\t\r\n\texport interface IVariableDictionary {\r\n\t\t[name: string]: any;\r\n\t}\r\n\t\r\n\texport interface IContentDeliverData {\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tlib: IContentLibrary,\r\n\t\tresources: IContentResourceDictionary,\r\n\t\tvars: IVariableDictionary\r\n\t}\r\n\t\r\n\texport class ContentDeliver {\r\n\t\tprotected _piximData: IContentDeliverData;\r\n\t\t\r\n\t\tconstructor(data: IContentDeliverData) {\r\n\t\t\tthis._piximData = {\r\n\t\t\t\twidth: data.width,\r\n\t\t\t\theight: data.height,\r\n\t\t\t\tlib: data.lib,\r\n\t\t\t\tresources: data.resources,\r\n\t\t\t\tvars: data.vars\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Content width.\r\n\t\t */\r\n\t\tget width(): number {\r\n\t\t\treturn this._piximData.width;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Content height.\r\n\t\t */\r\n\t\tget height(): number {\r\n\t\t\treturn this._piximData.height;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Defined classes in content.\r\n\t\t */\r\n\t\tget lib(): IContentLibrary {\r\n\t\t\treturn this._piximData.lib;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Loaded resources.\r\n\t\t */\r\n\t\tget resources(): IContentResourceDictionary {\r\n\t\t\treturn this._piximData.resources;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Defined variables by framework.\r\n\t\t */\r\n\t\tget vars() {\r\n\t\t\treturn this._piximData.vars;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentLibrary = Pixim.IContentLibrary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IVariableDictionary = Pixim.IVariableDictionary;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentDeliverData = Pixim.IContentDeliverData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContentDeliver = Pixim.ContentDeliver;","import * as PIXI from 'pixi.js';\r\nimport { IResourceDictionary, IContentResourceDictionary, IManifestDictionary, IContentManifestOption } from './ContentManifestBase';\r\nimport { ContentImageManifest } from './ContentImageManifest';\r\nimport { ContentSpritesheetManifest } from './ContentSpritesheetManifest';\r\nimport { ContentSoundManifest } from './ContentSoundManifest';\r\nimport { ContentDeliver, IVariableDictionary, IContentLibrary } from './ContentDeliver';\r\n\r\nnamespace Pixim {\r\n\t/**\r\n\t * @private\r\n\t */\r\n\ttype TContentManifestType = 'images' | 'spritesheets' | 'sounds';\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinterface IContentManifests { \r\n\t\timages: ContentImageManifest;\r\n\t\tspritesheets: ContentSpritesheetManifest;\r\n\t\tsounds: ContentSoundManifest;\r\n\t}\r\n\t\r\n\texport interface IContentConfigData {\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t}\r\n\t\r\n\texport interface IContentData {\r\n\t\tcontentID: string;\r\n\t\tbasepath: string;\r\n\t\t$: ContentDeliver;\r\n\t\tmanifests: IContentManifests;\r\n\t\tadditionalManifests: IContentManifests;\r\n\t\tpreloadPromise: Promise<void> | null;\r\n\t\tpostloadPromise: Promise<void> | null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tinterface TContents {\r\n\t\t[name: string]: typeof Content;\r\n\t};\r\n\t\r\n\texport interface IContentOption {\r\n\t\t/**\r\n\t\t * Asset root path.\r\n\t\t */\r\n\t\tbasepath?: string;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconst _contents: TContents = {};\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tlet _contentID: number = 0;\r\n\t\r\n\texport interface IContentStaticData {\r\n\t\tconfig: IContentConfigData;\r\n\t\tmanifests: IContentManifests;\r\n\t\tlib: IContentLibrary;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tfunction createManifests(): IContentManifests {\r\n\t\treturn {\r\n\t\t\timages: new ContentImageManifest(),\r\n\t\t\tspritesheets: new ContentSpritesheetManifest(),\r\n\t\t\tsounds: new ContentSoundManifest()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tfunction createContentStatic(): IContentStaticData {\r\n\t\treturn {\r\n\t\t\tconfig: {\r\n\t\t\t\twidth: 450,\r\n\t\t\t\theight: 800\r\n\t\t\t},\r\n\t\t\tmanifests: createManifests(),\r\n\t\t\tlib: {}\r\n\t\t};\r\n\t}\r\n\t\r\n\texport class Content {\r\n\t\tprotected static _piximData: IContentStaticData;\r\n\t\t\r\n\t\tprotected _piximData: IContentData;\r\n\t\t\r\n\t\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\t\tconst basepath: string = (options.basepath || '').replace(/([^/])$/, '$1/');\r\n\t\t\t\r\n\t\t\tthis._piximData = {\r\n\t\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\t\tbasepath,\r\n\t\t\t\t$: new ContentDeliver({\r\n\t\t\t\t\twidth: piximData.config.width,\r\n\t\t\t\t\theight: piximData.config.height,\r\n\t\t\t\t\tlib: piximData.lib,\r\n\t\t\t\t\tresources: {},\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t}),\r\n\t\t\t\tmanifests: piximData.manifests,\r\n\t\t\t\tadditionalManifests: createManifests(),\r\n\t\t\t\tpreloadPromise: null,\r\n\t\t\t\tpostloadPromise: null\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Create a cloned content class.\r\n\t\t * \r\n\t\t * @param key Content name.\r\n\t\t * @return Cloned content class.\r\n\t\t */\r\n\t\tstatic create(key: string = ''): typeof Content {\r\n\t\t\tif (key && key in _contents) {\r\n\t\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tclass ContentClone extends Content {\r\n\t\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\t\r\n\t\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (!key) {\r\n\t\t\t\treturn ContentClone;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn _contents[key] = ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Get cloned content.\r\n\t\t */\r\n\t\tstatic get(key: string) {\r\n\t\t\treturn _contents[key];\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove cloned content.\r\n\t\t * \r\n\t\t * @function Pixim.Content.removeContent\r\n\t\t * @param key {string}\r\n\t\t */\r\n\t\tstatic remove(key: string): void {\r\n\t\t\tdelete(_contents[key]);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define assets for class.\r\n\t\t */\r\n\t\tstatic defineManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.manifests[key].add(data, options);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define image assets for class.\r\n\t\t */\r\n\t\tstatic defineImages(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('images', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define spritesheet assets for class.\r\n\t\t */\r\n\t\tstatic defineSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('spritesheets', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define sound assets for class.\r\n\t\t */\r\n\t\tstatic defineSounds(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\t\treturn this.defineManifests('sounds', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Set the content settings.\r\n\t\t * \r\n\t\t * @param data Config data.\r\n\t\t */\r\n\t\tstatic setConfig(data: IContentConfigData) {\r\n\t\t\t//this._piximData.config.fps = data.fps;\r\n\t\t\tthis._piximData.config.width = data.width;\r\n\t\t\tthis._piximData.config.height = data.height;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define libraries that is material of the content.<br />\r\n\t\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t\t * \r\n\t\t * @param data Library data.\r\n\t\t */\r\n\t\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\t\tfor (let i in data) {\r\n\t\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * ID of this content.\r\n\t\t */\r\n\t\tget contentID(): string {\r\n\t\t\treturn this._piximData.contentID;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._piximData.additionalManifests[key].add(data, options);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define image assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddImages(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('images', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define spritesheet assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('spritesheets', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define sound assets for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddSounds(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\t\treturn this.addManifests('sounds', data, options);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Define valriables for instance.\r\n\t\t * \r\n\t\t * @return Returns itself for the method chaining.\r\n\t\t */\r\n\t\taddVars(data: IVariableDictionary): this {\r\n\t\t\tfor (let i in data) {\r\n\t\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Prepare content.\r\n\t\t */\r\n\t\tprepareAsync(): Promise<void> {\r\n\t\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Build content.\r\n\t\t */\r\n\t\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this.prepareAsync()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Preloads class assets.\r\n\t\t */\r\n\t\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\t\tif (this._piximData.preloadPromise) {\r\n\t\t\t\treturn this._piximData.preloadPromise;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Preloads instance assets.\r\n\t\t */\r\n\t\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\t\tif (this._piximData.postloadPromise) {\r\n\t\t\t\treturn this._piximData.postloadPromise;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\t\tconst basepath: string = this._piximData.basepath;\r\n\t\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\t\r\n\t\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\t\r\n\t\t\tif (loaderCount === 0) {\r\n\t\t\t\treturn Promise.resolve();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst promises: Promise<IResourceDictionary>[] = [];\r\n\t\t\tconst keys: TContentManifestType[] = [];\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst type: TContentManifestType = <TContentManifestType>i;\r\n\t\t\t\tkeys.push(type);\r\n\t\t\t\tpromises.push(manifests[type].getAsync(basepath));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Promise.all(promises)\r\n\t\t\t\t.then((resolver: IResourceDictionary) => {\r\n\t\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\t\tfor (let i in e) {\r\n\t\t\t\t\t\tconsole.error(`Asset '${i}: ${e[i]}' cannot load.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentData = Pixim.IContentData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentStaticData = Pixim.IContentStaticData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentConfigData = Pixim.IContentConfigData;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IContentOption = Pixim.IContentOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Content = Pixim.Content;\r\n\r\nexport { IVariableDictionary , IContentLibrary };"],"names":["Pixim","Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","_observers","_lastTickerData","delta","TaskManager","Error","addObserver","id","observer","updateTask","removeObserver","done","e","_roots","Application","pixiOptions","piximOptions","super","app","PIXI.Application","stop","stage","view","style","position","autoAdjust","_piximData","isRun","container","document","body","layers","options","ticker","add","f","fullScreen","window","addEventListener","prototypeAccessors","parentNode","appendChild","_hasLayer","name","addLayer","addChild","PIXI.Container","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","contentID","detach","_destroyRoot","play","start","removeChildren","keys","update","parent","destroy","pause","paused","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","Task","callbacks","_taskData","enabled","index","value","Array","isArray","list","Function","task","_to","Number","first","prev","next","to","finish","reset","tasks","emitter","_Task","_lastObserverID","Container","taskEnabledChildren","_observerID","taskEnabled","p","_cache","ContentManifestBase","manifests","unrequired","_manifests","url","getAsync","basepath","resources","loadable","cache","manifest","_resolvePath","Object","Promise","resolve","_loadAsync","res","resource","error","path","indexOf","PIXI.utils","ContentImageManifest","reject","loader","PIXI.Loader","crossOrigin","load","texture","ContentSpritesheetManifest","textures","ContentSoundManifest","loadedHandler","key","howl","loadedCount","loadCount","Howl","console","warn","_i","src","onload","onloaderror","ContentDeliver","data","lib","vars","_contents","_contentID","createManifests","images","spritesheets","sounds","Content","piximData","toString","$","config","additionalManifests","preloadPromise","postloadPromise","create","ContentClone","get","remove","defineManifests","defineImages","defineSpritesheets","defineSounds","setConfig","defineLibraries","addManifests","addImages","addSpritesheets","addSounds","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","catch","promises","all","resolver","j"],"mappings":"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"}