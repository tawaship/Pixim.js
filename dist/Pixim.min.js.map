{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/utils/index.ts","../src/modules/loader/LoaderBase.ts","../src/modules/content/ManifestBase.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolvePath(path: string, basepath: string) {\r\n\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\treturn path;\r\n\t} else {\r\n\t\treturn PIXI.utils.url.resolve(basepath.replace(/([^\\/])$/, '$1/'), path);\r\n\t}\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport type TLoaderResourceVersion = string | number;\r\n\r\nexport interface ILoaderOption {\r\n\tbasepath?: string;\r\n\tversion?: TLoaderResourceVersion;\r\n\tuseCache?: boolean;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: LoaderResource<T>;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TResource> extends Emitter {\r\n\tprotected _options: ILoaderOption;\r\n\t\r\n\tconstructor(options: ILoaderOption = {}) {\r\n\t\tsuper();\r\n\t\tthis._options = options;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tabstract loadAsync(target: TTarget, options: ILoaderOption): Promise<LoaderResource<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tabstract loadAllAsync(targets: ILoaderTargetDictionary<TTarget>, options: ILoaderOption): Promise<ILoaderResourceDictionary<TResource>>;\r\n\t\r\n\tprotected _resolveBasepath(basepath?: string) {\r\n\t\treturn typeof basepath === 'string' ? basepath : (this._options.basepath || '');\r\n\t}\r\n\t\r\n\tprotected _resolveVersion(version?: TLoaderResourceVersion) {\r\n\t\treturn (typeof version === 'string' || typeof version === 'number') ? version : (this._options.version || '');\r\n\t}\r\n\t\r\n\tprotected _resolveUseCache(useCache?: boolean) {\r\n\t\treturn typeof useCache === 'boolean' ? useCache : (this._options.useCache || false);\r\n\t}\r\n\t\r\n\tprotected _resolveUrl(url: string, options: ILoaderOption = {}) {\r\n\t\tconst preUri = utils.resolvePath(url, this._resolveBasepath(options.basepath));\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\t\r\n\t\tconst uri =\r\n\t\t\tversion\r\n\t\t\t? utils.resolveQuery(preUri, { _fv: version })\r\n\t\t\t: preUri;\r\n\t\t\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fired when one of the resources has succeeded loading.\r\n\t * \r\n\t * @event\r\n\t */\r\n\tloaderAssetLoaded?(data: { target: TTarget, resource: LoaderResource<TResource> }): void {}\r\n}\r\n\r\ndelete(LoaderBase.prototype[EVENT_LOADER_ASSET_LOADED]);","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IManifestClass {\r\n\tnew(): ManifestBase<any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport abstract class ManifestBase<TTarget, TResource> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: LoaderBase.ILoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TResource> = {};\r\n\t\tconst targets: IManifestTargetDictionary<TTarget> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\ttargets[i] = this._data[i].target;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(targets, options)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected abstract _loadAsync(targets: IManifestTargetDictionary<TTarget>, options: LoaderBase.ILoaderOption): Promise<LoaderBase.ILoaderResourceDictionary<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprotected _doneLoaderAsync(loader: LoaderBase.LoaderBase<TTarget, TResource>, targets: IManifestTargetDictionary<TTarget>) {\r\n\t\tloader.on(LoaderBase.EVENT_LOADER_ASSET_LOADED, (resource: TResource) => {\r\n\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t});\r\n\t\t\r\n\t\treturn loader.loadAllAsync(targets, {});\r\n\t}\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\tthis._data.destroy(true);\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource> {\r\n\tloadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\t\treturn this._loadFromElementAsync(target, options);\r\n\t\t\t} else if (target.indexOf('data:') === 0) {\r\n\t\t\t\treturn this._loadFromDataUriAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadFromUrlAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then((resource: TextureLoaderResource) => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ITextureLoaderTargetDictionary, options: ITextureLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: ITextureLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromUrlAsync(url: string, options: ITextureLoaderOption = {}) {\r\n\t\treturn this._loadAsync(this._resolveUrl(url, options), options);\r\n\t}\r\n\t\r\n\tprivate _loadFromElementAsync(element: TTextureLoaderElementTarget, options: LoaderBase.ILoaderOption = {}) {\r\n\t\telement.crossOrigin = 'anonymous';\r\n\t\telement.src = this._resolveUrl(element.src, options);\r\n\t\t\r\n\t\treturn this._loadAsync(element);\r\n\t}\r\n\t\r\n\tprivate _loadFromDataUriAsync(dataUri: string, options: LoaderBase.ILoaderOption = {}) {\r\n\t\treturn this._loadAsync(dataUri, options);\r\n\t}\r\n\t\r\n\tprivate _loadAsync(target: TTextureLoaderTarget, options: LoaderBase.ILoaderOption = {}) {\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\t\r\n\t\treturn new Promise<TextureLoaderResource>(resolve => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(bt), null));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), null));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), e));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ITextureManifestTargetDictionary, options: TextureLoader.ITextureLoaderOption = {}) {\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tTextureLoader.TextureLoaderResource.removeCache(this._data[i]);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource> {\r\n\tloadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\tif (typeof target === 'string') {\r\n\t\t\treturn this._loadFromUrlsAsync({ [KEY_SINGLE_SPRITESHEET]: target }, options)\r\n\t\t\t\t.then(resources => {\r\n\t\t\t\t\treturn resources[KEY_SINGLE_SPRITESHEET];\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn this._loadFromJsonsAsync({ [KEY_SINGLE_SPRITESHEET]: target }, options)\r\n\t\t\t\t.then(resources => {\r\n\t\t\t\t\treturn resources[KEY_SINGLE_SPRITESHEET];\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ISpritesheetLoaderTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst urls: ISpritesheetLoaderUrlTargetDictionary = {};\r\n\t\tconst jsons: ISpritesheetLoaderJsonTargetDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\t\r\n\t\t\tif (typeof target === 'string') {\r\n\t\t\t\turls[i] = target;\r\n\t\t\t} else {\r\n\t\t\t\tjsons[i] = target;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all([\r\n\t\t\tthis._loadFromUrlsAsync(urls, options),\r\n\t\t\tthis._loadFromJsonsAsync(jsons, options)\r\n\t\t])\r\n\t\t.then(resolvers => {\r\n\t\t\treturn Object.assign({}, ...resolvers);\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromUrlsAsync(targets: ISpritesheetLoaderUrlTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tconst res: ISpritesheetLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst loader = new PIXI.Loader();\r\n\t\t\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\tif (version) {\r\n\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t}\r\n\t\t\r\n\t\tconst basepath = this._resolveBasepath(options.basepath);\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tconst uri = utils.resolvePath(target, basepath);\r\n\t\t\tloader.add(i, uri, {\r\n\t\t\t\tcrossOrigin: true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\tif (!useCache) {\r\n\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\tif (resource.textures) {\r\n\t\t\t\t\tfor (let i in resource.textures) {\r\n\t\t\t\t\t\tconst texture = resource.textures[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!texture) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (resource.texture) {\r\n\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(resource.texture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<ISpritesheetLoaderResourceDictionary>(resolve => {\r\n\t\t\tloader.use((resource: PIXI.LoaderResource, next: () => void) => {\r\n\t\t\t\tif (resource && resource.extension === 'json' && !resource.error && resource.textures) {\r\n\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target: resource.name, resource: new SpritesheetLoaderResource(resource.textures, null) });\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tloader.load((loader, resources) => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!targets[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, 'invalid json');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, resource.error);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.textures) {\r\n\t\t\t\t\t\tres[i] = new SpritesheetLoaderResource({}, 'invalid texture');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = new SpritesheetLoaderResource(resource.textures, null);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadFromJsonsAsync(targets: ISpritesheetLoaderJsonTargetDictionary, options: ISpritesheetLoaderOption = {}) {\r\n\t\tconst res: ISpritesheetLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst useCache = this._resolveUseCache(options.useCache);\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tpromises.push(\r\n\t\t\t\tloader.loadAsync(target.meta.image, options)\r\n\t\t\t\t\t.then((resource: TextureLoader.TextureLoaderResource) => {\r\n\t\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\t\treturn new SpritesheetLoaderResource({}, resource.error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, target);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Promise<SpritesheetLoaderResource>(resolve => {\r\n\t\t\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\t\t\tconst resource = new SpritesheetLoaderResource(ss.textures, null);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!useCache) {\r\n\t\t\t\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tresolve(resource);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(e => {\r\n\t\t\t\t\t\treturn new SpritesheetLoaderResource({}, e);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((resource: SpritesheetLoaderResource) => {\r\n\t\t\t\t\t\tif (!resource.error) {\r\n\t\t\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ISpritesheetManifestTargetDictionary, options: SpritesheetLoader.ISpritesheetLoaderOption = {}) {\r\n\t\tconst loader = new SpritesheetLoader.SpritesheetLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data.stop();\r\n\t\tthis._data.unload();\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource> {\r\n\tloadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\tconst url = this._resolveUrl(target, options);\r\n\t\t\r\n\t\treturn new Promise<SoundLoaderResource>(resolve => {\r\n\t\t\tconst howl = new Howl({\r\n\t\t\t\tsrc: url,\r\n\t\t\t\tonload: () => {\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, null));\r\n\t\t\t\t},\r\n\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\tconst e = new Error('invalid resource: ' + url);\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, e));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t\t.then((resource: SoundLoaderResource) => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: ISoundLoaderTargetDictionary, options: ISoundLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: ISoundLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource> {\r\n\tprotected _loadAsync(targets: ISoundManifestTargetDictionary, options: SoundLoader.ISoundLoaderOption = {}) {\r\n\t\tconst loader = new SoundLoader.SoundLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource> {\r\n\tloadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\tconst url = this._resolveUrl(target, options);\r\n\t\t\r\n\t\treturn fetch(url)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t\t.catch((e: any) => new JsonLoaderResource({}, e))\r\n\t\t\t.then((resource: JsonLoaderResource) => {\r\n\t\t\t\tif (!resource.error) {\r\n\t\t\t\t\tthis.emit(LoaderBase.EVENT_LOADER_ASSET_LOADED, { target, resource });\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn resource;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tloadAllAsync(targets: IJsonLoaderTargetDictionary, options: IJsonLoaderOption = {}) {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: IJsonLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/*\r\n\tprivate _loadFromUrlsAsync(targets: IJsonLoaderTargetDictionary, options: IJsonLoaderOption = {}) {\r\n\t\tconst res: IJsonLoaderResourceDictionary = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst loader = new PIXI.Loader();\r\n\t\t\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\tif (version) {\r\n\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t}\r\n\t\t\r\n\t\tconst basepath = this._resolveBasepath(options.basepath);\r\n\t\tfor (let i in targets) {\r\n\t\t\tconst target = targets[i];\r\n\t\t\tconst uri = utils.resolvePath(target, basepath);\r\n\t\t\tloader.add(i, uri, {\r\n\t\t\t\tcrossOrigin: true\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<IJsonLoaderResourceDictionary>(resolve => {\r\n\t\t\tloader.load((loader, resources) => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!targets[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\tres[i] = new JsonLoaderResource({}, 'invalid json');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tres[i] = new JsonLoaderResource({}, resource.error);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = new JsonLoaderResource(resource.data, null);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t*/\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource> {\r\n\tprotected _loadAsync(targets: IJsonManifestTargetDictionary, options: JsonLoader.IJsonLoaderOption = {}) {\r\n\t\tconst loader = new JsonLoader.JsonLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport { EVENT_LOADER_ASSET_LOADED } from '../loader/index';\r\n\r\nexport interface IContentAssetVersion {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface IContentAssetCache {\r\n\t[key: string]: boolean;\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[key: string]: ManifestBase<any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\tuseCache: IContentAssetCache;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: string | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * Whether cache textures.\r\n\t */\r\n\tuseCache?: boolean | IContentAssetCache;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i]();\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst basepath: string = options.basepath || '';\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tconst v = options.version || '';\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tversion[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.version = version;\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.useCache) !== 'object') {\r\n\t\t\tconst useCache: IContentAssetCache = {};\r\n\t\t\tconst v = options.useCache || false;\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tuseCache[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.useCache = useCache;\r\n\t\t}\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\tuseCache: options.useCache || false,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].destroyResources();\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].destroyResources();\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget manifestAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst versions: IContentAssetVersion = this._piximData.version;\r\n\t\tconst useCaches: IContentAssetCache = this._piximData.useCache;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type = i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tconst version = versions[type] || '';\r\n\t\t\tconst useCache = useCaches[type] || false;\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[type];\r\n\t\t\tmanifest.on(EVENT_LOADER_ASSET_LOADED, resource => {\r\n\t\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync({ basepath, version, useCache }));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","resolvePath","path","basepath","indexOf","PIXI.utils","url","resolve","resolveQuery","uri","queries","q","t","split","search","join","EVENT_LOADER_ASSET_LOADED","LoaderResource","data","error","_data","_error","LoaderBase","options","_options","_resolveBasepath","_resolveVersion","version","_resolveUseCache","useCache","_resolveUrl","preUri","utils.resolvePath","utils.resolveQuery","_fv","loaderAssetLoaded","prototype","ManifestBase","unrequired","target","count","Object","keys","getAsync","Promise","res","_loadAsync","resources","resource","_resources","_doneLoaderAsync","loader","LoaderBase.EVENT_LOADER_ASSET_LOADED","loadAllAsync","destroyResources","TextureLoaderResource","removeCache","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","LoaderBase.LoaderResource","TextureLoader","loadAsync","HTMLImageElement","HTMLVideoElement","_loadFromElementAsync","_loadFromDataUriAsync","_loadFromUrlAsync","promises","all","element","crossOrigin","src","dataUri","bt","from","valid","LoaderBase.LoaderBase","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","SpritesheetLoaderResource","TextureLoader.TextureLoaderResource","KEY_SINGLE_SPRITESHEET","SpritesheetLoader","_loadFromUrlsAsync","_loadFromJsonsAsync","urls","jsons","resolvers","assign","PIXI.Loader","defaultQueryString","use","textures","extension","load","meta","image","ss","PIXI.Spritesheet","parse","catch","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonLoaderResource","JsonLoader","fetch","json","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","v","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","manifestAssetCount","total","versions","useCaches","manifest","resolver","j","exports"],"mappings":"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"}