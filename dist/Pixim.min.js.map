{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/content/ManifestBase.ts","../src/modules/utils/index.ts","../src/modules/loader/LoaderBase.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IManifestClass {\r\n\tnew(): ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class ManifestBase<TTarget, TResource, TFetchResolver> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: LoaderBase.ILoaderOption<TFetchResolver>) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TResource> = {};\r\n\t\tconst targets: IManifestTargetDictionary<TTarget> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\ttargets[i] = this._data[i].target;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(targets, options)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected abstract _loadAsync(targets: IManifestTargetDictionary<TTarget>, options: LoaderBase.ILoaderOption<TFetchResolver>): Promise<LoaderBase.ILoaderResourceDictionary<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprotected _doneLoaderAsync(loader: LoaderBase.LoaderBase<TTarget, TResource, TFetchResolver>, targets: IManifestTargetDictionary<TTarget>) {\r\n\t\tloader.onLoaded = resource => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t};\r\n\t\t\r\n\t\treturn loader.loadAllAsync(targets);\r\n\t}\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolvePath(basepath: string, path: string) {\r\n\tif (!isUrl(path)) {\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\t//if (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t//\treturn path;\r\n\t//} else {\r\n\t\treturn PIXI.utils.url.resolve(basepath.replace(/([^\\/])$/, '$1/'), path);\r\n\t//}\r\n}\r\n\r\nexport function isUrl(uri: string) {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (uri.indexOf('blob:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport type TLoaderPathDelegate = string | ((url: string) => string);\r\n\r\nexport interface IFetchRequestOption {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface ILoaderXhrOption<TResolver> {\r\n\trequestOptions?: IFetchRequestOption;\r\n\tdataResolver?: TResolver;\r\n}\r\n\r\nexport type TLoaderResourceVersion = string | number;\r\n\r\nexport interface ILoaderOption<TResolver> {\r\n\tbasepath?: string;\r\n\tversion?: TLoaderResourceVersion;\r\n\tuseCache?: boolean;\r\n\txhrOptions?: ILoaderXhrOption<TResolver>;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: LoaderResource<T>;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TResource, TFetchResolver> {\r\n\tprotected _options: ILoaderOption<TFetchResolver>;\r\n\t\r\n\t/**\r\n\t * Callback when one of the resources has succeeded loading.\r\n\t */\r\n\tonLoaded?: (resource: LoaderResource<TResource>) => void;\r\n\t\r\n\tconstructor(options: ILoaderOption<TFetchResolver> = {}) {\r\n\t\tthis._options = options || {};\r\n\t}\r\n\t\r\n\tprotected _resolveUri(uri: string) {\r\n\t\tif (!utils.isUrl(uri)) {\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\t\r\n\t\tconst basepath = this._options.basepath || '';\r\n\t\tconst version = this._options.version || '';\r\n\t\tconst preUri = utils.resolvePath(basepath, uri);\r\n\t\t\r\n\t\treturn version ? utils.resolveQuery(preUri, { _fv: version }) : preUri;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAsync(target: TTarget, xhrOptions?: ILoaderXhrOption<TFetchResolver>) {\r\n\t\tif (typeof(target) !== 'string') {\r\n\t\t\treturn this._loadAsync(target);\r\n\t\t}\r\n\t\t\r\n\t\tconst uri = this._resolveUri(target);\r\n\t\t\r\n\t\treturn (() => {\r\n\t\t\tif (this._options.xhrOptions) {\r\n\t\t\t\treturn this._loadXhrAsync(uri);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._loadAsync(uri);\r\n\t\t})()\r\n\t\t.then(resource => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.onLoaded && this.onLoaded(resource);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _loadAsync(target: TTarget): Promise<LoaderResource<TResource>>;\r\n\t\r\n\tprotected abstract _loadXhrAsync(url: string): Promise<LoaderResource<TResource>>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAllAsync(targets: ILoaderTargetDictionary<TTarget>): Promise<ILoaderResourceDictionary<TResource>> {\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\tconst res: ILoaderResourceDictionary<TResource> = {};\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i])\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t/*\r\n\tprotected _resolveUseCache(useCache?: boolean) {\r\n\t\treturn typeof useCache === 'boolean' ? useCache : (this._options.useCache || false);\r\n\t}\r\n\t*/\r\n\t/*\r\n\tprotected _resolveBasepath(url: string, basepath?: TLoaderResourceBasepath) {\r\n\t\tif (typeof basepath === 'string') {\r\n\t\t\treturn basepath;\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof basepath === 'function') {\r\n\t\t\treturn basepath(url);\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof this._options.basepath === 'string') {\r\n\t\t\treturn this._options.basepath;\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof this._options.basepath === 'function') {\r\n\t\t\treturn this._options.basepath(url);\r\n\t\t}\r\n\t\t\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\tprotected _resolveVersion(version?: TLoaderResourceVersion) {\r\n\t\treturn (typeof version === 'string' || typeof version === 'number') ? version : (this._options.version || '');\r\n\t}\r\n\t\r\n\tprotected _resolveUseCache(useCache?: boolean) {\r\n\t\treturn typeof useCache === 'boolean' ? useCache : (this._options.useCache || false);\r\n\t}\r\n\t\r\n\tprotected _resolveUrl(url: string, options: ILoaderOption = {}) {\r\n\t\tconst preUri = utils.resolvePath(url, this._resolveBasepath(url, options.basepath));\r\n\t\tconst version = this._resolveVersion(options.version);\r\n\t\t\r\n\t\tconst uri =\r\n\t\t\tversion\r\n\t\t\t? utils.resolveQuery(preUri, { _fv: version })\r\n\t\t\t: preUri;\r\n\t\t\r\n\t\treturn uri;\r\n\t}\r\n\t*/\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\tthis._data.destroy(true);\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport type TTextureLoaderFetchResolver = (res: Response) => Promise<string>;\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption<TTextureLoaderFetchResolver> {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource, TTextureLoaderFetchResolver> {\r\n\tprotected _loadAsync(target: TTextureLoaderTarget) {\r\n\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\ttarget.crossOrigin = 'anonymous';\r\n\t\t\ttarget.src = this._resolveUri(target.src);\r\n\t\t}\r\n\t\t\r\n\t\tconst useCache = this._options.useCache;\r\n\t\t\r\n\t\treturn new Promise<TextureLoaderResource>(resolve => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(bt), null));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tif (!useCache) {\r\n\t\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), null));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(new TextureLoaderResource(new PIXI.Texture(baseTexture), e));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected _loadXhrAsync(url: string) {\r\n\t\tconst xhrOptions = this._options.xhrOptions || {};\r\n\t\t\r\n\t\treturn fetch(url, xhrOptions.requestOptions || {})\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn xhrOptions.dataResolver ? xhrOptions.dataResolver(res) : res.text();\r\n\t\t\t})\r\n\t\t\t.then((uri: string) => {\r\n\t\t\t\treturn this._loadAsync(uri);\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource, TextureLoader.TTextureLoaderFetchResolver> {\r\n\tprotected _loadAsync(targets: ITextureManifestTargetDictionary, options: TextureLoader.ITextureLoaderOption = {}) {\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport type TJsonLoaderFetchResolver = (res: Response) => IJsonData;\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption<TJsonLoaderFetchResolver> {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource, TJsonLoaderFetchResolver> {\r\n\tprotected _loadAsync(target: TJsonLoaderTarget) {\r\n\t\treturn fetch(target)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n\t\r\n\tprotected _loadXhrAsync(url: string) {\r\n\t\tconst xhrOptions = this._options.xhrOptions || {};\r\n\t\t\r\n\t\treturn fetch(url, xhrOptions.requestOptions || {})\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn xhrOptions.dataResolver ? xhrOptions.dataResolver(res) : res.json();\r\n\t\t\t})\r\n\t\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport * as JsonLoader from './JsonLoader';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\n/**\r\n * - 0: for JsonLoader\r\n * - 1: for TextureLoader\r\n */\r\nexport type TSpritesheetLoaderFetchResolver = [ JsonLoader.TJsonLoaderFetchResolver, TextureLoader.TTextureLoaderFetchResolver ];\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption<TSpritesheetLoaderFetchResolver> {\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource, TSpritesheetLoaderFetchResolver> {\r\n\tprotected _loadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\tif (typeof target !== 'string') {\r\n\t\t\treturn this._loadTextureFromJson(target);\r\n\t\t} else {\r\n\t\t\treturn this._loadFromUrlAsync(target);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprotected _loadXhrAsync(url: string) {\r\n\t\tconst options = this._options;\r\n\t\tconst jsonOptions: JsonLoader.IJsonLoaderOption = {\r\n\t\t\tbasepath: this._options.basepath,\r\n\t\t\tversion: this._options.version,\r\n\t\t\tuseCache: this._options.useCache,\r\n\t\t};\r\n\t\tconst xhrOptions = this._options.xhrOptions || {};\r\n\t\tjsonOptions.xhrOptions = {\r\n\t\t\trequestOptions: xhrOptions.requestOptions,\r\n\t\t\tdataResolver: xhrOptions.dataResolver ? xhrOptions.dataResolver[0] : xhrOptions.dataResolver\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadFromUrlAsync(url, jsonOptions);\r\n\t}\r\n\t\r\n\tprivate _loadFromUrlAsync(url: string, options?: JsonLoader.IJsonLoaderOption) {\r\n\t\tconst loader = new JsonLoader.JsonLoader(options);\r\n\t\t\r\n\t\treturn loader.loadAsync(url)\r\n\t\t\t.then(resource => {\r\n\t\t\t\tconst json = resource.data;\r\n\t\t\t\t\r\n\t\t\t\tif (!json.meta || !json.meta.image || !json.frames) {\r\n\t\t\t\t\treturn new SpritesheetLoaderResource({}, 'invalid json');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst basepath = url;\r\n\t\t\t\tconst version = this._options.version || '';\r\n\t\t\t\tconst preUri = utils.resolvePath(basepath, json.meta.image);\r\n\t\t\t\t\r\n\t\t\t\tjson.meta.image = version ? utils.resolveQuery(preUri, { _fv: version }) : preUri;\r\n\t\t\t\t\r\n\t\t\t\tconst data: ISpritesheetJson = {\r\n\t\t\t\t\tframes: json.frames,\r\n\t\t\t\t\tmeta: json.meta\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn this._loadTextureFromJson(data);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadTextureFromJson(json: ISpritesheetJson) {\r\n\t\tconst options = (() => {\r\n\t\t\tif (!this._options.xhrOptions) {\r\n\t\t\t\tconst textureOptions: TextureLoader.ITextureLoaderOption = {\r\n\t\t\t\t\tbasepath: this._options.basepath,\r\n\t\t\t\t\tversion: this._options.version,\r\n\t\t\t\t\tuseCache: this._options.useCache,\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn textureOptions;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst options = this._options;\r\n\t\t\tconst textureOptions: TextureLoader.ITextureLoaderOption = {\r\n\t\t\t\tbasepath: this._options.basepath,\r\n\t\t\t\tversion: this._options.version,\r\n\t\t\t\tuseCache: this._options.useCache,\r\n\t\t\t};\r\n\t\t\tconst xhrOptions = this._options.xhrOptions || {};\r\n\t\t\ttextureOptions.xhrOptions = {\r\n\t\t\t\trequestOptions: xhrOptions.requestOptions,\r\n\t\t\t\tdataResolver: xhrOptions.dataResolver ? xhrOptions.dataResolver[1] : xhrOptions.dataResolver\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn textureOptions;\r\n\t\t})();\r\n\t\t\r\n\t\tconst loader = new TextureLoader.TextureLoader(options);\r\n\t\tconst useCache = this._options.useCache;\r\n\t\t\r\n\t\treturn loader.loadAsync(json.meta.image)\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\treturn new SpritesheetLoaderResource({}, resource.error);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, json);\r\n\t\t\t\t\r\n\t\t\t\treturn new Promise<SpritesheetLoaderResource>(resolve => {\r\n\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\tconst resource = new SpritesheetLoaderResource(ss.textures, null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!useCache) {\r\n\t\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresolve(resource);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\treturn new SpritesheetLoaderResource({}, e);\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource, SpritesheetLoader.TSpritesheetLoaderFetchResolver> {\r\n\tprotected _loadAsync(targets: ISpritesheetManifestTargetDictionary, options: SpritesheetLoader.ISpritesheetLoaderOption = {}) {\r\n\t\tconst loader = new SpritesheetLoader.SpritesheetLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data.stop();\r\n\t\tthis._data.unload();\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport type TSoundLoaderFetchResolver = (res: Howl) => Promise<Howl>;\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption<TSoundLoaderFetchResolver> {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource, TSoundLoaderFetchResolver> {\r\n\tprotected _loadAsync(target: TSoundLoaderTarget) {\r\n\t\treturn new Promise<SoundLoaderResource>(resolve => {\r\n\t\t\tconst howl = new Howl({\r\n\t\t\t\tsrc: target,\r\n\t\t\t\tonload: () => {\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, null));\r\n\t\t\t\t},\r\n\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\tconst e = new Error('invalid resource: ' + target);\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, e));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected _loadXhrAsync(url: string) {\r\n\t\tconst xhrOptions = this._options.xhrOptions || {};\r\n\t\t\r\n\t\treturn new Promise<SoundLoaderResource>(resolve => {\r\n\t\t\tconst howl = new Howl({\r\n\t\t\t\tsrc: url,\r\n\t\t\t\tonload: () => {\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, null));\r\n\t\t\t\t},\r\n\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\tconst e = new Error('invalid resource: ' + url);\r\n\t\t\t\t\tresolve(new SoundLoaderResource(howl, e));\r\n\t\t\t\t},\r\n\t\t\t\txhr: xhrOptions.requestOptions || {}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource, SoundLoader.TSoundLoaderFetchResolver> {\r\n\tprotected _loadAsync(targets: ISoundManifestTargetDictionary, options: SoundLoader.ISoundLoaderOption = {}) {\r\n\t\tconst loader = new SoundLoader.SoundLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource, JsonLoader.TJsonLoaderFetchResolver> {\r\n\tprotected _loadAsync(targets: IJsonManifestTargetDictionary, options: JsonLoader.IJsonLoaderOption = {}) {\r\n\t\tconst loader = new JsonLoader.JsonLoader(options);\r\n\t\t\r\n\t\treturn this._doneLoaderAsync(loader, targets);\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ILoaderXhrOption, TLoaderResourceVersion } from '../loader/LoaderBase';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption, EVENT_LOADER_ASSET_LOADED } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IContentAssetVersion {\r\n\t[key: string]: TLoaderResourceVersion;\r\n}\r\n\r\nexport interface IContentAssetCache {\r\n\t[key: string]: boolean;\r\n}\r\n\r\nexport interface IContentAssetXhrOption {\r\n\t[key: string]: ILoaderXhrOption<any>;\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[key: string]: ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\tuseCache: IContentAssetCache;\r\n\txhrOptions: IContentAssetXhrOption;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: TLoaderResourceVersion | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * Whether cache textures.\r\n\t */\r\n\tuseCache?: boolean | IContentAssetCache;\r\n\t\r\n\t/**\r\n\t * A header given when loading an asset, or a function that returns a header.\r\n\t * If non-null is specified, fetch API will be used instead of the default Loader when loading each asset.\r\n\t */\r\n\txhrOptions?: IContentAssetXhrOption;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i]();\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\tprivate _loadedResourceHandler: (data: { target: any, resource: any }) => void;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._loadedResourceHandler = (data: { target: any, resource: any }) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, data);\r\n\t\t};\r\n\t\t\r\n\t\tconst basepath: string = options.basepath || '';\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tconst v = options.version || '';\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tversion[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.version = version;\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.useCache) !== 'object') {\r\n\t\t\tconst useCache: IContentAssetCache = {};\r\n\t\t\tconst v = options.useCache || false;\r\n\t\t\tfor (let i in _manifests) {\r\n\t\t\t\tuseCache[i] = v;\r\n\t\t\t}\r\n\t\t\toptions.useCache = useCache;\r\n\t\t}\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\tuseCache: options.useCache,\r\n\t\t\txhrOptions: options.xhrOptions || {},\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t};\r\n\t\t\r\n\t\tfor (let i in this._piximData.manifests) {\r\n\t\t\tthis._piximData.manifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._piximData.additionalManifests) {\r\n\t\t\tthis._piximData.additionalManifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].destroyResources();\r\n\t\t\tmanifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].destroyResources();\r\n\t\t\tadditionalManifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget classAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget instanceAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget assetCount() {\r\n\t\treturn this.classAssetCount + this.instanceAssetCount;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst versions: IContentAssetVersion = this._piximData.version;\r\n\t\tconst useCaches: IContentAssetCache = this._piximData.useCache;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type = i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tconst version = versions[type] || '';\r\n\t\t\tconst useCache = useCaches[type] || false;\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[type];\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync({ basepath, version, useCache/*, xhrOptions */}));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","EVENT_LOADER_ASSET_LOADED","ManifestBase","options","unrequired","_data","target","count","Object","keys","getAsync","Promise","resolve","res","_loadAsync","resources","resource","error","_resources","data","_doneLoaderAsync","loader","onLoaded","loadAllAsync","destroyResources","resolvePath","basepath","path","isUrl","PIXI.utils","url","uri","indexOf","resolveQuery","queries","q","t","split","search","join","LoaderResource","_error","LoaderBase","_options","_resolveUri","utils.isUrl","version","preUri","utils.resolvePath","utils.resolveQuery","_fv","loadAsync","xhrOptions","_loadXhrAsync","promises","all","TextureLoaderResource","removeCache","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","LoaderBase.LoaderResource","TextureLoader","HTMLImageElement","HTMLVideoElement","crossOrigin","src","useCache","bt","from","valid","fetch","requestOptions","dataResolver","text","LoaderBase.LoaderBase","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","JsonLoaderResource","JsonLoader","json","catch","SpritesheetLoaderResource","SpritesheetLoader","_loadTextureFromJson","_loadFromUrlAsync","jsonOptions","JsonLoader.JsonLoader","meta","image","frames","textureOptions","ss","PIXI.Spritesheet","parse","textures","TextureLoader.TextureLoaderResource","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","xhr","SoundManifest","SoundLoader.SoundLoader","JsonManifest","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","_loadedResourceHandler","v","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","classAssetCount","total","instanceAssetCount","assetCount","versions","useCaches","manifest","resolver","j","exports"],"mappings":"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"}