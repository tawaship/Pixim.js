{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../src/modules/TaskManager.ts","../src/modules/Application.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/ContentManifestBase.ts","../src/modules/ContentImageManifest.ts","../src/modules/ContentSpritesheetManifest.ts","../src/modules/ContentSoundManifest.ts","../src/modules/ContentDeliver.ts","../src/modules/Content.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { ITickerData } from './Application';\r\nimport { Container } from './Container';\r\n\r\nexport interface IObserverDictionary {\r\n\t[name: number]: Container;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _observers: IObserverDictionary = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastTickerData: ITickerData = { delta: 1 };\r\n\r\n/**\r\n * @private\r\n */\r\nexport class TaskManager {\r\n\tconstructor() {\r\n\t\tthrow new Error('This class can not instantiate.');\r\n\t}\r\n\t\r\n\tstatic addObserver(id: number, observer: Container) {\r\n\t\t_observers[id] = observer;\r\n\t\tobserver.updateTask(_lastTickerData);\r\n\t}\r\n\t\r\n\tstatic removeObserver(id: number) {\r\n\t\tdelete(_observers[id]);\r\n\t}\r\n\t\r\n\tstatic done(e: ITickerData) {\r\n\t\t_lastTickerData = e;\r\n\t\t\r\n\t\tfor (let i in _observers) {\r\n\t\t\t_observers[i].updateTask(e);\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './Content';\r\nimport { Emitter } from './Emitter';\r\nimport { TaskManager } from './TaskManager';\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tstage: PIXI.Container;\r\n\tview: HTMLCanvasElement;\r\n\tcontainer: HTMLElement;\r\n\toptions: IApplicationOption;\r\n\tlayers: ILayerDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _roots: IRootDictionary = {};\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tconst stage: PIXI.Container = app.stage;\r\n\t\t\r\n\t\tconst view: HTMLCanvasElement = app.view;\r\n\t\tview.style.position = 'absolute';\r\n\t\t\r\n\t\t/*\r\n\t\tif (piximOptions.container) {\r\n\t\t\tpiximOptions.container.appendChild(view);\r\n\t\t} else {\r\n\t\t\tif (!view.parentNode) {\r\n\t\t\t\tdocument.body.appendChild(view);\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tstage,\r\n\t\t\tview,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\toptions: piximOptions\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\tTaskManager.done({ delta });\r\n\t\t\t//taskHandler(stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tconst f = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\r\n\t\t\t\tf();\r\n\t\t\t} else {\r\n\t\t\t\tconst f = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\twindow.addEventListener('resize', f);\r\n\t\t\t\t\r\n\t\t\t\tf();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.stage.addChild(new PIXI.Container());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\t_roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions?: IDestroyOptions) {\r\n\t\tconst root: PIXI.Container = _roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(_roots[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/*\r\n\tstop() {\r\n\t\tif (!this._piximData.isRun) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stop();\r\n\t\tthis._piximData.isRun = false;\r\n\t\t\r\n\t\tconst stage: PIXI.Container = this._piximData.app.stage;\r\n\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\r\n\t\tfor (let i in layers) {\r\n\t\t\tlayers[i].removeChildren();\r\n\t\t}\r\n\t\t\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in _roots) {\r\n\t\t\tthis._destroyRoot(_roots[i]);\r\n\t\t\tkeys.push(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tdelete(_roots[keys[i]]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.ticker.update();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t*/\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\t/*\r\n\t\tif (this._piximData.view.parentNode) {\r\n\t\t\tthis._piximData.view.parentNode.removeChild(this._piximData.view);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stop();\r\n\t\tthis._piximData.isRun = false;\r\n\t\t*/\r\n\t\t\r\n\t\t//const stage: PIXI.Container = this._piximData.app.stage;\r\n\t\t/*\r\n\t\tconst layers: ILayerDictionary = this._piximData.layers;\r\n\t\t\r\n\t\tfor (let i in layers) {\r\n\t\t\tlayers[i].removeChildren();\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in _roots) {\r\n\t\t//\tthis._destroyRoot(_roots[i], stageOptions);\r\n\t\t\tkeys.push(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\tdelete(_roots[keys[i]]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\t/*\r\n\t\tif (root.parent) {\r\n\t\t\troot.parent.removeChild(root);\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\t/*\r\n\t\tif (!this._piximData.isRun) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tif (paused) {\r\n\t\t\tthis._piximData.app.stop();\r\n\t\t} else {\r\n\t\t\tthis._piximData.app.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\nimport { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this.taskEnabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport interface IManifestDictionary {\r\n\t[name: string]: string;\r\n}\r\n\r\nexport interface IPreManifest {\r\n\turl: string;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IPreManifestDictionary {\r\n\t[name: string]: IPreManifest;\r\n}\r\n\r\nexport interface IPostManifest extends IPreManifest {\r\n\tname: string;\r\n}\r\n\r\nexport interface IPostManifestDictionary {\r\n\t[name: string]: IPostManifest;\r\n}\r\n\r\nexport interface IContentManifestOption {\r\n\tunrequired?: boolean\r\n}\r\n\r\nexport interface ILoadedResource {\r\n\tresource: any;\r\n\terror: boolean;\r\n}\r\n\r\nexport interface ILoadedResourceDictionary {\r\n\t[name: string]: ILoadedResource;\r\n}\r\n\r\nexport interface IResourceDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IResourceDictionary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _cache: IResourceDictionary = {};\r\n\r\nexport abstract class ContentManifestBase {\r\n\tprivate _manifests: IPreManifestDictionary = {};\r\n\t\r\n\t/**\r\n\t * Register manifests.\r\n\t * \r\n\t * @param manifests Defined manifests.\r\n\t * @param option Manifest option data.\r\n\t */\r\n\tadd(manifests: IManifestDictionary, options: IContentManifestOption = {}): void {\r\n\t\tconst unrequired: boolean = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tthis._manifests[i] = {\r\n\t\t\t\turl: manifests[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t * \r\n\t * @param basepath Basement directory path of assets.\r\n\t */\r\n\tgetAsync(basepath: string, version: string): Promise<IResourceDictionary> {\r\n\t\tconst manifests: IPreManifestDictionary = this._manifests;\r\n\t\t\r\n\t\tconst resources: IResourceDictionary = {};\r\n\t\tconst loadable: IPostManifestDictionary = {};\r\n\t\tconst cache = _cache;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst manifest: IPreManifest = manifests[i];\r\n\t\t\tconst url: string = this._resolvePath(manifest.url, basepath);\r\n\t\t\t\r\n\t\t\t// query parameter is invalid for resource cache\r\n\t\t\tconst name: string = url.replace(/\\?.*/, '');\r\n\t\t\t\r\n\t\t\tif (cache[name]) {\r\n\t\t\t\tresources[i] = cache[name];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tloadable[i] = {\r\n\t\t\t\turl,\r\n\t\t\t\tname,\r\n\t\t\t\tunrequired: manifest.unrequired\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (Object.keys(loadable).length === 0) {\r\n\t\t\treturn Promise.resolve(resources);\r\n\t\t}\r\n\t\t\r\n\t\treturn this._loadAsync(loadable, version)\r\n\t\t\t.then((res: ILoadedResourceDictionary) => {\r\n\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\tresources[i] = res[i].resource;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!res[i].error) {\r\n\t\t\t\t\t\tcache[loadable[i].name] = res[i].resource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn resources;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load resources.\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedResourceDictionary> {\r\n\t\treturn Promise.resolve({});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Normalize asset path.\r\n\t */\r\n\tprivate _resolvePath(path: string, basepath: string): string {\r\n\t\tif (path.indexOf('http://') === 0 || path.indexOf('https://') === 0) {\r\n\t\t\treturn path;\r\n\t\t} else {\r\n\t\t\treturn PIXI.utils.url.resolve(basepath, path);\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedImageResource extends ILoadedResource {\r\n\tresource: PIXI.Texture\r\n}\r\n\r\nexport interface ILoadedImageResourceDictionary {\r\n\t[name: string]: ILoadedImageResource;\r\n}\r\n\r\nexport class ContentImageManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedImageResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedImageResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedImageResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: resource.texture,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSpritesheetResource extends ILoadedResource {\r\n\tresource: PIXI.ITextureDictionary\r\n}\r\n\r\nexport interface ILoadedSpritesheetResourceDictionary {\r\n\t[name: string]: ILoadedSpritesheetResource;\r\n}\r\n\r\nexport class ContentSpritesheetManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSpritesheetResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSpritesheetResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst loader: PIXI.Loader = new PIXI.Loader();\r\n\t\t\t\r\n\t\t\tif (version) {\r\n\t\t\t\tloader.defaultQueryString = `_fv=${version}`;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tloader.add(i, manifests[i].url, {\r\n\t\t\t\t\tcrossOrigin: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst res: ILoadedSpritesheetResourceDictionary = {};\r\n\t\t\tloader.load((loader, resources): void => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tif (!manifests[i]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst resource: PIXI.LoaderResource | undefined = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst textures: PIXI.ITextureDictionary = resource.textures || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst error: boolean = !!resource.error;\r\n\t\t\t\t\tif (resource.error && !manifests[i].unrequired) {\r\n\t\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres[i] = {\r\n\t\t\t\t\t\tresource: textures,\r\n\t\t\t\t\t\terror: !!resource.error\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport { ContentManifestBase, IManifestDictionary, IContentManifestOption, IPostManifestDictionary, ILoadedResource } from './ContentManifestBase';\r\n\r\nexport interface ILoadedSoundResource extends ILoadedResource {\r\n\tresource: Howl\r\n}\r\n\r\nexport interface ILoadedSoundResourceDictionary{\r\n\t[name: string]: ILoadedSoundResource;\r\n}\r\n\r\nexport class ContentSoundManifest extends ContentManifestBase {\r\n\t/**\r\n\t * Load image resources.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tprotected _loadAsync(manifests: IPostManifestDictionary, version: string): Promise<ILoadedSoundResourceDictionary> {\r\n\t\treturn new Promise((resolve: (resource: ILoadedSoundResourceDictionary) => void, reject: (manifest: IManifestDictionary) => void): void => {\r\n\t\t\tconst res: ILoadedSoundResourceDictionary = {};\r\n\t\t\t\r\n\t\t\tfunction loadedHandler(key: string, howl: Howl, error: boolean): void {\r\n\t\t\t\tres[key] = {\r\n\t\t\t\t\tresource: howl,\r\n\t\t\t\t\terror\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif (++loadedCount < loadCount) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresolve(res);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet loadCount: number = 0;\r\n\t\t\tlet loadedCount:number  = 0;\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tif (!Howl) {\r\n\t\t\t\t\tconsole.warn('You need \"howler.js\" to load sound asset.');\r\n\t\t\t\t\treject({ [i]: manifests[i].url});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t++loadCount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tconst _i = i;\r\n\t\t\t\tconst url =\r\n\t\t\t\t\tversion\r\n\t\t\t\t\t?`${manifests[_i].url}${manifests[_i].url.match(/\\?/) ? '&' : '?'}_fv=${version}`\r\n\t\t\t\t\t: manifests[_i].url;\r\n\t\t\t\t\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc: url,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tloadedHandler(_i, howl, false);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tif (!manifests[_i].unrequired) {\r\n\t\t\t\t\t\t\treject({ [_i]: manifests[_i].url});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tloadedHandler(_i, howl, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from './Container';\r\nimport { IContentResourceDictionary } from './ContentManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { IResourceDictionary, IContentResourceDictionary, IManifestDictionary, IContentManifestOption } from './ContentManifestBase';\r\nimport { ContentImageManifest } from './ContentImageManifest';\r\nimport { ContentSpritesheetManifest } from './ContentSpritesheetManifest';\r\nimport { ContentSoundManifest } from './ContentSoundManifest';\r\nimport { ContentDeliver, IVariableDictionary, IContentLibrary } from './ContentDeliver';\r\n\r\nexport type TContentManifestType = 'images' | 'spritesheets' | 'sounds';\r\n\r\nexport interface IContentAssetVersion {\r\n\timages?: string;\r\n\tspritesheets?: string;\r\n\tsounds?: string;\r\n}\r\n\r\nexport interface IContentManifests { \r\n\timages: ContentImageManifest;\r\n\tspritesheets: ContentSpritesheetManifest;\r\n\tsounds: ContentSoundManifest;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\tbasepath: string;\r\n\tversion: IContentAssetVersion;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: string | IContentAssetVersion;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\treturn {\r\n\t\timages: new ContentImageManifest(),\r\n\t\tspritesheets: new ContentSpritesheetManifest(),\r\n\t\tsounds: new ContentSoundManifest()\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\nexport class Content {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tconst basepath: string = (options.basepath || '').replace(/([^/])$/, '$1/');\r\n\t\t\r\n\t\tif (typeof(options.version) !== 'object') {\r\n\t\t\toptions.version = {\r\n\t\t\t\timages: options.version || '',\r\n\t\t\t\tspritesheets: options.version || '',\r\n\t\t\t\tsounds: options.version || ''\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\tbasepath,\r\n\t\t\tversion: options.version,\r\n\t\t\t$: new ContentDeliver({\r\n\t\t\t\twidth: piximData.config.width,\r\n\t\t\t\theight: piximData.config.height,\r\n\t\t\t\tlib: piximData.lib,\r\n\t\t\t\tresources: {},\r\n\t\t\t\tvars: {}\r\n\t\t\t}),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(data: IManifestDictionary, options: IContentManifestOption = {}) {\r\n\t\treturn this.defineManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddManifests(key: TContentManifestType, data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(data, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('spritesheets', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(data: IManifestDictionary, options: IContentManifestOption = {}): this {\r\n\t\treturn this.addManifests('sounds', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst basepath: string = this._piximData.basepath;\r\n\t\tconst version: IContentAssetVersion = this._piximData.version;\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<IResourceDictionary>[] = [];\r\n\t\tconst keys: TContentManifestType[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tconst type: TContentManifestType = <TContentManifestType>i;\r\n\t\t\tkeys.push(type);\r\n\t\t\t\r\n\t\t\tpromises.push(manifests[type].getAsync(basepath, version[type] || ''));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then((resolver: IResourceDictionary) => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e: IManifestDictionary) => {\r\n\t\t\t\tfor (let i in e) {\r\n\t\t\t\t\tconsole.error(`Asset '${i}: ${e[i]}' cannot load.`);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n}"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","_observers","_lastTickerData","delta","TaskManager","Error","addObserver","id","observer","updateTask","removeObserver","done","e","_roots","Application","pixiOptions","piximOptions","super","app","PIXI.Application","stop","stage","view","style","position","autoAdjust","_piximData","isRun","container","document","body","layers","options","ticker","add","f","fullScreen","window","addEventListener","prototypeAccessors","parentNode","appendChild","_hasLayer","name","addLayer","addChild","PIXI.Container","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","contentID","detach","stageOptions","_destroyRoot","play","start","destroy","removeView","keys","pause","paused","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","Task","callbacks","_taskData","enabled","index","value","Array","isArray","list","Function","task","_to","Number","first","prev","next","to","finish","reset","tasks","emitter","_Task","_lastObserverID","Container","taskEnabledChildren","_observerID","taskEnabled","p","parent","_cache","ContentManifestBase","manifests","unrequired","_manifests","url","getAsync","basepath","version","resources","loadable","cache","manifest","_resolvePath","Object","Promise","resolve","_loadAsync","res","resource","error","path","indexOf","PIXI.utils","ContentImageManifest","reject","loader","PIXI.Loader","defaultQueryString","crossOrigin","load","texture","ContentSpritesheetManifest","textures","ContentSoundManifest","loadedHandler","key","howl","loadedCount","loadCount","Howl","console","warn","_i","match","src","onload","onloaderror","ContentDeliver","data","lib","vars","_contents","_contentID","createManifests","images","spritesheets","sounds","Content","piximData","toString","$","config","additionalManifests","preloadPromise","postloadPromise","create","ContentClone","get","remove","defineManifests","defineImages","defineSpritesheets","defineSounds","setConfig","defineLibraries","addManifests","addImages","addSpritesheets","addSounds","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","catch","promises","all","resolver","j","exports"],"mappings":"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"}