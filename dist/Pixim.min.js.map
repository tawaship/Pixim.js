{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/content/ManifestBase.ts","../src/modules/utils/index.ts","../src/modules/loader/LoaderBase.ts","../src/modules/loader/BlobLoader.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts","../src/modules/loader/JsLoader.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * {@link https://tawaship.github.io/Emitter/index.html | @tawaship/emitter}\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { ITickerData } from './Application';\r\nimport { Emitter } from './Emitter';\r\nimport { Task as _Task } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\nexport interface ITaskDelegate {\r\n    (e: ITickerData): void;\r\n}\r\n\r\n/**\r\n * {@link https://tawaship.github.io/Task/index.html | @tawaship/task}\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * {@link http://pixijs.download/v5.3.2/docs/docs/PIXI.Container.html}\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * {@link http://pixijs.download/v5.3.2/docs/PIXI.Application.html | PIXI.Application]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data for {@link http://pixijs.download/v5.3.2/docs/PIXI.Application.html | PIXI.Application} constructor.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IManifestClass {\r\n\tnew(type: string): ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport type TManifestResourceVersion = LoaderBase.TLoaderResourceVersion;\r\n\r\nexport interface IManifestLoaderXhrOptionFacotryDelegate {\r\n\t(type: string, url: string): LoaderBase.ILoaderXhrOption;\r\n}\r\n\r\nexport type TManifestLoaderXhrOption = IManifestLoaderXhrOptionFacotryDelegate | boolean | LoaderBase.ILoaderXhrOption;\r\n\r\nexport interface IManifestLoaderOption {\r\n\tbasepath: string;\r\n\tversion: TManifestResourceVersion;\r\n\txhr: TManifestLoaderXhrOption;\r\n\ttypeOptions: { [key: string]: any };\r\n}\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class ManifestBase<TTarget, TRawResource, TResource extends LoaderBase.LoaderResource<TRawResource>> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\tprivate _type: string;\r\n\t\r\n\tconstructor(type: string) {\r\n\t\tsuper();\r\n\t\tthis._type = type;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: IManifestLoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TRawResource> = {};\r\n\t\t\r\n\t\tconst loader = this._createLoader();\r\n\t\tloader.onLoaded = (resource: TResource) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t};\r\n\t\t\r\n\t\tconst loaderOptions: LoaderBase.ILoaderOption = Object.assign({}, options.typeOptions, {\r\n\t\t\tbasepath: options.basepath,\r\n\t\t\tversion: options.version,\r\n\t\t\txhr: ((type: string, xhr: TManifestLoaderXhrOption) => {\r\n\t\t\t\tif (typeof(xhr) === 'function') {\r\n\t\t\t\t\treturn (url: string) => {\r\n\t\t\t\t\t\treturn xhr(type, url);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t})(this._type, options.xhr)\r\n\t\t});\r\n\t\t\r\n\t\tconst data: LoaderBase.ILoaderTargetDictionary<TTarget> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tdata[i] = this._data[i].target;\r\n\t\t}\r\n\t\t\r\n\t\treturn loader.loadAllAsync(data, loaderOptions)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _createLoader(): LoaderBase.LoaderBase<TTarget, TRawResource, TResource>;\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolveUri(basepath: string, uri: any, version?: string | number) {\r\n\tif (typeof(uri) !== 'string') {\r\n\t\treturn uri;\r\n\t}\r\n\t\t\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\tbasepath = basepath || '';\r\n\tversion = version || '';\r\n\tconst preUri = resolvePath(basepath, uri);\r\n\t\r\n\treturn version ? resolveQuery(preUri, { _fv: version }) : preUri;\r\n}\r\n\r\n\r\nexport function resolvePath(basepath: string, path: string) {\r\n\tif (!isUrl(path)) {\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\treturn PIXI.utils.url.resolve(basepath, path);\r\n}\r\n\r\nexport function isUrl(uri: any) {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (uri.indexOf('blob:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q: string[] = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport interface IFetchRequestOption {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface ILoaderXhrOption {\r\n\trequestOptions?: IFetchRequestOption;\r\n}\r\n\r\nexport interface ILoaderResolvedParam {\r\n\tsrc: string;\r\n\txhr?: ILoaderXhrOption;\r\n}\r\n\r\nexport interface ILoaderXhrOptionFacotryDelegate {\r\n\t(url: string): ILoaderXhrOption;\r\n}\r\n\r\nexport type TLoaderResourceVersion = string | number;\r\n\r\nexport interface ILoaderOption {\r\n\tbasepath?: string;\r\n\tversion?: TLoaderResourceVersion;\r\n\txhr?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TRawResource, TResource extends LoaderResource<TRawResource>> {\r\n\t/**\r\n\t * Callback when one of the resources has succeeded loading.\r\n\t */\r\n\tonLoaded?: (resource: TResource) => void;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAsync(target: TTarget, options?: ILoaderOption) {\r\n\t\treturn (() => {\r\n\t\t\treturn this._loadAsync(target, options);\r\n\t\t})()\r\n\t\t.then(resource => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.onLoaded && this.onLoaded(resource);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _loadAsync(target: TTarget, options?: ILoaderOption): Promise<TResource>;\r\n\t\r\n\t/**\r\n\t * @link LoaderBase.loaded\r\n\t */\r\n\tloadAllAsync(targets: ILoaderTargetDictionary<TTarget>, options?: ILoaderOption) {\r\n\t\tconst res: ILoaderResourceDictionary<TResource> = {};\r\n\t\t\r\n\t\tif (Object.keys(targets).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst promises: Promise<void>[] = [];\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(targets[i], options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected _resolveParams(target: any, options: ILoaderOption = {}): ILoaderResolvedParam {\r\n\t\tconst src = utils.resolveUri(options.basepath || '', target, options.version || '');\r\n\t\t\r\n\t\tif (typeof(src) !== 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (!utils.isUrl(src)) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (!options.xhr) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.xhr === true) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc,\r\n\t\t\t\txhr: {}\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options.xhr) === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tsrc,\r\n\t\t\t\txhr: options.xhr(src)\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\txhr: options.xhr || {}\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TBlobLoaderRawResource = string;\r\n\r\nexport class BlobLoaderResource extends LoaderBase.LoaderResource<TBlobLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t(window.URL || window.webkitURL).revokeObjectURL(this._data);\r\n\t\tthis._data = '';\r\n\t}\r\n}\r\n\r\nexport type TBlobLoaderTarget = string;\r\n\r\nexport interface IBlobLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TBlobLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<BlobLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class BlobLoader extends LoaderBase.LoaderBase<TBlobLoaderTarget, TBlobLoaderRawResource, BlobLoaderResource> {\r\n\tprotected _loadAsync(target: TBlobLoaderTarget, options: IBlobLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions || {});\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.blob();\r\n\t\t})\r\n\t\t.then(blob => {\r\n\t\t\treturn (window.URL || window.webkitURL).createObjectURL(blob);\r\n\t\t})\r\n\t\t.then(uri => new BlobLoaderResource(uri, null))\r\n\t\t.catch((e: any) => new BlobLoaderResource('', e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { BlobLoader } from './BlobLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture | null;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\t\tthis._data.destroy(true);\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TextureLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource, TextureLoaderResource> {\r\n\tprotected _loadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn this._loadBaseTextureAsync(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst loader = new BlobLoader();\r\n\t\t\t\r\n\t\t\treturn loader.loadAsync(src, { xhr })\r\n\t\t\t\t.then(resource => {\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn this._loadBaseTextureAsync(resource.data);\r\n\t\t\t\t});\r\n\t\t})()\r\n\t\t.then(baseTexture => new TextureLoaderResource(new PIXI.Texture(baseTexture), null))\r\n\t\t.catch(e => new TextureLoaderResource(null, e));\r\n\t}\r\n\t\r\n\tprivate _loadBaseTextureAsync(target: TTextureLoaderTarget) {\r\n\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\ttarget.crossOrigin = 'anonymous';\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<PIXI.BaseTexture>((resolve, reject) => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\tresolve(bt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(baseTexture);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource, TextureLoader.TextureLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new TextureLoader.TextureLoader();\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsonLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource, JsonLoaderResource> {\r\n\tprotected _loadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { JsonLoader } from './JsonLoader';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SpritesheetLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\ttextureVersion?: string | number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource, SpritesheetLoaderResource> {\r\n\tprotected _loadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (typeof target !== 'string') {\r\n\t\t\t\treturn this._loadTextureAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadJsonAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then(textures => new SpritesheetLoaderResource(textures, null))\r\n\t\t.catch(e => new SpritesheetLoaderResource({}, e));\r\n\t}\r\n\t\r\n\tprivate _loadJsonAsync(url: string, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new JsonLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(url, options)\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst json = resource.data;\r\n\t\t\t\t\r\n\t\t\t\tif (!json.meta || !json.meta.image || !json.frames) {\r\n\t\t\t\t\tthrow 'invalid json';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tjson.meta.image = utils.resolveUri(url, json.meta.image);\r\n\t\t\t\t\r\n\t\t\t\tconst data: ISpritesheetJson = {\r\n\t\t\t\t\tframes: json.frames,\r\n\t\t\t\t\tmeta: json.meta\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn this._loadTextureAsync(data, options);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadTextureAsync(json: ISpritesheetJson, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new TextureLoader.TextureLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(json.meta.image, Object.assign({}, options, { version: options.textureVersion || options.version }))\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, json);\r\n\t\t\t\t\r\n\t\t\t\treturn new Promise<PIXI.ITextureDictionary>(resolve => {\r\n\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresolve(ss.textures);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\nimport * as LoaderBase from '../loader/LoaderBase';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource, SpritesheetLoader.SpritesheetLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SpritesheetLoader.SpritesheetLoader();\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl | null;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tthis._data.stop();\r\n\t\t\tthis._data.unload();\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SoundLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource, SoundLoaderResource> {\r\n\tprotected _loadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tconst e = new Error('invalid resource: ' + src);\r\n\t\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tconst e = new Error('invalid resource: ' + src);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\txhr: xhr.requestOptions || {}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})()\r\n\t\t.then(howl => new SoundLoaderResource(howl, null))\r\n\t\t.catch(e => new SoundLoaderResource(null, e));\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource, SoundLoader.SoundLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SoundLoader.SoundLoader();\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource, JsonLoader.JsonLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new JsonLoader.JsonLoader();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption, IManifestLoaderOption, IManifestLoaderXhrOptionFacotryDelegate, TManifestResourceVersion, TManifestLoaderXhrOption, EVENT_LOADER_ASSET_LOADED } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IContentAssetBasepath {\r\n\t[manifestKey: string]: string;\r\n}\r\n\r\nexport interface IContentAssetVersion {\r\n\t[manifestKey: string]: TManifestResourceVersion;\r\n}\r\n\r\nexport interface IContentAssetXhrOption {\r\n\t[manifestKey: string]: TManifestLoaderXhrOption;\r\n}\r\n\r\nexport interface IContentAssetLoaderOption {\r\n\t[manifestKey: string]: { [key: string]: any };\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[manifestKey: string]: ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\toptions: IContentOption;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string | IContentAssetBasepath;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: TManifestResourceVersion | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * A header given when loading an asset, or a function that returns a header.\r\n\t * If a value that can be considered true is specified, fetch API will be used instead of the default Loader when loading each asset.\r\n\t */\r\n\txhr?: TManifestLoaderXhrOption;\r\n\t\r\n\ttypeOptions?: IContentAssetLoaderOption;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i](i);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\tprivate _loadedResourceHandler: (data: { target: any, resource: any }) => void;\r\n\t\r\n    /**\r\n     * {@link EVENT_LOADER_ASSET_LOADED} fired when any of the assets are loaded. \r\n     * @param options \r\n     * @param piximData \r\n     */\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._loadedResourceHandler = (data: { target: any, resource: any }) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, data);\r\n\t\t};\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\toptions,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t};\r\n\t\t\r\n\t\tfor (let i in this._piximData.manifests) {\r\n\t\t\tthis._piximData.manifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._piximData.additionalManifests) {\r\n\t\t\tthis._piximData.additionalManifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget classAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget instanceAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget assetCount() {\r\n\t\treturn this.classAssetCount + this.instanceAssetCount;\r\n\t}\r\n\t\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst options = this._piximData.options;\r\n\t\t\r\n\t\tconst basepath = (() => {\r\n\t\t\tif (typeof(options.basepath) === 'undefined') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.basepath) === 'string') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = options.basepath.replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tbasepath[i] = (options.basepath[i] || '').replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn basepath;\r\n\t\t})();\r\n\t\t\r\n\t\tconst version = (() => {\r\n\t\t\tif (typeof(options.version) === 'undefined') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.version) === 'string' || typeof(options.version) === 'number') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = options.version;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tversion[i] = options.version[i] || '';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn version;\r\n\t\t})();\r\n\t\t\r\n\t\tconst xhr = (() => {\r\n\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\txhr[i] = options.xhr || false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn xhr;\r\n\t\t})();\r\n\t\t\r\n\t\tconst typeOptions = (() => {\r\n\t\t\tif (typeof(options.typeOptions) === 'undefined') {\r\n\t\t\t\tconst typeOptions: IContentAssetLoaderOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\ttypeOptions[i] = [];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn typeOptions;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst typeOptions: IContentAssetLoaderOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\ttypeOptions[i] = options.typeOptions[i] || {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn typeOptions;\r\n\t\t})();\r\n\t\t\r\n\t\tconst loaderOptions: { [manifestKey: string]: IManifestLoaderOption } = {};\r\n\t\tfor (let i in manifests) {\r\n\t\t\tloaderOptions[i] = {\r\n\t\t\t\tbasepath: basepath[i],\r\n\t\t\t\tversion: version[i],\r\n\t\t\t\txhr: xhr[i],\r\n\t\t\t\ttypeOptions: typeOptions[i]\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tkeys.push(i);\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[i];\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync(loaderOptions[i]));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TJsLoaderRawResource = string;\r\n\r\nexport class JsLoaderResource extends LoaderBase.LoaderResource<TJsLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = '';\r\n\t}\r\n\t\r\n\tref() {\r\n\t\tconst script = document.body.appendChild(document.createElement('script'));\r\n\t\tscript.text = this._data;\r\n\t}\r\n}\r\n\r\nexport type TJsLoaderTarget = string;\r\n\r\nexport interface IJsLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsLoader extends LoaderBase.LoaderBase<TJsLoaderTarget, TJsLoaderRawResource, JsLoaderResource> {\r\n\tprotected _loadAsync(target: TJsLoaderTarget, options: IJsLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst data = this._resolveParams(target, options);\r\n\t\t\tconst src = data.src;\r\n\t\t\tconst xhr = data.xhr;\r\n\t\t\t\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(src);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(src, xhr.requestOptions || {});\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.text();\r\n\t\t})\r\n\t\t.then(text => new JsLoaderResource(text, null))\r\n\t\t.catch((e: any) => new JsLoaderResource('', e));\r\n\t}\r\n}"],"names":["_interopNamespaceDefault","e","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","default","freeze","PIXI__namespace","PIXI","Emitter","this","_events","prototype","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","len","arguments","ref","concat","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","configurable","set","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","defineProperties","_Task","tasks","super","_piximData","emitter","constructor","call","Container","superclass","taskEnabledChildren","taskEnabled","updateTask","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","EVENT_LOADER_ASSET_LOADED","ManifestBase","_data","_resources","_type","count","options","unrequired","target","getAsync","Promise","resolve","res","loader","_createLoader","onLoaded","resource","xhr","loaderOptions","assign","typeOptions","basepath","version","url","data","loadAllAsync","resources","error","destroyResources","resolveUri","uri","isUrl","preUri","resolvePath","resolveQuery","_fv","path","utils","indexOf","queries","q","t","split","search","join","LoaderResource","_error","LoaderBase","loadAsync","_loadAsync","promises","loop","all","_resolveParams","src","utils.resolveUri","utils.isUrl","BlobLoaderResource","URL","webkitURL","revokeObjectURL","LoaderBase.LoaderResource","BlobLoader","fetch","requestOptions","ok","statusText","blob","createObjectURL","catch","LoaderBase.LoaderBase","TextureLoaderResource","removeCache","texture","Texture","removeFromCache","baseTexture","BaseTexture","TextureLoader","_loadBaseTextureAsync","HTMLImageElement","HTMLVideoElement","crossOrigin","reject","bt","from","valid","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","JsonLoaderResource","JsonLoader","json","SpritesheetLoaderResource","SpritesheetLoader","_loadTextureAsync","_loadJsonAsync","textures","meta","image","frames","textureVersion","ss","Spritesheet","parse","TextureLoader.TextureLoaderResource","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","_loadedResourceHandler","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","classAssetCount","instanceAssetCount","assetCount","registerManifest","key","Manifest","ContentClone","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","total","manifest","resolver","j","JsLoaderResource","createElement","text","JsLoader","exports","Pixim"],"mappings":"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","x_google_ignoreList":[0,2]}