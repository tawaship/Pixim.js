{"version":3,"file":"Pixim.min.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/Emitter.ts","../node_modules/@tawaship/task/dist/Task.esm.js","../src/modules/Task.ts","../src/modules/Container.ts","../src/modules/Application.ts","../src/modules/utils/index.ts","../src/modules/content/ManifestBase.ts","../src/modules/loader/LoaderBase.ts","../src/modules/loader/BlobLoader.ts","../src/modules/loader/TextureLoader.ts","../src/modules/content/TextureManifest.ts","../src/modules/loader/JsonLoader.ts","../src/modules/loader/SpritesheetLoader.ts","../src/modules/content/SpritesheetManifest.ts","../src/modules/loader/SoundLoader.ts","../src/modules/content/SoundManifest.ts","../src/modules/content/JsonManifest.ts","../src/modules/content/ContentDeliver.ts","../src/modules/content/Content.ts","../src/modules/loader/JsLoader.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.1.1\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    _on(type, callback, once) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ callback, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    on(type, callback) {\r\n        return this._on(type, callback, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Callback when the event fires.\r\n     */\r\n    once(type, callback) {\r\n        return this._on(type, callback, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param callback Registered callback.\r\n     */\r\n    off(type, callback) {\r\n        if (!type || !callback) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].callback === callback) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _emit(type, context, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const targets = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const event = events[i];\r\n            if (event.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            targets.push(event);\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emit(type, ...args) {\r\n        return this._emit(type, this, ...args);\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        return this._emit(type, context, ...args);\r\n    }\r\n    _emitAll(context, ...args) {\r\n        if (context == null) {\r\n            return this;\r\n        }\r\n        const targets = [];\r\n        for (let type in this._events) {\r\n            const events = this._events[type] || [];\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                const event = events[i];\r\n                if (event.once) {\r\n                    events.splice(i, 1);\r\n                }\r\n                targets.push(event);\r\n            }\r\n        }\r\n        for (let i = targets.length - 1; i >= 0; i--) {\r\n            targets[i].callback.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit all events.\r\n     *\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    emitAll(...args) {\r\n        return this._emitAll(this, ...args);\r\n    }\r\n    /**\r\n     * Emit all events with specifying a context.\r\n     *\r\n     * @param context Context to execute the callback.\r\n     * @param args Argument(s) in callback.\r\n     */\r\n    cemitAll(context, ...args) {\r\n        return this._emitAll(context, ...args);\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove. If it is empty, removes all events.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter as _Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * [[https://tawaship.github.io/Emitter/index.html | @tawaship/emitter]]\r\n */\r\nexport class Emitter extends _Emitter {}","/*!\n * @tawaship/task - v1.1.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Task {\r\n    constructor(callbacks, context) {\r\n        this._taskData = {\r\n            context: context == null ? this : context,\r\n            enabled: true,\r\n            index: -1,\r\n            callbacks: [],\r\n            value: null\r\n        };\r\n        this.add(callbacks);\r\n    }\r\n    /**\r\n     * Whether the task works.\r\n     */\r\n    get enabled() {\r\n        return this._taskData.enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._taskData.enabled = enabled;\r\n    }\r\n    /**\r\n     * Add the task to the end of the list.\r\n     */\r\n    add(callbacks) {\r\n        if (!Array.isArray(callbacks)) {\r\n            callbacks = [callbacks];\r\n        }\r\n        const list = this._taskData.callbacks;\r\n        const flag = list.length === 0;\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            if (!(callbacks[i] instanceof Function)) {\r\n                continue;\r\n            }\r\n            list.push(callbacks[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Execute the current task.\r\n     */\r\n    done(...args) {\r\n        if (!this._taskData.enabled) {\r\n            return;\r\n        }\r\n        const task = this._taskData.callbacks[this._taskData.index];\r\n        if (!task) {\r\n            return;\r\n        }\r\n        return this._taskData.value = task.apply(this._taskData.context, args);\r\n    }\r\n    _to(index) {\r\n        this._taskData.index = Number(index);\r\n        return this;\r\n    }\r\n    /**\r\n     * Change the current task to the first task.\r\n     */\r\n    first() {\r\n        return this._to(0);\r\n    }\r\n    /**\r\n     * Change the current task to the previos task.\r\n     */\r\n    prev() {\r\n        return this._to(this._taskData.index - 1);\r\n    }\r\n    /**\r\n     * Change the current task to the next task.\r\n     */\r\n    next() {\r\n        return this._to(this._taskData.index + 1);\r\n    }\r\n    /**\r\n     * Change the current task to the specified task.\r\n     */\r\n    to(index) {\r\n        return this._to(index);\r\n    }\r\n    /**\r\n     * Skips all tasks and changes to the finished state.\r\n     */\r\n    finish() {\r\n        this._taskData.index = -1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Cancel all task and leave them unregistered.\r\n     */\r\n    reset() {\r\n        this._taskData.callbacks = [];\r\n        this._taskData.index = -1;\r\n        this._taskData.value = null;\r\n        return this;\r\n    }\r\n    /**\r\n     * Destroy instance.\r\n     */\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n    /**\r\n     * The value returned by the last task executed.\r\n     */\r\n    get value() {\r\n        return this._taskData.value;\r\n    }\r\n}\n\nexport { Task };\n//# sourceMappingURL=Task.esm.js.map\n","import { Emitter } from './Emitter';\r\nimport { Task as _Task, ITaskDelegate } from '@tawaship/task';\r\n\r\nexport interface ITaskData {\r\n\temitter: Emitter\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Task/index.html | @tawaship/task]]\r\n */\r\nexport class Task extends _Task {\r\n\tprivate _piximData: ITaskData;\r\n\t\r\n\tconstructor(tasks: ITaskDelegate | ITaskDelegate[], context: any) {\r\n\t\tsuper(tasks, context);\r\n\t\t\r\n\t\tthis.enabled = true;\r\n\t\tthis._piximData = {\r\n\t\t\temitter: new Emitter()\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\ton(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.on(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tonce(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.once(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\toff(type: string, callback: ITaskDelegate) {\r\n\t\tthis._piximData.emitter.off(type, callback);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\temit(type: string, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emit(type, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemit(type, context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\temitAll(...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.emitAll(...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.9.0\r\n\t */\r\n\tcemitAll(context: any, ...args: any[]) {\r\n\t\tif (!this._taskData.enabled) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.emitter.cemitAll(context, ...args);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @deprecated 1.7.0\r\n\t */\r\n\tclear(type: string = '') {\r\n\t\tthis._piximData.emitter.clear(type);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tthis.clear();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Task } from './Task';\r\n//import { TaskManager } from './TaskManager';\r\nimport { ITickerData } from './Application';\r\n\r\nexport interface IContainerData {\r\n\ttask: Task,\r\n\ttaskEnabledChildren: boolean\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _lastObserverID = 0;\r\n\r\n/**\r\n * [[http://pixijs.download/release/docs/PIXI.Container.html]]\r\n */\r\nexport class Container extends PIXI.Container {\r\n\tprotected _piximData: IContainerData;\r\n\t\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\ttask: new Task([], this),\r\n\t\t\ttaskEnabledChildren: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData.task.first();\r\n\t\t\r\n\t\tconst _observerID = _lastObserverID++;\r\n\t\t/*\r\n\t\tthis.on('added', () => {\r\n\t\t\tTaskManager.addObserver(_observerID, this);\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('removed', () => {\r\n\t\t\tTaskManager.removeObserver(_observerID);\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\tupdateTask(e: ITickerData) {\r\n\t\tconst task: Task = this._piximData.task;\r\n\t\t\r\n\t\tif (!this._piximData.task.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tlet p: PIXI.DisplayObject = this;\r\n\t\tlet f = true;\r\n\t\t\r\n\t\twhile (p) {\r\n\t\t\tif (p instanceof Container && !p.taskEnabledChildren) {\r\n\t\t\t\tf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (!f) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\ttask.done(e);\r\n\t\t\r\n\t\t// will be deprecated\r\n\t\ttask.cemitAll(this, e);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the task works.\r\n\t */\r\n\tget taskEnabled(): boolean {\r\n\t\treturn this._piximData.task.enabled;\r\n\t}\r\n\t\r\n\tset taskEnabled(enabled) {\r\n\t\tthis._piximData.task.enabled = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether the children and subsequent tasks work.\r\n\t */\r\n\tget taskEnabledChildren(): boolean {\r\n\t\treturn this._piximData.taskEnabledChildren;\r\n\t}\r\n\t\r\n\tset taskEnabledChildren(enabled) {\r\n\t\tthis._piximData.taskEnabledChildren = enabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Task object that works only while it is being displayed.\r\n\t */\r\n\tget task(): Task {\r\n\t\treturn this._piximData.task;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy instance.\r\n\t * \r\n\t * @override\r\n\t */\r\n\tdestroy(...args: any[]): void {\r\n\t\tsuper.destroy(...args);\r\n\t\tthis._piximData.task.destroy();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Content } from './content/Content';\r\nimport { Container } from './Container';\r\nimport { Emitter } from './Emitter';\r\n//import { TaskManager } from './TaskManager';\r\n\r\nexport interface IContentDictionary {\r\n\t[id: string]: Content;\r\n}\r\n\r\nexport interface IRootDictionary {\r\n\t[id: string]: PIXI.Container;\r\n}\r\n\r\nexport interface ILayerDictionary{\r\n\t[name: string]: Layer;\r\n}\r\n\r\nexport interface ITickerData {\r\n\tdelta: number\r\n}\r\n\r\nexport interface IAdjustDelegate {\r\n\t(app: Application): void;\r\n}\r\n\r\nexport type TAutoAdjust = boolean | IAdjustDelegate;\r\n\r\nexport interface IAutoAdjustDelegate {\r\n\t(): void;\r\n}\r\n\r\nexport type TAutoAdjuster = IAutoAdjustDelegate | null;\r\n\r\nexport interface IApplicationOption {\r\n\t/**\r\n\t * Parent node of canvas element.\r\n\t */\r\n\tcontainer?: HTMLElement;\r\n\t\r\n\t/**\r\n\t * Whether to automatically resize the canvas when resizing the window.<br />\r\n\t * Or the resizing process to be executed at that time.\r\n\t */\r\n\tautoAdjust?: TAutoAdjust;\r\n}\r\n\r\nexport interface IApplicationData {\r\n\tisRun: boolean;\r\n\t/**\r\n\t * [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]\r\n\t */\r\n\tapp: PIXI.Application;\r\n\tcontainer: HTMLElement;\r\n\tlayers: ILayerDictionary;\r\n\tautoAdjuster: TAutoAdjuster;\r\n\troots: IRootDictionary;\r\n\tcontents: IContentDictionary;\r\n}\r\n\r\nexport interface ISize {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IPosition {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\nexport interface IHorizontal {\r\n\tx: number;\r\n\twidth: number;\r\n}\r\n\r\nexport interface IVertical {\r\n\ty: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IRect extends ISize, IPosition {}\r\n\r\nexport interface IDestroyOptions {\r\n\tchildren?: boolean;\r\n\ttexture?: boolean;\r\n\tbaseTexture?: boolean;\r\n}\r\n\r\nexport class Layer extends PIXI.Container {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction taskHandler(obj: PIXI.Container, e: ITickerData): void {\r\n\tif (obj instanceof Container) {\r\n\t\tobj.updateTask(e);\r\n\t\t\r\n\t\tif (!obj.taskEnabledChildren) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst children: PIXI.DisplayObject[] = [];\r\n\t\r\n\tfor (let i = 0; i < obj.children.length; i++) {\r\n\t\tchildren.push(obj.children[i]);\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\t\r\n\t\tif (child instanceof PIXI.Container) {\r\n\t\t\ttaskHandler(child, e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Application extends Emitter {\r\n\tprotected _piximData: IApplicationData;\r\n\t\r\n\t/**\r\n\t * @param pixiOptions Optional data when call 'new [[[[http://pixijs.download/v5.2.1/docs/PIXI.Application.html | PIXI.Application]]]]'.\r\n\t * @param piximOptions Optional data for Pixim.\r\n\t */\r\n\tconstructor(pixiOptions: Object = {}, piximOptions: IApplicationOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst app: PIXI.Application = new PIXI.Application(pixiOptions);\r\n\t\tapp.stop();\r\n\t\t\r\n\t\tapp.view.style.position = 'absolute';\r\n\t\t\r\n\t\tconst autoAdjust: TAutoAdjust = piximOptions.autoAdjust || false;\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tisRun: false,\r\n\t\t\tapp,\r\n\t\t\tcontainer: piximOptions.container || document.body,\r\n\t\t\tlayers: {},\r\n\t\t\tautoAdjuster: null,\r\n\t\t\troots: {},\r\n\t\t\tcontents: {}\r\n\t\t};\r\n\t\t\r\n\t\tconst ticker: PIXI.Ticker = this._piximData.app.ticker;\r\n\t\t\r\n\t\tticker.add((delta: number) => {\r\n\t\t\t//TaskManager.done({ delta });\r\n\t\t\ttaskHandler(this._piximData.app.stage, { delta });\r\n\t\t});\r\n\t\t\r\n\t\tif (autoAdjust) {\r\n\t\t\tif (autoAdjust === true) {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tthis.fullScreen()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoAdjuster = () => {\r\n\t\t\t\t\tautoAdjust(this);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tget app(): PIXI.Application {\r\n\t\treturn this._piximData.app;\r\n\t}\r\n\t\r\n\tget stage(): PIXI.Container {\r\n\t\treturn this._piximData.app.stage;\r\n\t}\r\n\t\r\n\tget view(): HTMLCanvasElement {\r\n\t\treturn this._piximData.app.view;\r\n\t}\r\n\t\r\n\tget container(): HTMLElement {\r\n\t\treturn this._piximData.container;\r\n\t}\r\n\t\r\n\tset container(container: HTMLElement) {\r\n\t\tthis._piximData.container = container || document.body;\r\n\t\tif (this._piximData.app.view.parentNode) {\r\n\t\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Whether application has layer.\r\n\t */\r\n\tprivate _hasLayer(name: string): boolean {\r\n\t\treturn !!this._piximData.layers[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add layer to application.\r\n\t */\r\n\taddLayer(name: string) {\r\n\t\tif (this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.layers[name] = this._piximData.app.stage.addChild(new Layer());\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove layer form application.\r\n\t */\r\n\tremoveLayer(name: string) {\r\n\t\tif (!this._hasLayer(name)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.app.stage.removeChild(this._piximData.layers[name]);\r\n\t\tdelete(this._piximData.layers[name]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Attach content to application.\r\n\t */\r\n\tattachAsync(content: Content, layerName: string = 'anonymous'): Promise<PIXI.Container> {\r\n\t\treturn content.buildAsync()\r\n\t\t\t.then((root: PIXI.Container) => {\r\n\t\t\t\tthis.detach(content);\r\n\t\t\t\t\r\n\t\t\t\tthis.addLayer(layerName);\r\n\t\t\t\t\r\n\t\t\t\tthis._piximData.roots[content.contentID] = root;\r\n\t\t\t\tthis._piximData.contents[content.contentID] = content;\r\n\t\t\t\tthis._piximData.layers[layerName].addChild(root);\r\n\t\t\t\t\r\n\t\t\t\treturn root;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detach content from application.\r\n\t */\r\n\tdetach(content: Content, stageOptions: IDestroyOptions = { children: true }) {\r\n\t\tconst root: PIXI.Container = this._piximData.roots[content.contentID];\r\n\t\t\r\n\t\tif (!root) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._destroyRoot(root, stageOptions);\r\n\t\tdelete(this._piximData.roots[content.contentID]);\r\n\t\tdelete(this._piximData.contents[content.contentID]);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application and displa viewy.\r\n\t */\r\n\tplay() {\r\n\t\tthis._piximData.container.appendChild(this._piximData.app.view);\r\n\t\t\r\n\t\treturn this.start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start application.\r\n\t */\r\n\tstart() {\r\n\t\tthis._piximData.app.start();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop application.\r\n\t */\r\n\tstop() {\r\n\t\tthis._piximData.app.stop();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause (or restart) application.\r\n\t */\r\n\tpause(paused: boolean) {\r\n\t\tif (paused) {\r\n\t\t\tthis.stop();\r\n\t\t} else {\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tget autoAdjuster() {\r\n\t\treturn this._piximData.autoAdjuster;\r\n\t}\r\n\t\r\n\tset autoAdjuster(autoAdjuster: TAutoAdjuster) {\r\n\t\tif (this._piximData.autoAdjuster) {\r\n\t\t\twindow.removeEventListener('resize', this._piximData.autoAdjuster);\r\n\t\t}\r\n\t\t\r\n\t\tif (!autoAdjuster) {\r\n\t\t\tthis._piximData.autoAdjuster = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.autoAdjuster = autoAdjuster;\r\n\t\twindow.addEventListener('resize', autoAdjuster);\r\n\t\tautoAdjuster();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pre process to destroy application.\r\n\t */\r\n\tpreDestroy() {\r\n\t\tfor (let i in this._piximData.contents) {\r\n\t\t\tthis._piximData.contents[i].destroy();\r\n\t\t}\r\n\t\t\r\n\t\tthis.autoAdjuster = null;\r\n\t\tthis._piximData.layers = {};\r\n\t\tthis._piximData.roots = {};\r\n\t\tthis._piximData.contents = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destroy application.\r\n\t */\r\n\tdestroy(removeView?: boolean, stageOptions?: IDestroyOptions) {\r\n\t\tthis.preDestroy();\r\n\t\t\r\n\t\tthis._piximData.app.destroy(removeView, stageOptions);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _destroyRoot(root: PIXI.Container, stageOptions?: IDestroyOptions): void {\r\n\t\troot.destroy(stageOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified rectangle.\r\n\t * \r\n\t * @param rect Rectangle to adjust.\r\n\t */\r\n\tfullScreen(rect?: IRect) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst r: IRect = rect || {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tif (r.width / r.height > view.width / view.height) {\r\n\t\t\treturn this.adjustHeight(r.height).toCenter(r).toTop(r);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.adjustWidth(r.width).toMiddle(r).toLeft(r);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified width.\r\n\t * \r\n\t * @param width Width to adjust.\r\n\t */\r\n\tadjustWidth(width?: number) {\r\n\t\tconst view: HTMLCanvasElement = this._piximData.app.view;\r\n\t\tconst w: number = width || this._piximData.container.offsetWidth || window.innerWidth;\r\n\t\t\r\n\t\tconst h: number = w / view.width * view.height;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.width = `${w}px`;\r\n\t\tview.style.height = `${h}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resize canvas to fit specified height.\r\n\t * \r\n\t * @param height Height to adjust.\r\n\t */\r\n\tadjustHeight(height?: number) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst h: number = height || this._piximData.container.offsetHeight || window.innerHeight;\r\n\t\t\r\n\t\tconst w = h / view.height * view.width;\r\n\t\t\r\n\t\t//const frame = this._piximData.frame;\r\n\t\tview.style.height = `${h}px`;\r\n\t\tview.style.width = `${w}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Left justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoLeft(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Center justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoCenter(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${(hol.width - this._getViewRect().width) / 2 + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Right justified with respect to the reference data.\r\n\t * \r\n\t * @param horizontal Horizontal data used to calculate the position.\r\n\t */\r\n\ttoRight(horizontal?: IHorizontal) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst hol: IHorizontal = horizontal || {\r\n\t\t\tx: 0,\r\n\t\t\twidth: this._piximData.container.offsetWidth || window.innerWidth\r\n\t\t};\r\n\t\t\r\n\t\tview.style.left = `${hol.width - this._getViewRect().width + hol.x}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Top justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoTop(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Middle justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoMiddle(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${(ver.height - this._getViewRect().height) / 2 + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bottom justified with respect to the reference data.\r\n\t * \r\n\t * @param vertical Vertical data used to calculate the position.\r\n\t */\r\n\ttoBottom(vertical?: IVertical) {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\tconst ver: IVertical = vertical || {\r\n\t\t\ty: 0,\r\n\t\t\theight: this._piximData.container.offsetHeight || window.innerHeight\r\n\t\t};\r\n\t\t\r\n\t\tview.style.top = `${ver.height - this._getViewRect().height + ver.y}px`;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tprivate _getViewRect(): IRect {\r\n\t\tconst view = this._piximData.app.view;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tx: parseInt(view.style.left.replace('px', '')),\r\n\t\t\ty: parseInt(view.style.top.replace('px', '')),\r\n\t\t\twidth: parseInt(view.style.width.replace('px', '')),\r\n\t\t\theight: parseInt(view.style.height.replace('px', ''))\r\n\t\t};\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport function resolveUri(basepath: string, uri: any, version?: string | number) {\r\n\tif (typeof(uri) !== 'string') {\r\n\t\treturn uri;\r\n\t}\r\n\t\t\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t}\r\n\t\r\n\tbasepath = basepath || '';\r\n\tversion = version || '';\r\n\tconst preUri = resolvePath(basepath, uri);\r\n\t\r\n\treturn version ? resolveQuery(preUri, { _fv: version }) : preUri;\r\n}\r\n\r\n\r\nexport function resolvePath(basepath: string, path: string) {\r\n\tif (!isUrl(path)) {\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\treturn PIXI.utils.url.resolve(basepath, path);\r\n}\r\n\r\nexport function isUrl(uri: any) {\r\n\tif (uri.indexOf('data:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (uri.indexOf('blob:') === 0) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport function resolveQuery(uri: string, queries: { [ name: string ]: any }): string {\r\n\tif (!isUrl(uri)) {\r\n\t\treturn uri;\r\n\t} else {\r\n\t\tconst q = [];\r\n\t\t\r\n\t\tconst t = uri.split('?');\r\n\t\t\r\n\t\tif (t[1]) {\r\n\t\t\tconst search = t[1].split('&');\r\n\t\t\tfor (let i = 0; i < search.length; i++) {\r\n\t\t\t\tconst p = search[i].split('=');\r\n\t\t\t\tif (!(p[0] in queries)) {\r\n\t\t\t\t\tq.push(search[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in queries) {\r\n\t\t\tq.push(`${i}=${queries[i]}`);\r\n\t\t}\r\n\t\t\r\n\t\treturn `${t[0]}?${q.join('&')}`;\r\n\t}\r\n}","import * as LoaderBase from '../loader/LoaderBase';\r\nimport { Emitter } from '@tawaship/emitter';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface IManifestClass {\r\n\tnew(type: string): ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IResourceManagerData<T> {\r\n\ttarget: T;\r\n\tunrequired: boolean;\r\n}\r\n\r\nexport interface IResourceManagerManifest<T> {\r\n\t[ name: string ]: IResourceManagerData<T>;\r\n}\r\n\r\nexport interface IManifestOption {\r\n\tunrequired?: boolean;\r\n}\r\n\r\nexport interface IResourceManifest<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IRawResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface IManifestTargetDictionary<T> extends LoaderBase.ILoaderTargetDictionary<T> {\r\n\r\n}\r\n\r\nexport type TManifestResourceVersion = string | number;\r\n\r\nexport interface IManifestLoaderXhrOptionFacotryDelegate {\r\n\t(type: string, url: string): LoaderBase.TLoaderResolvedXhrOption;\r\n}\r\n\r\nexport type TLoaderXhrOption = IManifestLoaderXhrOptionFacotryDelegate | boolean | LoaderBase.ILoaderXhrOption;\r\n\r\nexport interface IManifestLoaderOption {\r\n\tbasepath: string;\r\n\tversion: TManifestResourceVersion;\r\n\txhr: TLoaderXhrOption;\r\n\tothers: { [key: string]: any };\r\n}\r\n\r\nexport const EVENT_LOADER_ASSET_LOADED = 'loaderAssetLoaded';\r\n\r\nexport abstract class ManifestBase<TTarget, TRawResource, TResource extends LoaderBase.LoaderResource<TRawResource>> extends Emitter {\r\n\tprotected _data: IResourceManagerManifest<TTarget> = {};\r\n\tprotected _resources: LoaderBase.ILoaderResourceDictionary<TResource> = {};\r\n\tprivate _type: string;\r\n\t\r\n\tconstructor(type: string) {\r\n\t\tsuper();\r\n\t\tthis._type = type;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register targetss.\r\n\t */\r\n\tadd(targets: IManifestTargetDictionary<TTarget>, options: IManifestOption = {}): void {\r\n\t\tconst unrequired = options.unrequired || false;\r\n\t\t\r\n\t\tfor (let i in targets) {\r\n\t\t\tthis._data[i] = {\r\n\t\t\t\ttarget: targets[i],\r\n\t\t\t\tunrequired\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget count() {\r\n\t\treturn Object.keys(this._data).length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get resources.\r\n\t */\r\n\tgetAsync(options: IManifestLoaderOption) {\r\n\t\tif (Object.keys(this._data).length === 0) {\r\n\t\t\treturn Promise.resolve({});\r\n\t\t}\r\n\t\t\r\n\t\tconst res: IRawResourceDictionary<TRawResource> = {};\r\n\t\t\r\n\t\tconst loader = this._createLoader();\r\n\t\tloader.onLoaded = (resource: TResource) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, resource);\r\n\t\t};\r\n\t\t\r\n\t\tconst loaderOptions: LoaderBase.ILoaderOption = this._getAppendOption(options);\r\n\t\t\r\n\t\tconst data: LoaderBase.ILoaderDataDictionary<TTarget, LoaderBase.ILoaderOption> = {};\r\n\t\t\r\n\t\tfor (let i in this._data) {\r\n\t\t\tconst src = this._resolveTarget(this._data[i].target, options);\r\n\t\t\tdata[i] = { src, options: Object.assign({}, loaderOptions, { xhr: options.xhr }) };\r\n\t\t}\r\n\t\t\r\n\t\treturn loader.loadAllAsync(data)\r\n\t\t\t.then(resources => {\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resource.error && !this._data[i].unrequired) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in resources) {\r\n\t\t\t\t\tconst resource = resources[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._resources[i] = resource;\r\n\t\t\t\t\tres[i] = resource.data;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _createLoader(): LoaderBase.LoaderBase<TTarget, TRawResource, TResource>;\r\n\t\r\n\tprotected _resolveTarget(target: TTarget, options: IManifestLoaderOption): TTarget {\r\n\t\treturn utils.resolveUri(options.basepath || '', target, options.version);\r\n\t}\r\n\t\r\n\tprotected _getAppendOption(options: IManifestLoaderOption): LoaderBase.ILoaderOption {\r\n\t\treturn {};\r\n\t}\r\n\t\r\n\tdestroyResources() {\r\n\t\tfor (let i in this._resources) {\r\n\t\t\tthis._resources[i].destroy();\r\n\t\t}\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as utils from '../utils/index';\r\n\r\nexport abstract class LoaderResource<T> {\r\n\tprotected _data: T;\r\n\tprotected _error: any;\r\n\t\r\n\tconstructor(data: T, error: any) {\r\n\t\tthis._data = data;\r\n\t\tthis._error = error;\r\n\t}\r\n\t\r\n\tabstract destroy(): void;\r\n\t\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t\r\n\tget error() {\r\n\t\treturn this._error;\r\n\t}\r\n}\r\n\r\nexport interface IFetchRequestOption {\r\n\t[key: string]: string;\r\n}\r\n\r\nexport interface ILoaderXhrOption {\r\n\trequestOptions?: IFetchRequestOption;\r\n}\r\n\r\nexport interface ILoaderResolvedXhrOption extends ILoaderXhrOption {\r\n\tsrc: string;\r\n}\r\n\r\nexport type TLoaderResolvedXhrOption = ILoaderResolvedXhrOption | null;\r\n\r\nexport interface ILoaderXhrOptionFacotryDelegate {\r\n\t(url: string): TLoaderResolvedXhrOption;\r\n}\r\n\r\nexport interface ILoaderOption {\r\n\txhr?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate;\r\n}\r\n\r\nexport interface ILoaderResourceDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderTargetDictionary<T> {\r\n\t[ name: string ]: T;\r\n}\r\n\r\nexport interface ILoaderDataDictionary<TTarget, TLoaderOption> {\r\n\t[name: string]: { src: TTarget, options?: TLoaderOption };\r\n}\r\n\r\nexport abstract class LoaderBase<TTarget, TRawResource, TResource extends LoaderResource<TRawResource>> {\r\n\t/**\r\n\t * Callback when one of the resources has succeeded loading.\r\n\t */\r\n\tonLoaded?: (resource: TResource) => void;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAsync(target: TTarget, options?: ILoaderOption) {\r\n\t\treturn (() => {\r\n\t\t\treturn this._loadAsync(target, options);\r\n\t\t})()\r\n\t\t.then(resource => {\r\n\t\t\tif (!resource.error) {\r\n\t\t\t\tthis.onLoaded && this.onLoaded(resource);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn resource;\r\n\t\t});\r\n\t}\r\n\t\r\n\tprotected abstract _loadAsync(target: TTarget, options?: ILoaderOption): Promise<TResource>;\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.loaded]]\r\n\t */\r\n\tloadAllAsync(data: ILoaderDataDictionary<TTarget, ILoaderOption>) {\r\n\t\tconst res: ILoaderResourceDictionary<TResource> = {};\r\n\t\t\r\n\t\tif (Object.keys(data).length === 0) {\r\n\t\t\treturn Promise.resolve(res);\r\n\t\t}\r\n\t\t\r\n\t\tconst promises = [];\r\n\t\t\r\n\t\tfor (let i in data) {\r\n\t\t\tpromises.push(\r\n\t\t\t\tthis.loadAsync(data[i].src, data[i].options)\r\n\t\t\t\t\t.then(resource => {\r\n\t\t\t\t\t\tres[i] = resource;\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn res;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprotected _resolveXhr(target: TTarget | string, options?: ILoaderXhrOption | boolean | ILoaderXhrOptionFacotryDelegate): TLoaderResolvedXhrOption {\r\n\t\tif (typeof(target) !== 'string') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (!utils.isUrl(target)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (!options) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === true) {\r\n\t\t\treturn {\r\n\t\t\t\tsrc: target,\r\n\t\t\t\trequestOptions: {}\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(options) === 'function') {\r\n\t\t\treturn options(target);\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tsrc: target,\r\n\t\t\trequestOptions: options.requestOptions || {}\r\n\t\t};\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TBlobLoaderRawResource = string;\r\n\r\nexport class BlobLoaderResource extends LoaderBase.LoaderResource<TBlobLoaderRawResource> {\r\n\tdestroy() {\r\n\t\t(window.URL || window.webkitURL).revokeObjectURL(this._data);\r\n\t\tthis._data = '';\r\n\t}\r\n}\r\n\r\nexport type TBlobLoaderTarget = string;\r\n\r\nexport interface IBlobLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TBlobLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<BlobLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IBlobLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class BlobLoader extends LoaderBase.LoaderBase<TBlobLoaderTarget, TBlobLoaderRawResource, BlobLoaderResource> {\r\n\tprotected _loadAsync(target: TBlobLoaderTarget, options: IBlobLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.blob();\r\n\t\t})\r\n\t\t.then(blob => {\r\n\t\t\treturn (window.URL || window.webkitURL).createObjectURL(blob);\r\n\t\t})\r\n\t\t.then(uri => new BlobLoaderResource(uri, null))\r\n\t\t.catch((e: any) => new BlobLoaderResource('', e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { BlobLoader } from './BlobLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TTextureLoaderRawResource = PIXI.Texture | null;\r\n\r\nexport class TextureLoaderResource extends LoaderBase.LoaderResource<TTextureLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tTextureLoaderResource.removeCache(this._data);\r\n\t\t\tthis._data.destroy(true);\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic removeCache(texture: PIXI.Texture) {\r\n\t\tPIXI.Texture.removeFromCache(texture);\r\n\t\t\r\n\t\tif (texture.baseTexture) {\r\n\t\t\tPIXI.BaseTexture.removeFromCache(texture.baseTexture);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TTextureLoaderElementTarget = HTMLImageElement | HTMLVideoElement;\r\n\r\nexport type TTextureLoaderTarget = string | TTextureLoaderElementTarget;\r\n\r\nexport interface ITextureLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<TextureLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ITextureLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class TextureLoader extends LoaderBase.LoaderBase<TTextureLoaderTarget, TTextureLoaderRawResource, TextureLoaderResource> {\r\n\tprotected _loadAsync(target: TTextureLoaderTarget, options: ITextureLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn this._loadBaseTextureAsync(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst loader = new BlobLoader();\r\n\t\t\t\r\n\t\t\treturn loader.loadAsync(xhr.src, { xhr: options.xhr })\r\n\t\t\t\t.then(resource => {\r\n\t\t\t\t\tif (resource.error) {\r\n\t\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn this._loadBaseTextureAsync(resource.data);\r\n\t\t\t\t});\r\n\t\t})()\r\n\t\t.then(baseTexture => new TextureLoaderResource(new PIXI.Texture(baseTexture), null))\r\n\t\t.catch(e => new TextureLoaderResource(null, e));\r\n\t}\r\n\t\r\n\tprivate _loadBaseTextureAsync(target: TTextureLoaderTarget) {\r\n\t\tif (target instanceof HTMLImageElement || target instanceof HTMLVideoElement) {\r\n\t\t\ttarget.crossOrigin = 'anonymous';\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise<PIXI.BaseTexture>((resolve, reject) => {\r\n\t\t\tconst bt = PIXI.BaseTexture.from(target);\r\n\t\t\t\r\n\t\t\tif (bt.valid) {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(bt);\r\n\t\t\t\tresolve(bt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbt.on('loaded', (baseTexture: PIXI.BaseTexture) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\tresolve(baseTexture);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tbt.on('error', (baseTexture: PIXI.BaseTexture, e: Error) => {\r\n\t\t\t\tPIXI.BaseTexture.removeFromCache(baseTexture);\r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as TextureLoader from '../loader/TextureLoader';\r\n\r\nexport interface ITextureManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<TextureLoader.TTextureLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ITextureDictionary extends ManifestBase.IRawResourceDictionary<TextureLoader.TTextureLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class TextureManifest extends ManifestBase.ManifestBase<TextureLoader.TTextureLoaderTarget, TextureLoader.TTextureLoaderRawResource, TextureLoader.TextureLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new TextureLoader.TextureLoader();\r\n\t}\r\n}","import * as LoaderBase from './LoaderBase';\r\n\r\nexport interface IJsonData {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport type TJsonLoaderRawResource = IJsonData;\r\n\r\nexport class JsonLoaderResource extends LoaderBase.LoaderResource<TJsonLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport type TJsonLoaderTarget = string;\r\n\r\nexport interface IJsonLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsonLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsonLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsonLoader extends LoaderBase.LoaderBase<TJsonLoaderTarget, TJsonLoaderRawResource, JsonLoaderResource> {\r\n\tprotected _loadAsync(target: TJsonLoaderTarget, options: IJsonLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => new JsonLoaderResource(json, null))\r\n\t\t.catch((e: any) => new JsonLoaderResource({}, e));\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport * as LoaderBase from './LoaderBase';\r\nimport { JsonLoader } from './JsonLoader';\r\nimport * as TextureLoader from './TextureLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport type TSpritesheetLoaderRawResource = PIXI.ITextureDictionary;\r\n\r\nexport class SpritesheetLoaderResource extends LoaderBase.LoaderResource<TSpritesheetLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tfor (let i in this._data) {\r\n\t\t\tthis._data[i].destroy(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis._data = {};\r\n\t}\r\n}\r\n\r\nexport interface ISpritesheetJson {\r\n\tframes: {\r\n\t\t[name: string]: any;\r\n\t};\r\n\t\r\n\tmeta: {\r\n\t\t[name: string]: any;\r\n\t\timage: string | HTMLImageElement;\r\n\t}\r\n}\r\n\r\nexport type TSpritesheetLoaderTarget = string | ISpritesheetJson;\r\n\r\nexport interface ISpritesheetLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderUrlTargetDictionary extends LoaderBase.ILoaderTargetDictionary<string> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderJsonTargetDictionary extends LoaderBase.ILoaderTargetDictionary<ISpritesheetJson> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SpritesheetLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetLoaderOption extends LoaderBase.ILoaderOption {\r\n\ttextureVersion?: string | number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst KEY_SINGLE_SPRITESHEET = '--single-spritesheet';\r\n\r\nexport class SpritesheetLoader extends LoaderBase.LoaderBase<TSpritesheetLoaderTarget, TSpritesheetLoaderRawResource, SpritesheetLoaderResource> {\r\n\tprotected _loadAsync(target: TSpritesheetLoaderTarget, options: ISpritesheetLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tif (typeof target !== 'string') {\r\n\t\t\t\treturn this._loadTextureAsync(target, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn this._loadJsonAsync(target, options);\r\n\t\t\t}\r\n\t\t})()\r\n\t\t.then(textures => new SpritesheetLoaderResource(textures, null))\r\n\t\t.catch(e => new SpritesheetLoaderResource({}, e));\r\n\t}\r\n\t\r\n\tprivate _loadJsonAsync(url: string, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new JsonLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(url, { xhr: options.xhr })\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst json = resource.data;\r\n\t\t\t\t\r\n\t\t\t\tif (!json.meta || !json.meta.image || !json.frames) {\r\n\t\t\t\t\tthrow 'invalid json';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tjson.meta.image = utils.resolveUri(url, json.meta.image, options.textureVersion || '');\r\n\t\t\t\t\r\n\t\t\t\tconst data: ISpritesheetJson = {\r\n\t\t\t\t\tframes: json.frames,\r\n\t\t\t\t\tmeta: json.meta\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn this._loadTextureAsync(data, options);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tprivate _loadTextureAsync(json: ISpritesheetJson, options: ISpritesheetLoaderOption) {\r\n\t\tconst loader = new TextureLoader.TextureLoader();\r\n\t\t\r\n\t\treturn loader.loadAsync(json.meta.image, { xhr: options.xhr })\r\n\t\t\t.then(resource => {\r\n\t\t\t\tif (resource.error) {\r\n\t\t\t\t\tthrow resource.error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!resource.data) {\r\n\t\t\t\t\tthrow 'invalid resource';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst ss = new PIXI.Spritesheet(resource.data, json);\r\n\t\t\t\t\r\n\t\t\t\treturn new Promise<PIXI.ITextureDictionary>(resolve => {\r\n\t\t\t\t\tss.parse(e => {\r\n\t\t\t\t\t\tfor (let i in ss.textures) {\r\n\t\t\t\t\t\t\tTextureLoader.TextureLoaderResource.removeCache(ss.textures[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresolve(ss.textures);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SpritesheetLoader from '../loader/SpritesheetLoader';\r\nimport * as LoaderBase from '../loader/LoaderBase';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISpritesheetManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SpritesheetLoader.TSpritesheetLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISpritesheetDictionary extends ManifestBase.IRawResourceDictionary<SpritesheetLoader.TSpritesheetLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SpritesheetManifest extends ManifestBase.ManifestBase<SpritesheetLoader.TSpritesheetLoaderTarget, SpritesheetLoader.TSpritesheetLoaderRawResource, SpritesheetLoader.SpritesheetLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SpritesheetLoader.SpritesheetLoader();\r\n\t}\r\n\t\r\n\tprotected _resolveTarget(target: SpritesheetLoader.TSpritesheetLoaderTarget, options: ManifestBase.IManifestLoaderOption) {\r\n\t\tif (typeof(target) === 'string') {\r\n\t\t\treturn utils.resolveUri(options.basepath || '', target, options.version);\r\n\t\t}\r\n\t\t\r\n\t\tif (typeof(target.meta.image) === 'string') {\r\n\t\t\ttarget.meta.image = utils.resolveUri(options.basepath || '', target.meta.image, options.version);\r\n\t\t}\r\n\t\t\r\n\t\treturn target;\r\n\t}\r\n\t\r\n\tprotected _getAppendOption(options: ManifestBase.IManifestLoaderOption): SpritesheetLoader.ISpritesheetLoaderOption {\r\n\t\treturn {\r\n\t\t\ttextureVersion: options.others.textureVersion || options.version\r\n\t\t};\r\n\t}\r\n}","import { Howl } from 'howler';\r\nimport * as LoaderBase from './LoaderBase';\r\n\r\nexport type TSoundLoaderRawResource = Howl | null;\r\n\r\nexport class SoundLoaderResource extends LoaderBase.LoaderResource<TSoundLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tif (this._data) {\r\n\t\t\tthis._data.stop();\r\n\t\t\tthis._data.unload();\r\n\t\t\tthis._data = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type TSoundLoaderTarget = string;\r\n\r\nexport interface ISoundLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<SoundLoaderResource> {\r\n\r\n}\r\n\r\nexport interface ISoundLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class SoundLoader extends LoaderBase.LoaderBase<TSoundLoaderTarget, TSoundLoaderRawResource, SoundLoaderResource> {\r\n\tprotected _loadAsync(target: TSoundLoaderTarget, options: ISoundLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\t\tsrc: target,\r\n\t\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\t\tconst e = new Error('invalid resource: ' + target);\r\n\t\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn new Promise<Howl>((resolve, reject) => {\r\n\t\t\t\tconst howl = new Howl({\r\n\t\t\t\t\tsrc: xhr.src,\r\n\t\t\t\t\tonload: () => {\r\n\t\t\t\t\t\tresolve(howl);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonloaderror: () => {\r\n\t\t\t\t\t\tconst e = new Error('invalid resource: ' + target);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\txhr: xhr.requestOptions\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})()\r\n\t\t.then(howl => new SoundLoaderResource(howl, null))\r\n\t\t.catch(e => new SoundLoaderResource(null, e));\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as SoundLoader from '../loader/SoundLoader';\r\nimport * as utils from '../utils/index';\r\n\r\nexport interface ISoundManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<SoundLoader.TSoundLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface ISoundDictionary extends ManifestBase.IRawResourceDictionary<SoundLoader.TSoundLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class SoundManifest extends ManifestBase.ManifestBase<SoundLoader.TSoundLoaderTarget, SoundLoader.TSoundLoaderRawResource, SoundLoader.SoundLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new SoundLoader.SoundLoader();\r\n\t}\r\n}","import * as ManifestBase from './ManifestBase';\r\nimport * as JsonLoader from '../loader/JsonLoader';\r\n\r\nexport interface IJsonManifestTargetDictionary extends ManifestBase.IManifestTargetDictionary<JsonLoader.TJsonLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsonDictionary extends ManifestBase.IRawResourceDictionary<JsonLoader.TJsonLoaderRawResource> {\r\n\r\n}\r\n\r\nexport class JsonManifest extends ManifestBase.ManifestBase<JsonLoader.TJsonLoaderTarget, JsonLoader.TJsonLoaderRawResource, JsonLoader.JsonLoaderResource> {\r\n\tprotected _createLoader() {\r\n\t\treturn new JsonLoader.JsonLoader();\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { Container } from '../Container';\r\nimport { IRawResourceDictionary } from './ManifestBase';\r\n\r\nexport interface IContentLibrary {\r\n\t[name: string]: typeof PIXI.Container | typeof Container\r\n}\r\n\r\nexport interface IVariableDictionary {\r\n\t[name: string]: any;\r\n}\r\n\r\nexport interface IContentResourceDictionary {\r\n\t[name: string]: IRawResourceDictionary<any>;\r\n}\r\n\r\nexport interface IContentDeliverData {\r\n\twidth: number,\r\n\theight: number,\r\n\tlib: IContentLibrary,\r\n\tresources: IContentResourceDictionary,\r\n\tvars: IVariableDictionary\r\n}\r\n\r\nexport class ContentDeliver {\r\n\tprotected _piximData: IContentDeliverData;\r\n\t\r\n\tconstructor(data: IContentDeliverData) {\r\n\t\tthis._piximData = {\r\n\t\t\twidth: data.width,\r\n\t\t\theight: data.height,\r\n\t\t\tlib: data.lib,\r\n\t\t\tresources: data.resources,\r\n\t\t\tvars: data.vars\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content width.\r\n\t */\r\n\tget width(): number {\r\n\t\treturn this._piximData.width;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Content height.\r\n\t */\r\n\tget height(): number {\r\n\t\treturn this._piximData.height;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined classes in content.\r\n\t */\r\n\tget lib(): IContentLibrary {\r\n\t\treturn this._piximData.lib;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loaded resources.\r\n\t */\r\n\tget resources(): IContentResourceDictionary {\r\n\t\treturn this._piximData.resources;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defined variables by framework.\r\n\t */\r\n\tget vars() {\r\n\t\treturn this._piximData.vars;\r\n\t}\r\n}","import * as PIXI from 'pixi.js';\r\nimport { ManifestBase, IManifestClass, IRawResourceDictionary, IManifestTargetDictionary, IManifestOption, IManifestLoaderOption, IManifestLoaderXhrOptionFacotryDelegate, TManifestResourceVersion, TLoaderXhrOption, EVENT_LOADER_ASSET_LOADED } from './ManifestBase';\r\nimport { TextureManifest, ITextureManifestTargetDictionary } from './TextureManifest';\r\nimport { SpritesheetManifest, ISpritesheetManifestTargetDictionary } from './SpritesheetManifest';\r\nimport { SoundManifest, ISoundManifestTargetDictionary } from './SoundManifest';\r\nimport { JsonManifest, IJsonManifestTargetDictionary } from './JsonManifest';\r\nimport { ContentDeliver, IContentDeliverData, IVariableDictionary, IContentLibrary, IContentResourceDictionary } from './ContentDeliver';\r\nimport { Emitter } from '@tawaship/emitter';\r\n\r\nexport interface IContentAssetBasepath {\r\n\t[manifestKey: string]: string;\r\n}\r\n\r\nexport interface IContentAssetVersion {\r\n\t[manifestKey: string]: TManifestResourceVersion;\r\n}\r\n\r\nexport interface IContentAssetXhrOption {\r\n\t[manifestKey: string]: TLoaderXhrOption;\r\n}\r\n\r\nexport interface IContentAssetOtherOption {\r\n\t[manifestKey: string]: { [key: string]: any };\r\n}\r\n\r\nexport interface IContentManifests {\r\n\t[manifestKey: string]: ManifestBase<any, any, any>;\r\n}\r\n\r\nexport interface IContentConfigData {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface IContentData {\r\n\tcontentID: string;\r\n\toptions: IContentOption;\r\n\t$: ContentDeliver;\r\n\tmanifests: IContentManifests;\r\n\tadditionalManifests: IContentManifests;\r\n\tpreloadPromise: Promise<void> | null;\r\n\tpostloadPromise: Promise<void> | null;\r\n\tcontentDeliverData: IContentDeliverData;\r\n}\r\n\r\nexport interface TContents {\r\n\t[name: string]: typeof Content;\r\n};\r\n\r\nexport interface IContentOption {\r\n\t/**\r\n\t * Asset root path.\r\n\t */\r\n\tbasepath?: string | IContentAssetBasepath;\r\n\t\r\n\t/**\r\n\t * Asset version.\r\n\t */\r\n\tversion?: TManifestResourceVersion | IContentAssetVersion;\r\n\t\r\n\t/**\r\n\t * A header given when loading an asset, or a function that returns a header.\r\n\t * If a value that can be considered true is specified, fetch API will be used instead of the default Loader when loading each asset.\r\n\t */\r\n\txhr?: TLoaderXhrOption;\r\n\t\r\n\tothers?: IContentAssetOtherOption;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _contents: TContents = {};\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet _contentID: number = 0;\r\n\r\nexport interface IContentStaticData {\r\n\tconfig: IContentConfigData;\r\n\tmanifests: IContentManifests;\r\n\tlib: IContentLibrary;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createManifests(): IContentManifests {\r\n\tconst res: IContentManifests = {};\r\n\t\r\n\tfor (let i in _manifests) {\r\n\t\tres[i] = new _manifests[i](i);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createContentStatic(): IContentStaticData {\r\n\treturn {\r\n\t\tconfig: {\r\n\t\t\twidth: 450,\r\n\t\t\theight: 800\r\n\t\t},\r\n\t\tmanifests: createManifests(),\r\n\t\tlib: {}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _manifests: { [key: string]: IManifestClass } = {};\r\n\r\nexport class Content extends Emitter {\r\n\tprotected static _piximData: IContentStaticData;\r\n\tprotected _piximData: IContentData;\r\n\tprivate _loadedResourceHandler: (data: { target: any, resource: any }) => void;\r\n\t\r\n\tconstructor(options: IContentOption = {}, piximData: IContentStaticData = Content._piximData) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._loadedResourceHandler = (data: { target: any, resource: any }) => {\r\n\t\t\tthis.emit(EVENT_LOADER_ASSET_LOADED, data);\r\n\t\t};\r\n\t\t\r\n\t\tconst contentDeliverData = {\r\n\t\t\twidth: piximData.config.width,\r\n\t\t\theight: piximData.config.height,\r\n\t\t\tlib: piximData.lib,\r\n\t\t\tresources: {},\r\n\t\t\tvars: {}\r\n\t\t};\r\n\t\t\r\n\t\tthis._piximData = {\r\n\t\t\tcontentID: (++_contentID).toString(),\r\n\t\t\toptions,\r\n\t\t\t$: new ContentDeliver(contentDeliverData),\r\n\t\t\tmanifests: piximData.manifests,\r\n\t\t\tadditionalManifests: createManifests(),\r\n\t\t\tpreloadPromise: null,\r\n\t\t\tpostloadPromise: null,\r\n\t\t\tcontentDeliverData\r\n\t\t};\r\n\t\t\r\n\t\tfor (let i in this._piximData.manifests) {\r\n\t\t\tthis._piximData.manifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in this._piximData.additionalManifests) {\r\n\t\t\tthis._piximData.additionalManifests[i].on(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register manifest class.\r\n\t */\r\n\tstatic registerManifest(key: string, Manifest: IManifestClass) {\r\n\t\t_manifests[key] = Manifest;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a cloned content class.\r\n\t * \r\n\t * @param key Content name.\r\n\t * @return Cloned content class.\r\n\t */\r\n\tstatic create(key: string = ''): typeof Content {\r\n\t\tif (key && key in _contents) {\r\n\t\t\tthrow new Error(`Content key '${key}' has already exists.`);\r\n\t\t}\r\n\t\t\r\n\t\tclass ContentClone extends Content {\r\n\t\t\tprotected static _piximData: IContentStaticData = createContentStatic();\r\n\t\t\t\r\n\t\t\tconstructor(options: IContentOption = {}) {\r\n\t\t\t\tsuper(options, ContentClone._piximData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!key) {\r\n\t\t\treturn ContentClone;\r\n\t\t}\r\n\t\t\r\n\t\treturn _contents[key] = ContentClone;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get cloned content.\r\n\t */\r\n\tstatic get(key: string) {\r\n\t\treturn _contents[key];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove cloned content.\r\n\t * \r\n\t * @function Pixim.Content.removeContent\r\n\t * @param key {string}\r\n\t */\r\n\tstatic remove(key: string): void {\r\n\t\tdelete(_contents[key]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for class.\r\n\t */\r\n\tstatic defineTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}) {\r\n\t\tif (!this._piximData.manifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.manifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for class.\r\n\t */\r\n\tstatic defineImages(targets: ITextureManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('images', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for class.\r\n\t */\r\n\tstatic defineSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for class.\r\n\t */\r\n\tstatic defineSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for class.\r\n\t */\r\n\tstatic defineJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}) {\r\n\t\treturn this.defineTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set the content settings.\r\n\t * \r\n\t * @param data Config data.\r\n\t */\r\n\tstatic setConfig(data: IContentConfigData) {\r\n\t\t//this._piximData.config.fps = data.fps;\r\n\t\tthis._piximData.config.width = data.width;\r\n\t\tthis._piximData.config.height = data.height;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define libraries that is material of the content.<br />\r\n\t * In the constructor named root, Application passes a reference to ContentDeliver as an argument.<br />\r\n\t * By giving this argument to the child further, you will be able to access the data freely from anywhere.\r\n\t * \r\n\t * @param data Library data.\r\n\t */\r\n\tstatic defineLibraries(data: IContentLibrary) {\r\n\t\tfor (let i in data) {\r\n\t\t\tthis._piximData.lib[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * ID of this content.\r\n\t */\r\n\tget contentID(): string {\r\n\t\treturn this._piximData.contentID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddTargets<T>(key: string, targets: IManifestTargetDictionary<T>, options: IManifestOption = {}): this {\r\n\t\tif (!this._piximData.additionalManifests[key]) {\r\n\t\t\tconsole.warn(`Manifest '${key}' is not registered.`);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis._piximData.additionalManifests[key].add(targets, options);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define image assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddImages(data: ITextureManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('images', data, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define spritesheet assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSpritesheets(targets: ISpritesheetManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('spritesheets', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define sound assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddSounds(targets: ISoundManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('sounds', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define json assets for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddJsons(targets: IJsonManifestTargetDictionary, options: IManifestOption = {}): this {\r\n\t\treturn this.addTargets('jsons', targets, options);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Define valriables for instance.\r\n\t * \r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\taddVars(data: IVariableDictionary): this {\r\n\t\tfor (let i in data) {\r\n\t\t\t this._piximData.$.vars[i] = data[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare content.\r\n\t */\r\n\tprepareAsync(): Promise<void> {\r\n\t\treturn this.preloadClassAssetAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn this.preloadInstanceAssetAsync();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build content.\r\n\t */\r\n\tbuildAsync(): Promise<PIXI.Container> {\r\n\t\tif (!this._piximData.$.lib.root) {\r\n\t\t\tthrow new Error('There is no library named \"root\" in the content.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.prepareAsync()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new this._piximData.$.lib.root(this._piximData.$);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads class assets.\r\n\t */\r\n\tpreloadClassAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.preloadPromise) {\r\n\t\t\treturn this._piximData.preloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.preloadPromise = this._loadAssetAsync(this._piximData.manifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.preloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Preloads instance assets.\r\n\t */\r\n\tpreloadInstanceAssetAsync(): Promise<void> {\r\n\t\tif (this._piximData.postloadPromise) {\r\n\t\t\treturn this._piximData.postloadPromise;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._piximData.postloadPromise = this._loadAssetAsync(this._piximData.additionalManifests)\r\n\t\t\t.catch(e => {\r\n\t\t\t\tthis._piximData.postloadPromise = null;\r\n\t\t\t\t\r\n\t\t\t\tthrow e;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tconst contentDeliverData = this._piximData.contentDeliverData;\r\n\t\t\r\n\t\tcontentDeliverData.lib = {};\r\n\t\tcontentDeliverData.vars = {};\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\t\r\n\t\tfor (let i in manifests) {\r\n\t\t\tmanifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\tadditionalManifests[i].off(EVENT_LOADER_ASSET_LOADED, this._loadedResourceHandler);\r\n\t\t}\r\n\t\t\r\n\t\tconst resources = contentDeliverData.resources;\r\n\t\tfor (let i in resources) {\r\n\t\t\tresources[i] = {};\r\n\t\t}\r\n\t}\r\n\t\r\n\tget classAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst manifests = this._piximData.manifests;\r\n\t\tfor (let i in manifests) {\r\n\t\t\ttotal += manifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget instanceAssetCount() {\r\n\t\tlet total = 0;\r\n\t\t\r\n\t\tconst additionalManifests = this._piximData.additionalManifests;\r\n\t\tfor (let i in additionalManifests) {\r\n\t\t\ttotal += additionalManifests[i].count;\r\n\t\t}\r\n\t\t\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\tget assetCount() {\r\n\t\treturn this.classAssetCount + this.instanceAssetCount;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @fires [[LoaderBase.EVENT_LOADER_ASSET_LOADED]]\r\n\t */\r\n\tprivate _loadAssetAsync(manifests: IContentManifests): Promise<void> {\r\n\t\tconst loaderCount = Object.keys(manifests).length;\r\n\t\t\r\n\t\tif (loaderCount === 0) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\t\r\n\t\tconst options = this._piximData.options;\r\n\t\t\r\n\t\tconst basepath = (() => {\r\n\t\t\tif (typeof(options.basepath) === 'undefined') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.basepath) === 'string') {\r\n\t\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tbasepath[i] = options.basepath.replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn basepath;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst basepath: IContentAssetBasepath = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tbasepath[i] = (options.basepath[i] || '').replace(/(.+[^\\/])$/, '$1/');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn basepath;\r\n\t\t})();\r\n\t\t\r\n\t\tconst version = (() => {\r\n\t\t\tif (typeof(options.version) === 'undefined') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = '';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.version) === 'string' || typeof(options.version) === 'number') {\r\n\t\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tversion[i] = options.version;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn version;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst version: IContentAssetVersion = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tversion[i] = options.version[i] || '';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn version;\r\n\t\t})();\r\n\t\t\r\n\t\tconst xhr = (() => {\r\n\t\t\tif (typeof(options.xhr) === 'undefined') {\r\n\t\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\txhr[i] = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof(options.xhr) === 'function') {\r\n\t\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\txhr[i] = ((type: string, f: IManifestLoaderXhrOptionFacotryDelegate) => {\r\n\t\t\t\t\t\treturn (url: string) => {\r\n\t\t\t\t\t\t\treturn f(type, url);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})(i, options.xhr);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst xhr: IContentAssetXhrOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\txhr[i] = options.xhr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn xhr;\r\n\t\t})();\r\n\t\t\r\n\t\tconst others = (() => {\r\n\t\t\tif (typeof(options.others) === 'undefined') {\r\n\t\t\t\tconst others: IContentAssetOtherOption = {};\r\n\t\t\t\tfor (let i in manifests) {\r\n\t\t\t\t\tothers[i] = [];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn others;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst others: IContentAssetOtherOption = {};\r\n\t\t\tfor (let i in manifests) {\r\n\t\t\t\tothers[i] = options.others[i] || {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn others;\r\n\t\t})();\r\n\t\t\r\n\t\tconst loaderOptions: { [manifestKey: string]: IManifestLoaderOption } = {};\r\n\t\tfor (let i in manifests) {\r\n\t\t\tloaderOptions[i] = {\r\n\t\t\t\tbasepath: basepath[i],\r\n\t\t\t\tversion: version[i],\r\n\t\t\t\txhr: xhr[i],\r\n\t\t\t\tothers: others[i]\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tconst resources: IContentResourceDictionary = this._piximData.$.resources;\r\n\t\t\r\n\t\tconst promises: Promise<IRawResourceDictionary<any>>[] = [];\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i in manifests) {\r\n\t\t\tkeys.push(i);\r\n\t\t\t\r\n\t\t\tconst manifest = manifests[i];\r\n\t\t\t\r\n\t\t\tpromises.push(manifest.getAsync(loaderOptions[i]));\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.all(promises)\r\n\t\t\t.then(resolver => {\r\n\t\t\t\tfor (let i: number = 0; i < resolver.length;i++) {\r\n\t\t\t\t\tresources[keys[i]] = resources[keys[i]] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j in resolver[i]) {\r\n\t\t\t\t\t\tresources[keys[i]][j] = resolver[i][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nContent.registerManifest('images', TextureManifest);\r\nContent.registerManifest('spritesheets', SpritesheetManifest);\r\nContent.registerManifest('sounds', SoundManifest);\r\nContent.registerManifest('jsons', JsonManifest);","import * as LoaderBase from './LoaderBase';\r\n\r\nexport type TJsLoaderRawResource = string;\r\n\r\nexport class JsLoaderResource extends LoaderBase.LoaderResource<TJsLoaderRawResource> {\r\n\tdestroy() {\r\n\t\tthis._data = '';\r\n\t}\r\n\t\r\n\tref() {\r\n\t\tconst script = document.body.appendChild(document.createElement('script'));\r\n\t\tscript.text = this._data;\r\n\t}\r\n}\r\n\r\nexport type TJsLoaderTarget = string;\r\n\r\nexport interface IJsLoaderTargetDictionary extends LoaderBase.ILoaderTargetDictionary<TJsLoaderTarget> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderResourceDictionary extends LoaderBase.ILoaderResourceDictionary<JsLoaderResource> {\r\n\r\n}\r\n\r\nexport interface IJsLoaderOption extends LoaderBase.ILoaderOption {\r\n\r\n}\r\n\r\nexport class JsLoader extends LoaderBase.LoaderBase<TJsLoaderTarget, TJsLoaderRawResource, JsLoaderResource> {\r\n\tprotected _loadAsync(target: TJsLoaderTarget, options: IJsLoaderOption = {}) {\r\n\t\treturn (() => {\r\n\t\t\tconst xhr = this._resolveXhr(target, options.xhr)\r\n\t\t\tif (!xhr) {\r\n\t\t\t\treturn fetch(target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn fetch(xhr.src, xhr.requestOptions);\r\n\t\t})()\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tthrow res.statusText;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn res.text();\r\n\t\t})\r\n\t\t.then(text => new JsLoaderResource(text, null))\r\n\t\t.catch((e: any) => new JsLoaderResource('', e));\r\n\t}\r\n}"],"names":["Emitter","this","_events","_on","type","callback","once","const","events","i","length","push","on","off","splice","_emit","context","targets","event","let","apply","args","emit","cemit","_emitAll","emitAll","cemitAll","clear","_Emitter","Task","callbacks","_taskData","enabled","index","value","add","prototypeAccessors","Array","isArray","list","Function","done","task","_to","Number","first","prev","next","to","finish","reset","destroy","tasks","super","_piximData","emitter","_Task","Container","taskEnabledChildren","updateTask","e","taskEnabled","PIXI.Container","Layer","taskHandler","obj","children","child","Application","pixiOptions","piximOptions","app","PIXI.Application","stop","view","style","position","autoAdjust","isRun","container","document","body","layers","autoAdjuster","roots","contents","ticker","delta","stage","fullScreen","parentNode","appendChild","_hasLayer","name","addLayer","addChild","removeLayer","removeChild","attachAsync","content","layerName","buildAsync","then","root","detach","contentID","stageOptions","_destroyRoot","play","start","pause","paused","window","removeEventListener","addEventListener","preDestroy","removeView","rect","r","x","y","width","offsetWidth","innerWidth","height","offsetHeight","innerHeight","adjustHeight","toCenter","toTop","adjustWidth","toMiddle","toLeft","w","h","horizontal","hol","left","_getViewRect","toRight","vertical","ver","top","toBottom","parseInt","replace","resolveUri","basepath","uri","version","isUrl","preUri","resolvePath","resolveQuery","_fv","path","PIXI.utils","url","resolve","indexOf","queries","q","t","split","search","join","EVENT_LOADER_ASSET_LOADED","ManifestBase","_type","options","unrequired","_data","target","count","Object","keys","getAsync","Promise","res","loader","_createLoader","onLoaded","resource","loaderOptions","_getAppendOption","data","src","_resolveTarget","assign","xhr","loadAllAsync","resources","error","_resources","utils.resolveUri","destroyResources","LoaderResource","_error","LoaderBase","loadAsync","_loadAsync","promises","all","_resolveXhr","utils.isUrl","requestOptions","BlobLoaderResource","URL","webkitURL","revokeObjectURL","LoaderBase.LoaderResource","BlobLoader","fetch","ok","statusText","blob","createObjectURL","catch","LoaderBase.LoaderBase","TextureLoaderResource","removeCache","texture","PIXI.Texture","removeFromCache","baseTexture","PIXI.BaseTexture","TextureLoader","_loadBaseTextureAsync","HTMLImageElement","HTMLVideoElement","crossOrigin","reject","bt","from","valid","TextureManifest","TextureLoader.TextureLoader","ManifestBase.ManifestBase","JsonLoaderResource","JsonLoader","json","SpritesheetLoaderResource","SpritesheetLoader","_loadTextureAsync","_loadJsonAsync","textures","meta","image","frames","textureVersion","ss","PIXI.Spritesheet","parse","TextureLoader.TextureLoaderResource","SpritesheetManifest","SpritesheetLoader.SpritesheetLoader","others","SoundLoaderResource","unload","SoundLoader","howl","Howl","onload","onloaderror","Error","SoundManifest","SoundLoader.SoundLoader","JsonManifest","JsonLoader.JsonLoader","ContentDeliver","lib","vars","_contents","_contentID","createManifests","_manifests","Content","piximData","_loadedResourceHandler","contentDeliverData","config","toString","$","manifests","additionalManifests","preloadPromise","postloadPromise","registerManifest","key","Manifest","create","ContentClone","get","remove","defineTargets","console","warn","defineImages","defineSpritesheets","defineSounds","defineJsons","setConfig","defineLibraries","addTargets","addImages","addSpritesheets","addSounds","addJsons","addVars","prepareAsync","preloadClassAssetAsync","preloadInstanceAssetAsync","_loadAssetAsync","classAssetCount","total","instanceAssetCount","assetCount","f","manifest","resolver","j","JsLoaderResource","ref","createElement","text","JsLoader"],"mappings":"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"}